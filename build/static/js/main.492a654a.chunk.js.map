{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["CustomHitsPerPage","connectHitsPerPage","items","refine","options","onChange","item","value","searchClient","algoliasearch","initIndex","search","then","hits","console","log","App","className","href","InstantSearch","indexName","RefinementList","attribute","showMore","translations","isOpen","noResults","submitTitle","resetTitle","placeholder","defaultRefinement","label","SearchBox","Hits","hitComponent","Hit","Component","props","src","hit","imageUrl","height","width","Highlight","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4UAcMA,EAAoBC,aAAmB,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,OAAV,OAC3C,cAAC,IAAD,CAAQC,QAASF,EAAOG,SAAU,SAAAC,GAAI,OAAIH,EAAOG,EAAKC,aAGlDC,EAAeC,IAAc,aAAc,oCAEnCD,EAAaE,UAAU,qBAE/BC,OAAO,IAAIC,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACvBC,QAAQC,IAAIF,M,IAGRG,E,4JACJ,WACE,OACE,gCACE,yBAAQC,UAAU,SAAlB,UACE,oBAAIA,UAAU,eAAd,SACE,mBAAGC,KAAK,IAAR,uCAEF,oBAAGD,UAAU,kBAAb,kBACQ,GACN,mBAAGC,KAAK,iDAAR,uCAMJ,qBAAKD,UAAU,YAAf,SACE,cAACE,EAAA,EAAD,CAAeX,aAAcA,EAAcY,UAAU,oBAArD,SACE,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,wBAAf,UAEE,cAACI,EAAA,EAAD,CAEEC,UAAU,WACVC,UAAU,EACVC,aAAc,CACZD,SAAU,SAAAE,GACR,OAAOA,EAAS,YAAc,cAIlCC,UAAU,aACVC,YAAY,4BACZC,WAAW,2BACXC,YAAY,mBAEd,cAAC7B,EAAD,CAEE8B,kBAAmB,IACnB5B,MAAO,CACL,CAAE6B,MAAO,mBAAoBxB,MAAO,IACpC,CAAEwB,MAAO,mBAAoBxB,MAAO,IACpC,CAAEwB,MAAO,mBAAoBxB,MAAO,IACpC,CAAEwB,MAAO,oBAAqBxB,MAAO,WAK3C,sBAAKU,UAAU,wBAAf,UACE,cAACe,EAAA,EAAD,CAAWf,UAAU,YAAYY,YAAY,KAC7C,cAACI,EAAA,EAAD,CAAMC,aAAcC,qB,GAlDlBC,aA6DlB,SAASD,EAAIE,GACX,OACE,oCACE,qBAAKC,IAAKD,EAAME,IAAIC,SAAUC,OAAO,OAAOC,MAAM,SAElD,6BACE,cAACC,EAAA,EAAD,CAAWrB,UAAU,OAAOiB,IAAKF,EAAME,QAEzC,qBAAKtB,UAAU,kBAAf,SACE,cAAC0B,EAAA,EAAD,CAAWrB,UAAU,mBAAmBiB,IAAKF,EAAME,QAErD,2CACY,cAACI,EAAA,EAAD,CAAWrB,UAAU,SAASiB,IAAKF,EAAME,SAErD,0CACW,cAACI,EAAA,EAAD,CAAWrB,UAAU,QAAQiB,IAAKF,EAAME,SAGnD,0CACW,cAACI,EAAA,EAAD,CAAWrB,UAAU,QAAQiB,IAAKF,EAAME,MADnD,IAC2D,cAACI,EAAA,EAAD,CAAWrB,UAAU,WAAWiB,IAAKF,EAAME,SAEtG,+CACgB,cAACI,EAAA,EAAD,CAAWrB,UAAU,aAAaiB,IAAKF,EAAME,YAapDvB,QC9GA4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlC,MAAK,YAAkD,IAA/CmC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.492a654a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport algoliasearch from 'algoliasearch/lite';\nimport {\n  InstantSearch,\n  Hits,\n  SearchBox,\n  RefinementList, connectRefinementList,\n  Highlight,\n  connectHitsPerPage,\n} from 'react-instantsearch-dom';\nimport Select from 'react-select';\nimport PropTypes from 'prop-types';\nimport './App.css';\n\nconst CustomHitsPerPage = connectHitsPerPage(({ items, refine }) => (\n  <Select options={items} onChange={item => refine(item.value)} />\n));\n\nconst searchClient = algoliasearch('GF9DTO0HM0', 'daf7d7e0cc8a9cdc3f34fbd6e36197d9');\n\nconst index = searchClient.initIndex('furniture_records');\n\nindex.search('').then(({ hits }) => {\n  console.log(hits);\n});\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <header className=\"header\">\n          <h1 className=\"header-title\">\n            <a href=\"/\">react-instantsearch-app</a>\n          </h1>\n          <p className=\"header-subtitle\">\n            using{''}\n            <a href=\"https://github.com/algolia/react-instantsearch\">\n              React InstantSearch\n            </a>\n          </p>\n        </header>\n\n        <div className=\"container\">\n          <InstantSearch searchClient={searchClient} indexName=\"furniture_records\">\n            <div className=\"search-panel\">\n              <div className=\"search-panel__filters\">\n\n                <RefinementList\n\n                  attribute=\"category\"\n                  showMore={true}\n                  translations={{\n                    showMore: isOpen => {\n                      return isOpen ? \"Show less\" : \"Show more\";\n                    }\n                  }}\n\n                  noResults='No results'\n                  submitTitle='Submit your search query.'\n                  resetTitle='Clear your search query.'\n                  placeholder='Search here...'\n                />\n                <CustomHitsPerPage\n\n                  defaultRefinement={100}\n                  items={[\n                    { label: '20 hits per page', value: 20 },\n                    { label: '40 hits per page', value: 40 },\n                    { label: '60 hits per page', value: 60 },\n                    { label: '100 hits per page', value: 100 },\n                  ]}\n                />\n              </div>\n\n              <div className=\"search-panel__results\">\n                <SearchBox className=\"searchbox\" placeholder=\"\" />\n                <Hits hitComponent={Hit} />\n              </div>\n            </div>\n          </InstantSearch>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nfunction Hit(props) {\n  return (\n    <article >\n      <img src={props.hit.imageUrl} height=\"100%\" width=\"100%\" />\n\n      <h4>\n        <Highlight attribute=\"name\" hit={props.hit} />\n      </h4>\n      <div className=\"hit-description\">\n        <Highlight attribute=\"shortDescription\" hit={props.hit} />\n      </div>\n      <p>\n        height :  <Highlight attribute=\"height\" hit={props.hit} />\n      </p>\n      <p>\n        width :  <Highlight attribute=\"width\" hit={props.hit} />\n      </p>\n\n      <p >\n        price :  <Highlight attribute=\"price\" hit={props.hit} /> <Highlight attribute=\"currency\" hit={props.hit} />\n      </p>\n      <p>\n        sourceSite :  <Highlight attribute=\"sourceSite\" hit={props.hit} />\n      </p>\n    </article>\n  );\n}\n\nHit.propTypes = {\n  hit: PropTypes.object.isRequired,\n};\n\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}