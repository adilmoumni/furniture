{"ast":null,"code":"import { createSuitMixin as e } from \"../mixins/suit.js\";\nimport { createWidgetMixin as t } from \"../mixins/widget.js\";\nimport { connectNumericMenu as s } from \"instantsearch.js/es/connectors\";\nimport { createPanelConsumerMixin as i } from \"../mixins/panel.js\";\nexport default {\n  render: function () {\n    var e = this,\n        t = e.$createElement,\n        s = e._self._c || t;\n    return e.state ? s(\"div\", {\n      class: [e.suit(), !e.canRefine && e.suit(\"\", \"noRefinement\")]\n    }, [e._t(\"default\", [s(\"ul\", {\n      class: [e.suit(\"list\")]\n    }, e._l(e.state.items, function (t) {\n      return s(\"li\", {\n        key: t.label,\n        class: [e.suit(\"item\"), t.isRefined && e.suit(\"item\", \"selected\")]\n      }, [s(\"label\", {\n        class: e.suit(\"label\")\n      }, [s(\"input\", {\n        class: e.suit(\"radio\"),\n        attrs: {\n          type: \"radio\",\n          name: e.attribute\n        },\n        domProps: {\n          value: t.value,\n          checked: t.isRefined\n        },\n        on: {\n          change: function (t) {\n            return e.state.refine(t.target.value);\n          }\n        }\n      }), e._v(\" \"), s(\"span\", {\n        class: e.suit(\"labelText\")\n      }, [e._v(e._s(t.label))])])]);\n    }), 0)], {\n      items: e.state.items,\n      canRefine: e.canRefine,\n      refine: e.state.refine,\n      createURL: e.state.createURL,\n      sendEvent: e.state.sendEvent\n    })], 2) : e._e();\n  },\n  staticRenderFns: [],\n  name: \"AisNumericMenu\",\n  mixins: [t({\n    connector: s\n  }), e({\n    name: \"NumericMenu\"\n  }), i({\n    mapStateToCanRefine: function (e) {\n      return !1 === e.hasNoResults;\n    }\n  })],\n  props: {\n    attribute: {\n      type: String,\n      required: !0\n    },\n    items: {\n      type: Array,\n      required: !0\n    },\n    transformItems: {\n      type: Function,\n      default: void 0\n    }\n  },\n  computed: {\n    widgetParams: function () {\n      return {\n        attribute: this.attribute,\n        transformItems: this.transformItems,\n        items: this.items\n      };\n    },\n    canRefine: function () {\n      return !this.state.hasNoResults;\n    }\n  }\n};","map":{"version":3,"sources":["../../../../src/components/NumericMenu.vue"],"names":["render","name","mixins","createWidgetMixin","connector","connectNumericMenu","createSuitMixin","createPanelConsumerMixin","mapStateToCanRefine","state","hasNoResults","props","attribute","type","String","required","items","Array","transformItems","Function","default","undefined","computed","widgetParams","this","canRefine"],"mappings":"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","sourcesContent":["<template>\n  <div\n    v-if=\"state\"\n    :class=\"[suit(), !canRefine && suit('', 'noRefinement')]\"\n  >\n    <slot\n      :items=\"state.items\"\n      :can-refine=\"canRefine\"\n      :refine=\"state.refine\"\n      :createURL=\"state.createURL\"\n      :send-event=\"state.sendEvent\"\n    >\n      <ul :class=\"[suit('list')]\">\n        <li\n          v-for=\"item in state.items\"\n          :key=\"item.label\"\n          :class=\"[suit('item'), item.isRefined && suit('item', 'selected')]\"\n        >\n          <label :class=\"suit('label')\">\n            <input\n              type=\"radio\"\n              :class=\"suit('radio')\"\n              :name=\"attribute\"\n              :value=\"item.value\"\n              :checked=\"item.isRefined\"\n              @change=\"state.refine($event.target.value)\"\n            >\n            <span :class=\"suit('labelText')\">{{ item.label }}</span>\n          </label>\n        </li>\n      </ul>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectNumericMenu } from 'instantsearch.js/es/connectors';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisNumericMenu',\n  mixins: [\n    createWidgetMixin({ connector: connectNumericMenu }),\n    createSuitMixin({ name: 'NumericMenu' }),\n    createPanelConsumerMixin({\n      mapStateToCanRefine: state => state.hasNoResults === false,\n    }),\n  ],\n  props: {\n    attribute: {\n      type: String,\n      required: true,\n    },\n    items: {\n      type: Array,\n      required: true,\n    },\n    transformItems: {\n      type: Function,\n      default: undefined,\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        attribute: this.attribute,\n        transformItems: this.transformItems,\n        items: this.items,\n      };\n    },\n    canRefine() {\n      return !this.state.hasNoResults;\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}