{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport findIndex from './findIndex';\nimport uniq from './uniq';\n\nvar mergeWithRest = function mergeWithRest(left, right) {\n  var facets = right.facets,\n      disjunctiveFacets = right.disjunctiveFacets,\n      facetsRefinements = right.facetsRefinements,\n      facetsExcludes = right.facetsExcludes,\n      disjunctiveFacetsRefinements = right.disjunctiveFacetsRefinements,\n      numericRefinements = right.numericRefinements,\n      tagRefinements = right.tagRefinements,\n      hierarchicalFacets = right.hierarchicalFacets,\n      hierarchicalFacetsRefinements = right.hierarchicalFacetsRefinements,\n      ruleContexts = right.ruleContexts,\n      rest = _objectWithoutProperties(right, [\"facets\", \"disjunctiveFacets\", \"facetsRefinements\", \"facetsExcludes\", \"disjunctiveFacetsRefinements\", \"numericRefinements\", \"tagRefinements\", \"hierarchicalFacets\", \"hierarchicalFacetsRefinements\", \"ruleContexts\"]);\n\n  return left.setQueryParameters(rest);\n}; // Merge facets\n\n\nvar mergeFacets = function mergeFacets(left, right) {\n  return right.facets.reduce(function (_, name) {\n    return _.addFacet(name);\n  }, left);\n};\n\nvar mergeDisjunctiveFacets = function mergeDisjunctiveFacets(left, right) {\n  return right.disjunctiveFacets.reduce(function (_, name) {\n    return _.addDisjunctiveFacet(name);\n  }, left);\n};\n\nvar mergeHierarchicalFacets = function mergeHierarchicalFacets(left, right) {\n  return left.setQueryParameters({\n    hierarchicalFacets: right.hierarchicalFacets.reduce(function (facets, facet) {\n      var index = findIndex(facets, function (_) {\n        return _.name === facet.name;\n      });\n\n      if (index === -1) {\n        return facets.concat(facet);\n      }\n\n      var nextFacets = facets.slice();\n      nextFacets.splice(index, 1, facet);\n      return nextFacets;\n    }, left.hierarchicalFacets)\n  });\n}; // Merge facet refinements\n\n\nvar mergeTagRefinements = function mergeTagRefinements(left, right) {\n  return right.tagRefinements.reduce(function (_, value) {\n    return _.addTagRefinement(value);\n  }, left);\n};\n\nvar mergeFacetRefinements = function mergeFacetRefinements(left, right) {\n  return left.setQueryParameters({\n    facetsRefinements: _objectSpread(_objectSpread({}, left.facetsRefinements), right.facetsRefinements)\n  });\n};\n\nvar mergeFacetsExcludes = function mergeFacetsExcludes(left, right) {\n  return left.setQueryParameters({\n    facetsExcludes: _objectSpread(_objectSpread({}, left.facetsExcludes), right.facetsExcludes)\n  });\n};\n\nvar mergeDisjunctiveFacetsRefinements = function mergeDisjunctiveFacetsRefinements(left, right) {\n  return left.setQueryParameters({\n    disjunctiveFacetsRefinements: _objectSpread(_objectSpread({}, left.disjunctiveFacetsRefinements), right.disjunctiveFacetsRefinements)\n  });\n};\n\nvar mergeNumericRefinements = function mergeNumericRefinements(left, right) {\n  return left.setQueryParameters({\n    numericRefinements: _objectSpread(_objectSpread({}, left.numericRefinements), right.numericRefinements)\n  });\n};\n\nvar mergeHierarchicalFacetsRefinements = function mergeHierarchicalFacetsRefinements(left, right) {\n  return left.setQueryParameters({\n    hierarchicalFacetsRefinements: _objectSpread(_objectSpread({}, left.hierarchicalFacetsRefinements), right.hierarchicalFacetsRefinements)\n  });\n};\n\nvar mergeRuleContexts = function mergeRuleContexts(left, right) {\n  var ruleContexts = uniq([].concat(left.ruleContexts).concat(right.ruleContexts).filter(Boolean));\n\n  if (ruleContexts.length > 0) {\n    return left.setQueryParameters({\n      ruleContexts: ruleContexts\n    });\n  }\n\n  return left;\n};\n\nvar merge = function merge() {\n  for (var _len = arguments.length, parameters = new Array(_len), _key = 0; _key < _len; _key++) {\n    parameters[_key] = arguments[_key];\n  }\n\n  return parameters.reduce(function (left, right) {\n    var hierarchicalFacetsRefinementsMerged = mergeHierarchicalFacetsRefinements(left, right);\n    var hierarchicalFacetsMerged = mergeHierarchicalFacets(hierarchicalFacetsRefinementsMerged, right);\n    var tagRefinementsMerged = mergeTagRefinements(hierarchicalFacetsMerged, right);\n    var numericRefinementsMerged = mergeNumericRefinements(tagRefinementsMerged, right);\n    var disjunctiveFacetsRefinementsMerged = mergeDisjunctiveFacetsRefinements(numericRefinementsMerged, right);\n    var facetsExcludesMerged = mergeFacetsExcludes(disjunctiveFacetsRefinementsMerged, right);\n    var facetRefinementsMerged = mergeFacetRefinements(facetsExcludesMerged, right);\n    var disjunctiveFacetsMerged = mergeDisjunctiveFacets(facetRefinementsMerged, right);\n    var ruleContextsMerged = mergeRuleContexts(disjunctiveFacetsMerged, right);\n    var facetsMerged = mergeFacets(ruleContextsMerged, right);\n    return mergeWithRest(facetsMerged, right);\n  });\n};\n\nexport default merge;","map":{"version":3,"sources":["/Users/adil/Documents/GitHub/furniture-front/node_modules/instantsearch.js/es/lib/utils/mergeSearchParameters.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call","sourceKeys","findIndex","uniq","mergeWithRest","left","right","facets","disjunctiveFacets","facetsRefinements","facetsExcludes","disjunctiveFacetsRefinements","numericRefinements","tagRefinements","hierarchicalFacets","hierarchicalFacetsRefinements","ruleContexts","rest","setQueryParameters","mergeFacets","reduce","_","name","addFacet","mergeDisjunctiveFacets","addDisjunctiveFacet","mergeHierarchicalFacets","facet","index","concat","nextFacets","slice","splice","mergeTagRefinements","addTagRefinement","mergeFacetRefinements","mergeFacetsExcludes","mergeDisjunctiveFacetsRefinements","mergeNumericRefinements","mergeHierarchicalFacetsRefinements","mergeRuleContexts","Boolean","merge","_len","parameters","Array","_key","hierarchicalFacetsRefinementsMerged","hierarchicalFacetsMerged","tagRefinementsMerged","numericRefinementsMerged","disjunctiveFacetsRefinementsMerged","facetsExcludesMerged","facetRefinementsMerged","disjunctiveFacetsMerged","ruleContextsMerged","facetsMerged"],"mappings":"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","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport findIndex from './findIndex';\nimport uniq from './uniq';\n\nvar mergeWithRest = function mergeWithRest(left, right) {\n  var facets = right.facets,\n      disjunctiveFacets = right.disjunctiveFacets,\n      facetsRefinements = right.facetsRefinements,\n      facetsExcludes = right.facetsExcludes,\n      disjunctiveFacetsRefinements = right.disjunctiveFacetsRefinements,\n      numericRefinements = right.numericRefinements,\n      tagRefinements = right.tagRefinements,\n      hierarchicalFacets = right.hierarchicalFacets,\n      hierarchicalFacetsRefinements = right.hierarchicalFacetsRefinements,\n      ruleContexts = right.ruleContexts,\n      rest = _objectWithoutProperties(right, [\"facets\", \"disjunctiveFacets\", \"facetsRefinements\", \"facetsExcludes\", \"disjunctiveFacetsRefinements\", \"numericRefinements\", \"tagRefinements\", \"hierarchicalFacets\", \"hierarchicalFacetsRefinements\", \"ruleContexts\"]);\n\n  return left.setQueryParameters(rest);\n}; // Merge facets\n\n\nvar mergeFacets = function mergeFacets(left, right) {\n  return right.facets.reduce(function (_, name) {\n    return _.addFacet(name);\n  }, left);\n};\n\nvar mergeDisjunctiveFacets = function mergeDisjunctiveFacets(left, right) {\n  return right.disjunctiveFacets.reduce(function (_, name) {\n    return _.addDisjunctiveFacet(name);\n  }, left);\n};\n\nvar mergeHierarchicalFacets = function mergeHierarchicalFacets(left, right) {\n  return left.setQueryParameters({\n    hierarchicalFacets: right.hierarchicalFacets.reduce(function (facets, facet) {\n      var index = findIndex(facets, function (_) {\n        return _.name === facet.name;\n      });\n\n      if (index === -1) {\n        return facets.concat(facet);\n      }\n\n      var nextFacets = facets.slice();\n      nextFacets.splice(index, 1, facet);\n      return nextFacets;\n    }, left.hierarchicalFacets)\n  });\n}; // Merge facet refinements\n\n\nvar mergeTagRefinements = function mergeTagRefinements(left, right) {\n  return right.tagRefinements.reduce(function (_, value) {\n    return _.addTagRefinement(value);\n  }, left);\n};\n\nvar mergeFacetRefinements = function mergeFacetRefinements(left, right) {\n  return left.setQueryParameters({\n    facetsRefinements: _objectSpread(_objectSpread({}, left.facetsRefinements), right.facetsRefinements)\n  });\n};\n\nvar mergeFacetsExcludes = function mergeFacetsExcludes(left, right) {\n  return left.setQueryParameters({\n    facetsExcludes: _objectSpread(_objectSpread({}, left.facetsExcludes), right.facetsExcludes)\n  });\n};\n\nvar mergeDisjunctiveFacetsRefinements = function mergeDisjunctiveFacetsRefinements(left, right) {\n  return left.setQueryParameters({\n    disjunctiveFacetsRefinements: _objectSpread(_objectSpread({}, left.disjunctiveFacetsRefinements), right.disjunctiveFacetsRefinements)\n  });\n};\n\nvar mergeNumericRefinements = function mergeNumericRefinements(left, right) {\n  return left.setQueryParameters({\n    numericRefinements: _objectSpread(_objectSpread({}, left.numericRefinements), right.numericRefinements)\n  });\n};\n\nvar mergeHierarchicalFacetsRefinements = function mergeHierarchicalFacetsRefinements(left, right) {\n  return left.setQueryParameters({\n    hierarchicalFacetsRefinements: _objectSpread(_objectSpread({}, left.hierarchicalFacetsRefinements), right.hierarchicalFacetsRefinements)\n  });\n};\n\nvar mergeRuleContexts = function mergeRuleContexts(left, right) {\n  var ruleContexts = uniq([].concat(left.ruleContexts).concat(right.ruleContexts).filter(Boolean));\n\n  if (ruleContexts.length > 0) {\n    return left.setQueryParameters({\n      ruleContexts: ruleContexts\n    });\n  }\n\n  return left;\n};\n\nvar merge = function merge() {\n  for (var _len = arguments.length, parameters = new Array(_len), _key = 0; _key < _len; _key++) {\n    parameters[_key] = arguments[_key];\n  }\n\n  return parameters.reduce(function (left, right) {\n    var hierarchicalFacetsRefinementsMerged = mergeHierarchicalFacetsRefinements(left, right);\n    var hierarchicalFacetsMerged = mergeHierarchicalFacets(hierarchicalFacetsRefinementsMerged, right);\n    var tagRefinementsMerged = mergeTagRefinements(hierarchicalFacetsMerged, right);\n    var numericRefinementsMerged = mergeNumericRefinements(tagRefinementsMerged, right);\n    var disjunctiveFacetsRefinementsMerged = mergeDisjunctiveFacetsRefinements(numericRefinementsMerged, right);\n    var facetsExcludesMerged = mergeFacetsExcludes(disjunctiveFacetsRefinementsMerged, right);\n    var facetRefinementsMerged = mergeFacetRefinements(facetsExcludesMerged, right);\n    var disjunctiveFacetsMerged = mergeDisjunctiveFacets(facetRefinementsMerged, right);\n    var ruleContextsMerged = mergeRuleContexts(disjunctiveFacetsMerged, right);\n    var facetsMerged = mergeFacets(ruleContextsMerged, right);\n    return mergeWithRest(facetsMerged, right);\n  });\n};\n\nexport default merge;"]},"metadata":{},"sourceType":"module"}