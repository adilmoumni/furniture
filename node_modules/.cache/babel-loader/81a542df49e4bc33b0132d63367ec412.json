{"ast":null,"code":"// typed as any, since it accepts the _real_ js clients, not the interface we otherwise expect\nexport function getAppIdAndApiKey(searchClient) {\n  if (searchClient.transporter) {\n    // searchClient v4\n    var _searchClient$transpo = searchClient.transporter,\n        headers = _searchClient$transpo.headers,\n        queryParameters = _searchClient$transpo.queryParameters;\n    var APP_ID = 'x-algolia-application-id';\n    var API_KEY = 'x-algolia-api-key';\n    var appId = headers[APP_ID] || queryParameters[APP_ID];\n    var apiKey = headers[API_KEY] || queryParameters[API_KEY];\n    return [appId, apiKey];\n  } else {\n    // searchClient v3\n    return [searchClient.applicationID, searchClient.apiKey];\n  }\n}","map":{"version":3,"sources":["/Users/adil/Documents/GitHub/furniture-front/node_modules/instantsearch.js/es/lib/utils/getAppIdAndApiKey.js"],"names":["getAppIdAndApiKey","searchClient","transporter","_searchClient$transpo","headers","queryParameters","APP_ID","API_KEY","appId","apiKey","applicationID"],"mappings":"AAAA;AACA,OAAO,SAASA,iBAAT,CAA2BC,YAA3B,EAAyC;AAC9C,MAAIA,YAAY,CAACC,WAAjB,EAA8B;AAC5B;AACA,QAAIC,qBAAqB,GAAGF,YAAY,CAACC,WAAzC;AAAA,QACIE,OAAO,GAAGD,qBAAqB,CAACC,OADpC;AAAA,QAEIC,eAAe,GAAGF,qBAAqB,CAACE,eAF5C;AAGA,QAAIC,MAAM,GAAG,0BAAb;AACA,QAAIC,OAAO,GAAG,mBAAd;AACA,QAAIC,KAAK,GAAGJ,OAAO,CAACE,MAAD,CAAP,IAAmBD,eAAe,CAACC,MAAD,CAA9C;AACA,QAAIG,MAAM,GAAGL,OAAO,CAACG,OAAD,CAAP,IAAoBF,eAAe,CAACE,OAAD,CAAhD;AACA,WAAO,CAACC,KAAD,EAAQC,MAAR,CAAP;AACD,GAVD,MAUO;AACL;AACA,WAAO,CAACR,YAAY,CAACS,aAAd,EAA6BT,YAAY,CAACQ,MAA1C,CAAP;AACD;AACF","sourcesContent":["// typed as any, since it accepts the _real_ js clients, not the interface we otherwise expect\nexport function getAppIdAndApiKey(searchClient) {\n  if (searchClient.transporter) {\n    // searchClient v4\n    var _searchClient$transpo = searchClient.transporter,\n        headers = _searchClient$transpo.headers,\n        queryParameters = _searchClient$transpo.queryParameters;\n    var APP_ID = 'x-algolia-application-id';\n    var API_KEY = 'x-algolia-api-key';\n    var appId = headers[APP_ID] || queryParameters[APP_ID];\n    var apiKey = headers[API_KEY] || queryParameters[API_KEY];\n    return [appId, apiKey];\n  } else {\n    // searchClient v3\n    return [searchClient.applicationID, searchClient.apiKey];\n  }\n}"]},"metadata":{},"sourceType":"module"}