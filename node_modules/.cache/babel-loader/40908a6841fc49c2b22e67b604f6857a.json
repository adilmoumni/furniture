{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { escapeFacets, TAG_PLACEHOLDER, TAG_REPLACEMENT, checkRendering, createDocumentationMessageGenerator, createSendEventForFacet, noop } from '../../lib/utils';\nvar withUsage = createDocumentationMessageGenerator({\n  name: 'refinement-list',\n  connector: true\n});\nvar DEFAULT_SORT = ['isRefined', 'count:desc', 'name:asc'];\n/**\n * **RefinementList** connector provides the logic to build a custom widget that\n * will let the user filter the results based on the values of a specific facet.\n *\n * **Requirement:** the attribute passed as `attribute` must be present in\n * attributesForFaceting of the searched index.\n *\n * This connector provides:\n * - a `refine()` function to select an item.\n * - a `toggleShowMore()` function to display more or less items\n * - a `searchForItems()` function to search within the items.\n */\n\nvar connectRefinementList = function connectRefinementList(renderFn) {\n  var unmountFn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n  checkRendering(renderFn, withUsage());\n  return function (widgetParams) {\n    var _ref = widgetParams || {},\n        attribute = _ref.attribute,\n        _ref$operator = _ref.operator,\n        operator = _ref$operator === void 0 ? 'or' : _ref$operator,\n        _ref$limit = _ref.limit,\n        limit = _ref$limit === void 0 ? 10 : _ref$limit,\n        _ref$showMore = _ref.showMore,\n        showMore = _ref$showMore === void 0 ? false : _ref$showMore,\n        _ref$showMoreLimit = _ref.showMoreLimit,\n        showMoreLimit = _ref$showMoreLimit === void 0 ? 20 : _ref$showMoreLimit,\n        _ref$sortBy = _ref.sortBy,\n        sortBy = _ref$sortBy === void 0 ? DEFAULT_SORT : _ref$sortBy,\n        _ref$escapeFacetValue = _ref.escapeFacetValues,\n        escapeFacetValues = _ref$escapeFacetValue === void 0 ? true : _ref$escapeFacetValue,\n        _ref$transformItems = _ref.transformItems,\n        transformItems = _ref$transformItems === void 0 ? function (items) {\n      return items;\n    } : _ref$transformItems;\n\n    if (!attribute) {\n      throw new Error(withUsage('The `attribute` option is required.'));\n    }\n\n    if (!/^(and|or)$/.test(operator)) {\n      throw new Error(withUsage(\"The `operator` must one of: `\\\"and\\\"`, `\\\"or\\\"` (got \\\"\".concat(operator, \"\\\").\")));\n    }\n\n    if (showMore === true && showMoreLimit <= limit) {\n      throw new Error(withUsage('`showMoreLimit` should be greater than `limit`.'));\n    }\n\n    var formatItems = function formatItems(_ref2) {\n      var label = _ref2.name,\n          item = _objectWithoutProperties(_ref2, [\"name\"]);\n\n      return _objectSpread(_objectSpread({}, item), {}, {\n        label: label,\n        value: label,\n        highlighted: label\n      });\n    };\n\n    var lastResultsFromMainSearch;\n    var lastItemsFromMainSearch = [];\n    var hasExhaustiveItems = true;\n    var triggerRefine;\n    var sendEvent;\n    var isShowingMore = false; // Provide the same function to the `renderFn` so that way the user\n    // has to only bind it once when `isFirstRendering` for instance\n\n    var toggleShowMore = function toggleShowMore() {};\n\n    function cachedToggleShowMore() {\n      toggleShowMore();\n    }\n\n    function createToggleShowMore(renderOptions, widget) {\n      return function () {\n        isShowingMore = !isShowingMore;\n        widget.render(renderOptions);\n      };\n    }\n\n    function getLimit() {\n      return isShowingMore ? showMoreLimit : limit;\n    }\n\n    var searchForFacetValues = function searchForFacetValues() {\n      return function () {};\n    };\n\n    var createSearchForFacetValues = function createSearchForFacetValues(helper, widget) {\n      return function (renderOptions) {\n        return function (query) {\n          var instantSearchInstance = renderOptions.instantSearchInstance;\n\n          if (query === '' && lastItemsFromMainSearch) {\n            // render with previous data from the helper.\n            renderFn(_objectSpread(_objectSpread({}, widget.getWidgetRenderState(_objectSpread(_objectSpread({}, renderOptions), {}, {\n              results: lastResultsFromMainSearch\n            }))), {}, {\n              instantSearchInstance: instantSearchInstance\n            }), false);\n          } else {\n            var tags = {\n              highlightPreTag: escapeFacetValues ? TAG_PLACEHOLDER.highlightPreTag : TAG_REPLACEMENT.highlightPreTag,\n              highlightPostTag: escapeFacetValues ? TAG_PLACEHOLDER.highlightPostTag : TAG_REPLACEMENT.highlightPostTag\n            };\n            helper.searchForFacetValues(attribute, query, // We cap the `maxFacetHits` value to 100 because the Algolia API\n            // doesn't support a greater number.\n            // See https://www.algolia.com/doc/api-reference/api-parameters/maxFacetHits/\n            Math.min(getLimit(), 100), tags).then(function (results) {\n              var facetValues = escapeFacetValues ? escapeFacets(results.facetHits) : results.facetHits;\n              var normalizedFacetValues = transformItems(facetValues.map(function (_ref3) {\n                var value = _ref3.value,\n                    item = _objectWithoutProperties(_ref3, [\"value\"]);\n\n                return _objectSpread(_objectSpread({}, item), {}, {\n                  value: value,\n                  label: value\n                });\n              }));\n              renderFn(_objectSpread(_objectSpread({}, widget.getWidgetRenderState(_objectSpread(_objectSpread({}, renderOptions), {}, {\n                results: lastResultsFromMainSearch\n              }))), {}, {\n                items: normalizedFacetValues,\n                canToggleShowMore: false,\n                canRefine: true,\n                isFromSearch: true,\n                instantSearchInstance: instantSearchInstance\n              }), false);\n            });\n          }\n        };\n      };\n    };\n\n    return {\n      $$type: 'ais.refinementList',\n      init: function init(initOptions) {\n        renderFn(_objectSpread(_objectSpread({}, this.getWidgetRenderState(initOptions)), {}, {\n          instantSearchInstance: initOptions.instantSearchInstance\n        }), true);\n      },\n      render: function render(renderOptions) {\n        renderFn(_objectSpread(_objectSpread({}, this.getWidgetRenderState(renderOptions)), {}, {\n          instantSearchInstance: renderOptions.instantSearchInstance\n        }), false);\n      },\n      getRenderState: function getRenderState(renderState, renderOptions) {\n        return _objectSpread(_objectSpread({}, renderState), {}, {\n          refinementList: _objectSpread(_objectSpread({}, renderState.refinementList), {}, _defineProperty({}, attribute, this.getWidgetRenderState(renderOptions)))\n        });\n      },\n      getWidgetRenderState: function getWidgetRenderState(renderOptions) {\n        var results = renderOptions.results,\n            state = renderOptions.state,\n            _createURL = renderOptions.createURL,\n            instantSearchInstance = renderOptions.instantSearchInstance,\n            helper = renderOptions.helper;\n        var items = [];\n        var facetValues = [];\n\n        if (!sendEvent || !triggerRefine || !searchForFacetValues) {\n          sendEvent = createSendEventForFacet({\n            instantSearchInstance: instantSearchInstance,\n            helper: helper,\n            attribute: attribute,\n            widgetType: this.$$type\n          });\n\n          triggerRefine = function triggerRefine(facetValue) {\n            sendEvent('click', facetValue);\n            helper.toggleFacetRefinement(attribute, facetValue).search();\n          };\n\n          searchForFacetValues = createSearchForFacetValues(helper, this);\n        }\n\n        if (results) {\n          var values = results.getFacetValues(attribute, {\n            sortBy: sortBy,\n            facetOrdering: sortBy === DEFAULT_SORT\n          });\n          facetValues = values && Array.isArray(values) ? values : [];\n          items = transformItems(facetValues.slice(0, getLimit()).map(formatItems));\n          var maxValuesPerFacetConfig = state.maxValuesPerFacet;\n          var currentLimit = getLimit(); // If the limit is the max number of facet retrieved it is impossible to know\n          // if the facets are exhaustive. The only moment we are sure it is exhaustive\n          // is when it is strictly under the number requested unless we know that another\n          // widget has requested more values (maxValuesPerFacet > getLimit()).\n          // Because this is used for making the search of facets unable or not, it is important\n          // to be conservative here.\n\n          hasExhaustiveItems = maxValuesPerFacetConfig > currentLimit ? facetValues.length <= currentLimit : facetValues.length < currentLimit;\n          lastResultsFromMainSearch = results;\n          lastItemsFromMainSearch = items;\n\n          if (renderOptions.results) {\n            toggleShowMore = createToggleShowMore(renderOptions, this);\n          }\n        } // Do not mistake searchForFacetValues and searchFacetValues which is the actual search\n        // function\n\n\n        var searchFacetValues = searchForFacetValues && searchForFacetValues(renderOptions);\n        var canShowLess = isShowingMore && lastItemsFromMainSearch.length > limit;\n        var canShowMore = showMore && !hasExhaustiveItems;\n        var canToggleShowMore = canShowLess || canShowMore;\n        return {\n          createURL: function createURL(facetValue) {\n            return _createURL(state.resetPage().toggleFacetRefinement(attribute, facetValue));\n          },\n          items: items,\n          refine: triggerRefine,\n          searchForItems: searchFacetValues,\n          isFromSearch: false,\n          canRefine: items.length > 0,\n          widgetParams: widgetParams,\n          isShowingMore: isShowingMore,\n          canToggleShowMore: canToggleShowMore,\n          toggleShowMore: cachedToggleShowMore,\n          sendEvent: sendEvent,\n          hasExhaustiveItems: hasExhaustiveItems\n        };\n      },\n      dispose: function dispose(_ref4) {\n        var state = _ref4.state;\n        unmountFn();\n        var withoutMaxValuesPerFacet = state.setQueryParameter('maxValuesPerFacet', undefined);\n\n        if (operator === 'and') {\n          return withoutMaxValuesPerFacet.removeFacet(attribute);\n        }\n\n        return withoutMaxValuesPerFacet.removeDisjunctiveFacet(attribute);\n      },\n      getWidgetUiState: function getWidgetUiState(uiState, _ref5) {\n        var searchParameters = _ref5.searchParameters;\n        var values = operator === 'or' ? searchParameters.getDisjunctiveRefinements(attribute) : searchParameters.getConjunctiveRefinements(attribute);\n\n        if (!values.length) {\n          return uiState;\n        }\n\n        return _objectSpread(_objectSpread({}, uiState), {}, {\n          refinementList: _objectSpread(_objectSpread({}, uiState.refinementList), {}, _defineProperty({}, attribute, values))\n        });\n      },\n      getWidgetSearchParameters: function getWidgetSearchParameters(searchParameters, _ref6) {\n        var uiState = _ref6.uiState;\n        var isDisjunctive = operator === 'or';\n        var values = uiState.refinementList && uiState.refinementList[attribute];\n        var withoutRefinements = searchParameters.clearRefinements(attribute);\n        var withFacetConfiguration = isDisjunctive ? withoutRefinements.addDisjunctiveFacet(attribute) : withoutRefinements.addFacet(attribute);\n        var currentMaxValuesPerFacet = withFacetConfiguration.maxValuesPerFacet || 0;\n        var nextMaxValuesPerFacet = Math.max(currentMaxValuesPerFacet, showMore ? showMoreLimit : limit);\n        var withMaxValuesPerFacet = withFacetConfiguration.setQueryParameter('maxValuesPerFacet', nextMaxValuesPerFacet);\n\n        if (!values) {\n          var key = isDisjunctive ? 'disjunctiveFacetsRefinements' : 'facetsRefinements';\n          return withMaxValuesPerFacet.setQueryParameters(_defineProperty({}, key, _objectSpread(_objectSpread({}, withMaxValuesPerFacet[key]), {}, _defineProperty({}, attribute, []))));\n        }\n\n        return values.reduce(function (parameters, value) {\n          return isDisjunctive ? parameters.addDisjunctiveFacetRefinement(attribute, value) : parameters.addFacetRefinement(attribute, value);\n        }, withMaxValuesPerFacet);\n      }\n    };\n  };\n};\n\nexport default connectRefinementList;","map":{"version":3,"sources":["/Users/adil/Documents/GitHub/furniture-front/node_modules/instantsearch.js/es/connectors/refinement-list/connectRefinementList.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call","sourceKeys","escapeFacets","TAG_PLACEHOLDER","TAG_REPLACEMENT","checkRendering","createDocumentationMessageGenerator","createSendEventForFacet","noop","withUsage","name","connector","DEFAULT_SORT","connectRefinementList","renderFn","unmountFn","undefined","widgetParams","_ref","attribute","_ref$operator","operator","_ref$limit","limit","_ref$showMore","showMore","_ref$showMoreLimit","showMoreLimit","_ref$sortBy","sortBy","_ref$escapeFacetValue","escapeFacetValues","_ref$transformItems","transformItems","items","Error","test","concat","formatItems","_ref2","label","item","highlighted","lastResultsFromMainSearch","lastItemsFromMainSearch","hasExhaustiveItems","triggerRefine","sendEvent","isShowingMore","toggleShowMore","cachedToggleShowMore","createToggleShowMore","renderOptions","widget","render","getLimit","searchForFacetValues","createSearchForFacetValues","helper","query","instantSearchInstance","getWidgetRenderState","results","tags","highlightPreTag","highlightPostTag","Math","min","then","facetValues","facetHits","normalizedFacetValues","map","_ref3","canToggleShowMore","canRefine","isFromSearch","$$type","init","initOptions","getRenderState","renderState","refinementList","state","_createURL","createURL","widgetType","facetValue","toggleFacetRefinement","search","values","getFacetValues","facetOrdering","Array","isArray","slice","maxValuesPerFacetConfig","maxValuesPerFacet","currentLimit","searchFacetValues","canShowLess","canShowMore","resetPage","refine","searchForItems","dispose","_ref4","withoutMaxValuesPerFacet","setQueryParameter","removeFacet","removeDisjunctiveFacet","getWidgetUiState","uiState","_ref5","searchParameters","getDisjunctiveRefinements","getConjunctiveRefinements","getWidgetSearchParameters","_ref6","isDisjunctive","withoutRefinements","clearRefinements","withFacetConfiguration","addDisjunctiveFacet","addFacet","currentMaxValuesPerFacet","nextMaxValuesPerFacet","max","withMaxValuesPerFacet","setQueryParameters","reduce","parameters","addDisjunctiveFacetRefinement","addFacetRefinement"],"mappings":"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","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { escapeFacets, TAG_PLACEHOLDER, TAG_REPLACEMENT, checkRendering, createDocumentationMessageGenerator, createSendEventForFacet, noop } from '../../lib/utils';\nvar withUsage = createDocumentationMessageGenerator({\n  name: 'refinement-list',\n  connector: true\n});\nvar DEFAULT_SORT = ['isRefined', 'count:desc', 'name:asc'];\n\n/**\n * **RefinementList** connector provides the logic to build a custom widget that\n * will let the user filter the results based on the values of a specific facet.\n *\n * **Requirement:** the attribute passed as `attribute` must be present in\n * attributesForFaceting of the searched index.\n *\n * This connector provides:\n * - a `refine()` function to select an item.\n * - a `toggleShowMore()` function to display more or less items\n * - a `searchForItems()` function to search within the items.\n */\nvar connectRefinementList = function connectRefinementList(renderFn) {\n  var unmountFn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n  checkRendering(renderFn, withUsage());\n  return function (widgetParams) {\n    var _ref = widgetParams || {},\n        attribute = _ref.attribute,\n        _ref$operator = _ref.operator,\n        operator = _ref$operator === void 0 ? 'or' : _ref$operator,\n        _ref$limit = _ref.limit,\n        limit = _ref$limit === void 0 ? 10 : _ref$limit,\n        _ref$showMore = _ref.showMore,\n        showMore = _ref$showMore === void 0 ? false : _ref$showMore,\n        _ref$showMoreLimit = _ref.showMoreLimit,\n        showMoreLimit = _ref$showMoreLimit === void 0 ? 20 : _ref$showMoreLimit,\n        _ref$sortBy = _ref.sortBy,\n        sortBy = _ref$sortBy === void 0 ? DEFAULT_SORT : _ref$sortBy,\n        _ref$escapeFacetValue = _ref.escapeFacetValues,\n        escapeFacetValues = _ref$escapeFacetValue === void 0 ? true : _ref$escapeFacetValue,\n        _ref$transformItems = _ref.transformItems,\n        transformItems = _ref$transformItems === void 0 ? function (items) {\n      return items;\n    } : _ref$transformItems;\n\n    if (!attribute) {\n      throw new Error(withUsage('The `attribute` option is required.'));\n    }\n\n    if (!/^(and|or)$/.test(operator)) {\n      throw new Error(withUsage(\"The `operator` must one of: `\\\"and\\\"`, `\\\"or\\\"` (got \\\"\".concat(operator, \"\\\").\")));\n    }\n\n    if (showMore === true && showMoreLimit <= limit) {\n      throw new Error(withUsage('`showMoreLimit` should be greater than `limit`.'));\n    }\n\n    var formatItems = function formatItems(_ref2) {\n      var label = _ref2.name,\n          item = _objectWithoutProperties(_ref2, [\"name\"]);\n\n      return _objectSpread(_objectSpread({}, item), {}, {\n        label: label,\n        value: label,\n        highlighted: label\n      });\n    };\n\n    var lastResultsFromMainSearch;\n    var lastItemsFromMainSearch = [];\n    var hasExhaustiveItems = true;\n    var triggerRefine;\n    var sendEvent;\n    var isShowingMore = false; // Provide the same function to the `renderFn` so that way the user\n    // has to only bind it once when `isFirstRendering` for instance\n\n    var toggleShowMore = function toggleShowMore() {};\n\n    function cachedToggleShowMore() {\n      toggleShowMore();\n    }\n\n    function createToggleShowMore(renderOptions, widget) {\n      return function () {\n        isShowingMore = !isShowingMore;\n        widget.render(renderOptions);\n      };\n    }\n\n    function getLimit() {\n      return isShowingMore ? showMoreLimit : limit;\n    }\n\n    var searchForFacetValues = function searchForFacetValues() {\n      return function () {};\n    };\n\n    var createSearchForFacetValues = function createSearchForFacetValues(helper, widget) {\n      return function (renderOptions) {\n        return function (query) {\n          var instantSearchInstance = renderOptions.instantSearchInstance;\n\n          if (query === '' && lastItemsFromMainSearch) {\n            // render with previous data from the helper.\n            renderFn(_objectSpread(_objectSpread({}, widget.getWidgetRenderState(_objectSpread(_objectSpread({}, renderOptions), {}, {\n              results: lastResultsFromMainSearch\n            }))), {}, {\n              instantSearchInstance: instantSearchInstance\n            }), false);\n          } else {\n            var tags = {\n              highlightPreTag: escapeFacetValues ? TAG_PLACEHOLDER.highlightPreTag : TAG_REPLACEMENT.highlightPreTag,\n              highlightPostTag: escapeFacetValues ? TAG_PLACEHOLDER.highlightPostTag : TAG_REPLACEMENT.highlightPostTag\n            };\n            helper.searchForFacetValues(attribute, query, // We cap the `maxFacetHits` value to 100 because the Algolia API\n            // doesn't support a greater number.\n            // See https://www.algolia.com/doc/api-reference/api-parameters/maxFacetHits/\n            Math.min(getLimit(), 100), tags).then(function (results) {\n              var facetValues = escapeFacetValues ? escapeFacets(results.facetHits) : results.facetHits;\n              var normalizedFacetValues = transformItems(facetValues.map(function (_ref3) {\n                var value = _ref3.value,\n                    item = _objectWithoutProperties(_ref3, [\"value\"]);\n\n                return _objectSpread(_objectSpread({}, item), {}, {\n                  value: value,\n                  label: value\n                });\n              }));\n              renderFn(_objectSpread(_objectSpread({}, widget.getWidgetRenderState(_objectSpread(_objectSpread({}, renderOptions), {}, {\n                results: lastResultsFromMainSearch\n              }))), {}, {\n                items: normalizedFacetValues,\n                canToggleShowMore: false,\n                canRefine: true,\n                isFromSearch: true,\n                instantSearchInstance: instantSearchInstance\n              }), false);\n            });\n          }\n        };\n      };\n    };\n\n    return {\n      $$type: 'ais.refinementList',\n      init: function init(initOptions) {\n        renderFn(_objectSpread(_objectSpread({}, this.getWidgetRenderState(initOptions)), {}, {\n          instantSearchInstance: initOptions.instantSearchInstance\n        }), true);\n      },\n      render: function render(renderOptions) {\n        renderFn(_objectSpread(_objectSpread({}, this.getWidgetRenderState(renderOptions)), {}, {\n          instantSearchInstance: renderOptions.instantSearchInstance\n        }), false);\n      },\n      getRenderState: function getRenderState(renderState, renderOptions) {\n        return _objectSpread(_objectSpread({}, renderState), {}, {\n          refinementList: _objectSpread(_objectSpread({}, renderState.refinementList), {}, _defineProperty({}, attribute, this.getWidgetRenderState(renderOptions)))\n        });\n      },\n      getWidgetRenderState: function getWidgetRenderState(renderOptions) {\n        var results = renderOptions.results,\n            state = renderOptions.state,\n            _createURL = renderOptions.createURL,\n            instantSearchInstance = renderOptions.instantSearchInstance,\n            helper = renderOptions.helper;\n        var items = [];\n        var facetValues = [];\n\n        if (!sendEvent || !triggerRefine || !searchForFacetValues) {\n          sendEvent = createSendEventForFacet({\n            instantSearchInstance: instantSearchInstance,\n            helper: helper,\n            attribute: attribute,\n            widgetType: this.$$type\n          });\n\n          triggerRefine = function triggerRefine(facetValue) {\n            sendEvent('click', facetValue);\n            helper.toggleFacetRefinement(attribute, facetValue).search();\n          };\n\n          searchForFacetValues = createSearchForFacetValues(helper, this);\n        }\n\n        if (results) {\n          var values = results.getFacetValues(attribute, {\n            sortBy: sortBy,\n            facetOrdering: sortBy === DEFAULT_SORT\n          });\n          facetValues = values && Array.isArray(values) ? values : [];\n          items = transformItems(facetValues.slice(0, getLimit()).map(formatItems));\n          var maxValuesPerFacetConfig = state.maxValuesPerFacet;\n          var currentLimit = getLimit(); // If the limit is the max number of facet retrieved it is impossible to know\n          // if the facets are exhaustive. The only moment we are sure it is exhaustive\n          // is when it is strictly under the number requested unless we know that another\n          // widget has requested more values (maxValuesPerFacet > getLimit()).\n          // Because this is used for making the search of facets unable or not, it is important\n          // to be conservative here.\n\n          hasExhaustiveItems = maxValuesPerFacetConfig > currentLimit ? facetValues.length <= currentLimit : facetValues.length < currentLimit;\n          lastResultsFromMainSearch = results;\n          lastItemsFromMainSearch = items;\n\n          if (renderOptions.results) {\n            toggleShowMore = createToggleShowMore(renderOptions, this);\n          }\n        } // Do not mistake searchForFacetValues and searchFacetValues which is the actual search\n        // function\n\n\n        var searchFacetValues = searchForFacetValues && searchForFacetValues(renderOptions);\n        var canShowLess = isShowingMore && lastItemsFromMainSearch.length > limit;\n        var canShowMore = showMore && !hasExhaustiveItems;\n        var canToggleShowMore = canShowLess || canShowMore;\n        return {\n          createURL: function createURL(facetValue) {\n            return _createURL(state.resetPage().toggleFacetRefinement(attribute, facetValue));\n          },\n          items: items,\n          refine: triggerRefine,\n          searchForItems: searchFacetValues,\n          isFromSearch: false,\n          canRefine: items.length > 0,\n          widgetParams: widgetParams,\n          isShowingMore: isShowingMore,\n          canToggleShowMore: canToggleShowMore,\n          toggleShowMore: cachedToggleShowMore,\n          sendEvent: sendEvent,\n          hasExhaustiveItems: hasExhaustiveItems\n        };\n      },\n      dispose: function dispose(_ref4) {\n        var state = _ref4.state;\n        unmountFn();\n        var withoutMaxValuesPerFacet = state.setQueryParameter('maxValuesPerFacet', undefined);\n\n        if (operator === 'and') {\n          return withoutMaxValuesPerFacet.removeFacet(attribute);\n        }\n\n        return withoutMaxValuesPerFacet.removeDisjunctiveFacet(attribute);\n      },\n      getWidgetUiState: function getWidgetUiState(uiState, _ref5) {\n        var searchParameters = _ref5.searchParameters;\n        var values = operator === 'or' ? searchParameters.getDisjunctiveRefinements(attribute) : searchParameters.getConjunctiveRefinements(attribute);\n\n        if (!values.length) {\n          return uiState;\n        }\n\n        return _objectSpread(_objectSpread({}, uiState), {}, {\n          refinementList: _objectSpread(_objectSpread({}, uiState.refinementList), {}, _defineProperty({}, attribute, values))\n        });\n      },\n      getWidgetSearchParameters: function getWidgetSearchParameters(searchParameters, _ref6) {\n        var uiState = _ref6.uiState;\n        var isDisjunctive = operator === 'or';\n        var values = uiState.refinementList && uiState.refinementList[attribute];\n        var withoutRefinements = searchParameters.clearRefinements(attribute);\n        var withFacetConfiguration = isDisjunctive ? withoutRefinements.addDisjunctiveFacet(attribute) : withoutRefinements.addFacet(attribute);\n        var currentMaxValuesPerFacet = withFacetConfiguration.maxValuesPerFacet || 0;\n        var nextMaxValuesPerFacet = Math.max(currentMaxValuesPerFacet, showMore ? showMoreLimit : limit);\n        var withMaxValuesPerFacet = withFacetConfiguration.setQueryParameter('maxValuesPerFacet', nextMaxValuesPerFacet);\n\n        if (!values) {\n          var key = isDisjunctive ? 'disjunctiveFacetsRefinements' : 'facetsRefinements';\n          return withMaxValuesPerFacet.setQueryParameters(_defineProperty({}, key, _objectSpread(_objectSpread({}, withMaxValuesPerFacet[key]), {}, _defineProperty({}, attribute, []))));\n        }\n\n        return values.reduce(function (parameters, value) {\n          return isDisjunctive ? parameters.addDisjunctiveFacetRefinement(attribute, value) : parameters.addFacetRefinement(attribute, value);\n        }, withMaxValuesPerFacet);\n      }\n    };\n  };\n};\n\nexport default connectRefinementList;"]},"metadata":{},"sourceType":"module"}