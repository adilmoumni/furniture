{"ast":null,"code":"import { createSuitMixin as e } from \"../mixins/suit.js\";\nimport { createWidgetMixin as t } from \"../mixins/widget.js\";\nimport { connectClearRefinements as n } from \"instantsearch.js/es/connectors\";\nimport { createPanelConsumerMixin as i } from \"../mixins/panel.js\";\nexport default {\n  render: function () {\n    var e = this,\n        t = e.$createElement,\n        n = e._self._c || t;\n    return e.state ? n(\"div\", {\n      class: e.suit()\n    }, [e._t(\"default\", [n(\"button\", {\n      class: [e.suit(\"button\"), !e.canRefine && e.suit(\"button\", \"disabled\")],\n      attrs: {\n        type: \"reset\",\n        disabled: !e.canRefine\n      },\n      on: {\n        click: function (t) {\n          return t.preventDefault(), e.state.refine(t);\n        }\n      }\n    }, [e._t(\"resetLabel\", [e._v(\"Clear refinements\")])], 2)], {\n      canRefine: e.canRefine,\n      refine: e.state.refine,\n      createURL: e.state.createURL\n    })], 2) : e._e();\n  },\n  staticRenderFns: [],\n  name: \"AisClearRefinements\",\n  mixins: [t({\n    connector: n\n  }), i({\n    mapStateToCanRefine: function (e) {\n      return Boolean(e.hasRefinements);\n    }\n  }), e({\n    name: \"ClearRefinements\"\n  })],\n  props: {\n    excludedAttributes: {\n      type: Array,\n      default: void 0\n    },\n    includedAttributes: {\n      type: Array,\n      default: void 0\n    },\n    transformItems: {\n      type: Function,\n      default: void 0\n    }\n  },\n  computed: {\n    widgetParams: function () {\n      return {\n        includedAttributes: this.includedAttributes,\n        excludedAttributes: this.excludedAttributes,\n        transformItems: this.transformItems\n      };\n    },\n    canRefine: function () {\n      return this.state.hasRefinements;\n    }\n  }\n};","map":{"version":3,"sources":["../../../../src/components/ClearRefinements.vue"],"names":["render","name","mixins","createWidgetMixin","connector","connectClearRefinements","createPanelConsumerMixin","mapStateToCanRefine","state","Boolean","hasRefinements","createSuitMixin","props","excludedAttributes","type","Array","default","undefined","includedAttributes","transformItems","Function","computed","widgetParams","this","canRefine"],"mappings":";;;;eA4Be;AAACA,EAAAA,MAAAA,EAAAA,YAAAA;AAAAA,QAAAA,CAAAA,GAAAA,IAAAA;AAAAA,QAAAA,CAAAA,GAAAA,CAAAA,CAAAA,ciBAAAA,CAAAA,CAAAA,cAAAA,IAAAA,CAAAA,CAAAA,KAAAA,CAAAA,MAAAA,CAAAA,CAAAA,CAAAA;AAAAA;AAAAA;AAAAA,KAAAA,EAAAA,CAAAA,CAAAA,CAAAA,EAAAA,CAAAA,YAAAA,EAAAA,CAAAA,CAAAA,CAAAA,EAAAA,CAAAA,mBAAAA,CAAAA,CAAAA,CAAAA,CAAAA,EAAAA,CAAAA,CAAAA,CAAAA,EAAAA;AAAAA,MAAAA,SAAAA,EAAAA,CAAAA,CAAAA,SAAAA;AAAAA,MAAAA,MAAAA,EAAAA,CAAAA,CAAAA,KAAAA,CAAAA,MAAAA;AAAAA,MAAAA,SAAAA,EAAAA,CAAAA,CAAAA,KAAAA,CAAAA;AAAAA,KAAAA,CAAAA,CAAAA,EAAAA,CAAAA,CAAAA,GAAAA,CAAAA,CAAAA,EAAAA,EAAAA;AAAAA,GAAD;AAACA,EAAAA,eAAAA,EAAAA,EAAD;AACbC,EAAAA,IAAAA,EAAM,qBADO;AAEbC,EAAAA,MAAAA,EAAQ,CACNC,CAAAA,CAAkB;AAAEC,IAAAA,SAAAA,EAAWC;AAAb,GAAlBF,CADM,EAENG,CAAAA,CAAyB;AACvBC,IAAAA,mBAAAA,EAAAA,UAAqBC,CAArBD,EAAqBC;AAAAA,aAASC,OAAAA,CAAQD,CAAAA,CAAME,cAAdD,CAATD;AAAuBE;AADrB,GAAzBJ,CAFM,EAKNK,CAAAA,CAAgB;AAAEV,IAAAA,IAAAA,EAAM;AAAR,GAAhBU,CALM,CAFK;AASbC,EAAAA,KAAAA,EAAO;AACLC,IAAAA,kBAAAA,EAAoB;AAClBC,MAAAA,IAAAA,EAAMC,KADY;AAElBC,MAAAA,OAAAA,EAAAA,KAASC;AAFS,KADf;AAKLC,IAAAA,kBAAAA,EAAoB;AAClBJ,MAAAA,IAAAA,EAAMC,KADY;AAElBC,MAAAA,OAAAA,EAAAA,KAASC;AAFS,KALf;AASLE,IAAAA,cAAAA,EAAgB;AACdL,MAAAA,IAAAA,EAAMM,QADQ;AAEdJ,MAAAA,OAAAA,EAAAA,KAASC;AAFK;AATX,GATM;AAuBbI,EAAAA,QAAAA,EAAU;AACRC,IAAAA,YAAAA,EAAAA,YAAAA;AACE,aAAO;AACLJ,QAAAA,kBAAAA,EAAoBK,KAAKL,kBADpB;AAELL,QAAAA,kBAAAA,EAAoBU,KAAKV,kBAFpB;AAGLM,QAAAA,cAAAA,EAAgBI,KAAKJ;AAHhB,OAAP;AAGuBA,KALjB;AAQRK,IAAAA,SAAAA,EAAAA,YAAAA;AACE,aAAOD,KAAKf,KAALe,CAAWb,cAAlB;AAAkBA;AATZ;AAvBG,C","sourcesContent":["<template>\n  <div\n    v-if=\"state\"\n    :class=\"suit()\"\n  >\n    <slot\n      :can-refine=\"canRefine\"\n      :refine=\"state.refine\"\n      :createURL=\"state.createURL\"\n    >\n      <button\n        type=\"reset\"\n        :class=\"[suit('button'), !canRefine && suit('button', 'disabled')]\"\n        :disabled=\"!canRefine\"\n        @click.prevent=\"state.refine\"\n      >\n        <slot name=\"resetLabel\">Clear refinements</slot>\n      </button>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectClearRefinements } from 'instantsearch.js/es/connectors';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createSuitMixin } from '../mixins/suit';\nimport { createWidgetMixin } from '../mixins/widget';\n\nexport default {\n  name: 'AisClearRefinements',\n  mixins: [\n    createWidgetMixin({ connector: connectClearRefinements }),\n    createPanelConsumerMixin({\n      mapStateToCanRefine: state => Boolean(state.hasRefinements),\n    }),\n    createSuitMixin({ name: 'ClearRefinements' }),\n  ],\n  props: {\n    excludedAttributes: {\n      type: Array,\n      default: undefined,\n    },\n    includedAttributes: {\n      type: Array,\n      default: undefined,\n    },\n    transformItems: {\n      type: Function,\n      default: undefined,\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        includedAttributes: this.includedAttributes,\n        excludedAttributes: this.excludedAttributes,\n        transformItems: this.transformItems,\n      };\n    },\n    canRefine() {\n      return this.state.hasRefinements;\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}