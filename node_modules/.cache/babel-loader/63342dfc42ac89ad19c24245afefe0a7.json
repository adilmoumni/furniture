{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nimport isFacetRefined from './isFacetRefined';\nexport function createSendEventForFacet(_ref) {\n  var instantSearchInstance = _ref.instantSearchInstance,\n      helper = _ref.helper,\n      attribute = _ref.attribute,\n      widgetType = _ref.widgetType;\n\n  var sendEventForFacet = function sendEventForFacet() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var eventType = args[0],\n        facetValue = args[1],\n        _args$ = args[2],\n        eventName = _args$ === void 0 ? 'Filter Applied' : _args$;\n\n    if (args.length === 1 && _typeof(args[0]) === 'object') {\n      instantSearchInstance.sendEventToInsights(args[0]);\n    } else if (eventType === 'click' && (args.length === 2 || args.length === 3)) {\n      if (!isFacetRefined(helper, attribute, facetValue)) {\n        // send event only when the facet is being checked \"ON\"\n        instantSearchInstance.sendEventToInsights({\n          insightsMethod: 'clickedFilters',\n          widgetType: widgetType,\n          eventType: eventType,\n          payload: {\n            eventName: eventName,\n            index: helper.getIndex(),\n            filters: [\"\".concat(attribute, \":\").concat(facetValue)]\n          },\n          attribute: attribute\n        });\n      }\n    } else if (process.env.NODE_ENV === 'development') {\n      throw new Error(\"You need to pass two arguments like:\\n  sendEvent('click', facetValue);\\n\\nIf you want to send a custom payload, you can pass one object: sendEvent(customPayload);\\n\");\n    }\n  };\n\n  return sendEventForFacet;\n}","map":{"version":3,"sources":["/Users/adil/Documents/GitHub/furniture-front/node_modules/instantsearch.js/es/lib/utils/createSendEventForFacet.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","isFacetRefined","createSendEventForFacet","_ref","instantSearchInstance","helper","attribute","widgetType","sendEventForFacet","_len","arguments","length","args","Array","_key","eventType","facetValue","_args$","eventName","sendEventToInsights","insightsMethod","payload","index","getIndex","filters","concat","process","env","NODE_ENV","Error"],"mappings":"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","sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport isFacetRefined from './isFacetRefined';\nexport function createSendEventForFacet(_ref) {\n  var instantSearchInstance = _ref.instantSearchInstance,\n      helper = _ref.helper,\n      attribute = _ref.attribute,\n      widgetType = _ref.widgetType;\n\n  var sendEventForFacet = function sendEventForFacet() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var eventType = args[0],\n        facetValue = args[1],\n        _args$ = args[2],\n        eventName = _args$ === void 0 ? 'Filter Applied' : _args$;\n\n    if (args.length === 1 && _typeof(args[0]) === 'object') {\n      instantSearchInstance.sendEventToInsights(args[0]);\n    } else if (eventType === 'click' && (args.length === 2 || args.length === 3)) {\n      if (!isFacetRefined(helper, attribute, facetValue)) {\n        // send event only when the facet is being checked \"ON\"\n        instantSearchInstance.sendEventToInsights({\n          insightsMethod: 'clickedFilters',\n          widgetType: widgetType,\n          eventType: eventType,\n          payload: {\n            eventName: eventName,\n            index: helper.getIndex(),\n            filters: [\"\".concat(attribute, \":\").concat(facetValue)]\n          },\n          attribute: attribute\n        });\n      }\n    } else if (process.env.NODE_ENV === 'development') {\n      throw new Error(\"You need to pass two arguments like:\\n  sendEvent('click', facetValue);\\n\\nIf you want to send a custom payload, you can pass one object: sendEvent(customPayload);\\n\");\n    }\n  };\n\n  return sendEventForFacet;\n}"]},"metadata":{},"sourceType":"module"}