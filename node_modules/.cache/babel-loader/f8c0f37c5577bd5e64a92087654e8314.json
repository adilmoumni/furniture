{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nimport { checkRendering, createDocumentationMessageGenerator, convertNumericRefinementsToFilters, isFiniteNumber, find, noop } from '../../lib/utils';\nvar withUsage = createDocumentationMessageGenerator({\n  name: 'range-input',\n  connector: true\n}, {\n  name: 'range-slider',\n  connector: true\n});\nvar $$type = 'ais.range';\n\nfunction toPrecision(_ref) {\n  var min = _ref.min,\n      max = _ref.max,\n      precision = _ref.precision;\n  var pow = Math.pow(10, precision);\n  return {\n    min: min ? Math.floor(min * pow) / pow : min,\n    max: max ? Math.ceil(max * pow) / pow : max\n  };\n}\n/**\n * **Range** connector provides the logic to create custom widget that will let\n * the user refine results using a numeric range.\n *\n * This connectors provides a `refine()` function that accepts bounds. It will also provide\n * information about the min and max bounds for the current result set.\n */\n\n\nvar connectRange = function connectRange(renderFn) {\n  var unmountFn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n  checkRendering(renderFn, withUsage());\n  return function (widgetParams) {\n    var _ref2 = widgetParams || {},\n        _ref2$attribute = _ref2.attribute,\n        attribute = _ref2$attribute === void 0 ? '' : _ref2$attribute,\n        minBound = _ref2.min,\n        maxBound = _ref2.max,\n        _ref2$precision = _ref2.precision,\n        precision = _ref2$precision === void 0 ? 0 : _ref2$precision;\n\n    if (!attribute) {\n      throw new Error(withUsage('The `attribute` option is required.'));\n    }\n\n    if (isFiniteNumber(minBound) && isFiniteNumber(maxBound) && minBound > maxBound) {\n      throw new Error(withUsage(\"The `max` option can't be lower than `min`.\"));\n    }\n\n    var formatToNumber = function formatToNumber(v) {\n      return Number(Number(v).toFixed(precision));\n    };\n\n    var rangeFormatter = {\n      from: function from(v) {\n        return v.toLocaleString();\n      },\n      to: function to(v) {\n        return formatToNumber(v).toLocaleString();\n      }\n    }; // eslint-disable-next-line complexity\n\n    var getRefinedState = function getRefinedState(helper, currentRange, nextMin, nextMax) {\n      var resolvedState = helper.state;\n      var currentRangeMin = currentRange.min,\n          currentRangeMax = currentRange.max;\n\n      var _ref3 = resolvedState.getNumericRefinement(attribute, '>=') || [],\n          _ref4 = _slicedToArray(_ref3, 1),\n          min = _ref4[0];\n\n      var _ref5 = resolvedState.getNumericRefinement(attribute, '<=') || [],\n          _ref6 = _slicedToArray(_ref5, 1),\n          max = _ref6[0];\n\n      var isResetMin = nextMin === undefined || nextMin === '';\n      var isResetMax = nextMax === undefined || nextMax === '';\n\n      var _toPrecision = toPrecision({\n        min: !isResetMin ? parseFloat(nextMin) : undefined,\n        max: !isResetMax ? parseFloat(nextMax) : undefined,\n        precision: precision\n      }),\n          nextMinAsNumber = _toPrecision.min,\n          nextMaxAsNumber = _toPrecision.max;\n\n      var newNextMin;\n\n      if (!isFiniteNumber(minBound) && currentRangeMin === nextMinAsNumber) {\n        newNextMin = undefined;\n      } else if (isFiniteNumber(minBound) && isResetMin) {\n        newNextMin = minBound;\n      } else {\n        newNextMin = nextMinAsNumber;\n      }\n\n      var newNextMax;\n\n      if (!isFiniteNumber(maxBound) && currentRangeMax === nextMaxAsNumber) {\n        newNextMax = undefined;\n      } else if (isFiniteNumber(maxBound) && isResetMax) {\n        newNextMax = maxBound;\n      } else {\n        newNextMax = nextMaxAsNumber;\n      }\n\n      var isResetNewNextMin = newNextMin === undefined;\n      var isGreaterThanCurrentRange = isFiniteNumber(currentRangeMin) && currentRangeMin <= newNextMin;\n      var isMinValid = isResetNewNextMin || isFiniteNumber(newNextMin) && (!isFiniteNumber(currentRangeMin) || isGreaterThanCurrentRange);\n      var isResetNewNextMax = newNextMax === undefined;\n      var isLowerThanRange = isFiniteNumber(newNextMax) && currentRangeMax >= newNextMax;\n      var isMaxValid = isResetNewNextMax || isFiniteNumber(newNextMax) && (!isFiniteNumber(currentRangeMax) || isLowerThanRange);\n      var hasMinChange = min !== newNextMin;\n      var hasMaxChange = max !== newNextMax;\n\n      if ((hasMinChange || hasMaxChange) && isMinValid && isMaxValid) {\n        resolvedState = resolvedState.removeNumericRefinement(attribute);\n\n        if (isFiniteNumber(newNextMin)) {\n          resolvedState = resolvedState.addNumericRefinement(attribute, '>=', newNextMin);\n        }\n\n        if (isFiniteNumber(newNextMax)) {\n          resolvedState = resolvedState.addNumericRefinement(attribute, '<=', newNextMax);\n        }\n\n        return resolvedState.resetPage();\n      }\n\n      return null;\n    };\n\n    var sendEventWithRefinedState = function sendEventWithRefinedState(refinedState, instantSearchInstance, helper) {\n      var eventName = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'Filter Applied';\n      var filters = convertNumericRefinementsToFilters(refinedState, attribute);\n\n      if (filters && filters.length > 0) {\n        instantSearchInstance.sendEventToInsights({\n          insightsMethod: 'clickedFilters',\n          widgetType: $$type,\n          eventType: 'click',\n          payload: {\n            eventName: eventName,\n            index: helper.getIndex(),\n            filters: filters\n          },\n          attribute: attribute\n        });\n      }\n    };\n\n    var createSendEvent = function createSendEvent(instantSearchInstance, helper, currentRange) {\n      return function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        if (args.length === 1) {\n          instantSearchInstance.sendEventToInsights(args[0]);\n          return;\n        }\n\n        var eventType = args[0],\n            facetValue = args[1],\n            eventName = args[2];\n\n        if (eventType !== 'click') {\n          return;\n        }\n\n        var _facetValue = _slicedToArray(facetValue, 2),\n            nextMin = _facetValue[0],\n            nextMax = _facetValue[1];\n\n        var refinedState = getRefinedState(helper, currentRange, nextMin, nextMax);\n        sendEventWithRefinedState(refinedState, instantSearchInstance, helper, eventName);\n      };\n    };\n\n    function _getCurrentRange(stats) {\n      var min;\n\n      if (isFiniteNumber(minBound)) {\n        min = minBound;\n      } else if (isFiniteNumber(stats.min)) {\n        min = stats.min;\n      } else {\n        min = 0;\n      }\n\n      var max;\n\n      if (isFiniteNumber(maxBound)) {\n        max = maxBound;\n      } else if (isFiniteNumber(stats.max)) {\n        max = stats.max;\n      } else {\n        max = 0;\n      }\n\n      return toPrecision({\n        min: min,\n        max: max,\n        precision: precision\n      });\n    }\n\n    function _getCurrentRefinement(helper) {\n      var _ref7 = helper.getNumericRefinement(attribute, '>=') || [],\n          _ref8 = _slicedToArray(_ref7, 1),\n          minValue = _ref8[0];\n\n      var _ref9 = helper.getNumericRefinement(attribute, '<=') || [],\n          _ref10 = _slicedToArray(_ref9, 1),\n          maxValue = _ref10[0];\n\n      var min = isFiniteNumber(minValue) ? minValue : -Infinity;\n      var max = isFiniteNumber(maxValue) ? maxValue : Infinity;\n      return [min, max];\n    }\n\n    function _refine(instantSearchInstance, helper, currentRange) {\n      return function () {\n        var _ref11 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [undefined, undefined],\n            _ref12 = _slicedToArray(_ref11, 2),\n            nextMin = _ref12[0],\n            nextMax = _ref12[1];\n\n        var refinedState = getRefinedState(helper, currentRange, nextMin, nextMax);\n\n        if (refinedState) {\n          sendEventWithRefinedState(refinedState, instantSearchInstance, helper);\n          helper.setState(refinedState).search();\n        }\n      };\n    }\n\n    return {\n      $$type: $$type,\n      init: function init(initOptions) {\n        renderFn(_objectSpread(_objectSpread({}, this.getWidgetRenderState(initOptions)), {}, {\n          instantSearchInstance: initOptions.instantSearchInstance\n        }), true);\n      },\n      render: function render(renderOptions) {\n        renderFn(_objectSpread(_objectSpread({}, this.getWidgetRenderState(renderOptions)), {}, {\n          instantSearchInstance: renderOptions.instantSearchInstance\n        }), false);\n      },\n      getRenderState: function getRenderState(renderState, renderOptions) {\n        return _objectSpread(_objectSpread({}, renderState), {}, {\n          range: _objectSpread(_objectSpread({}, renderState.range), {}, _defineProperty({}, attribute, this.getWidgetRenderState(renderOptions)))\n        });\n      },\n      getWidgetRenderState: function getWidgetRenderState(_ref13) {\n        var results = _ref13.results,\n            helper = _ref13.helper,\n            instantSearchInstance = _ref13.instantSearchInstance;\n        var facetsFromResults = results && results.disjunctiveFacets || [];\n        var facet = find(facetsFromResults, function (facetResult) {\n          return facetResult.name === attribute;\n        });\n        var stats = facet && facet.stats || {\n          min: undefined,\n          max: undefined\n        };\n\n        var currentRange = _getCurrentRange(stats);\n\n        var start = _getCurrentRefinement(helper);\n\n        var refine;\n\n        if (!results) {\n          // On first render pass an empty range\n          // to be able to bypass the validation\n          // related to it\n          refine = _refine(instantSearchInstance, helper, {\n            min: undefined,\n            max: undefined\n          });\n        } else {\n          refine = _refine(instantSearchInstance, helper, currentRange);\n        }\n\n        return {\n          refine: refine,\n          canRefine: currentRange.min !== currentRange.max,\n          format: rangeFormatter,\n          range: currentRange,\n          sendEvent: createSendEvent(instantSearchInstance, helper, currentRange),\n          widgetParams: _objectSpread(_objectSpread({}, widgetParams), {}, {\n            precision: precision\n          }),\n          start: start\n        };\n      },\n      dispose: function dispose(_ref14) {\n        var state = _ref14.state;\n        unmountFn();\n        return state.removeDisjunctiveFacet(attribute).removeNumericRefinement(attribute);\n      },\n      getWidgetUiState: function getWidgetUiState(uiState, _ref15) {\n        var searchParameters = _ref15.searchParameters;\n\n        var _searchParameters$get = searchParameters.getNumericRefinements(attribute),\n            _searchParameters$get2 = _searchParameters$get['>='],\n            min = _searchParameters$get2 === void 0 ? [] : _searchParameters$get2,\n            _searchParameters$get3 = _searchParameters$get['<='],\n            max = _searchParameters$get3 === void 0 ? [] : _searchParameters$get3;\n\n        if (min.length === 0 && max.length === 0) {\n          return uiState;\n        }\n\n        return _objectSpread(_objectSpread({}, uiState), {}, {\n          range: _objectSpread(_objectSpread({}, uiState.range), {}, _defineProperty({}, attribute, \"\".concat(min, \":\").concat(max)))\n        });\n      },\n      getWidgetSearchParameters: function getWidgetSearchParameters(searchParameters, _ref16) {\n        var uiState = _ref16.uiState;\n        var widgetSearchParameters = searchParameters.addDisjunctiveFacet(attribute).setQueryParameters({\n          numericRefinements: _objectSpread(_objectSpread({}, searchParameters.numericRefinements), {}, _defineProperty({}, attribute, {}))\n        });\n\n        if (isFiniteNumber(minBound)) {\n          widgetSearchParameters = widgetSearchParameters.addNumericRefinement(attribute, '>=', minBound);\n        }\n\n        if (isFiniteNumber(maxBound)) {\n          widgetSearchParameters = widgetSearchParameters.addNumericRefinement(attribute, '<=', maxBound);\n        }\n\n        var value = uiState.range && uiState.range[attribute];\n\n        if (!value || value.indexOf(':') === -1) {\n          return widgetSearchParameters;\n        }\n\n        var _value$split$map = value.split(':').map(parseFloat),\n            _value$split$map2 = _slicedToArray(_value$split$map, 2),\n            lowerBound = _value$split$map2[0],\n            upperBound = _value$split$map2[1];\n\n        if (isFiniteNumber(lowerBound) && (!isFiniteNumber(minBound) || minBound < lowerBound)) {\n          widgetSearchParameters = widgetSearchParameters.removeNumericRefinement(attribute, '>=');\n          widgetSearchParameters = widgetSearchParameters.addNumericRefinement(attribute, '>=', lowerBound);\n        }\n\n        if (isFiniteNumber(upperBound) && (!isFiniteNumber(maxBound) || upperBound < maxBound)) {\n          widgetSearchParameters = widgetSearchParameters.removeNumericRefinement(attribute, '<=');\n          widgetSearchParameters = widgetSearchParameters.addNumericRefinement(attribute, '<=', upperBound);\n        }\n\n        return widgetSearchParameters;\n      }\n    };\n  };\n};\n\nexport default connectRange;","map":{"version":3,"sources":["/Users/adil/Documents/GitHub/furniture-front/node_modules/instantsearch.js/es/connectors/range/connectRange.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","prototype","toString","call","slice","constructor","name","Array","from","test","len","arr2","Symbol","iterator","_arr","_n","_d","_e","undefined","_i","_s","next","done","err","isArray","checkRendering","createDocumentationMessageGenerator","convertNumericRefinementsToFilters","isFiniteNumber","find","noop","withUsage","connector","$$type","toPrecision","_ref","min","max","precision","pow","Math","floor","ceil","connectRange","renderFn","unmountFn","widgetParams","_ref2","_ref2$attribute","attribute","minBound","maxBound","_ref2$precision","Error","formatToNumber","v","Number","toFixed","rangeFormatter","toLocaleString","to","getRefinedState","helper","currentRange","nextMin","nextMax","resolvedState","state","currentRangeMin","currentRangeMax","_ref3","getNumericRefinement","_ref4","_ref5","_ref6","isResetMin","isResetMax","_toPrecision","parseFloat","nextMinAsNumber","nextMaxAsNumber","newNextMin","newNextMax","isResetNewNextMin","isGreaterThanCurrentRange","isMinValid","isResetNewNextMax","isLowerThanRange","isMaxValid","hasMinChange","hasMaxChange","removeNumericRefinement","addNumericRefinement","resetPage","sendEventWithRefinedState","refinedState","instantSearchInstance","eventName","filters","sendEventToInsights","insightsMethod","widgetType","eventType","payload","index","getIndex","createSendEvent","_len","args","_key","facetValue","_facetValue","_getCurrentRange","stats","_getCurrentRefinement","_ref7","_ref8","minValue","_ref9","_ref10","maxValue","Infinity","_refine","_ref11","_ref12","setState","search","init","initOptions","getWidgetRenderState","render","renderOptions","getRenderState","renderState","range","_ref13","results","facetsFromResults","disjunctiveFacets","facet","facetResult","start","refine","canRefine","format","sendEvent","dispose","_ref14","removeDisjunctiveFacet","getWidgetUiState","uiState","_ref15","searchParameters","_searchParameters$get","getNumericRefinements","_searchParameters$get2","_searchParameters$get3","concat","getWidgetSearchParameters","_ref16","widgetSearchParameters","addDisjunctiveFacet","setQueryParameters","numericRefinements","indexOf","_value$split$map","split","map","_value$split$map2","lowerBound","upperBound"],"mappings":"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","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport { checkRendering, createDocumentationMessageGenerator, convertNumericRefinementsToFilters, isFiniteNumber, find, noop } from '../../lib/utils';\nvar withUsage = createDocumentationMessageGenerator({\n  name: 'range-input',\n  connector: true\n}, {\n  name: 'range-slider',\n  connector: true\n});\nvar $$type = 'ais.range';\n\nfunction toPrecision(_ref) {\n  var min = _ref.min,\n      max = _ref.max,\n      precision = _ref.precision;\n  var pow = Math.pow(10, precision);\n  return {\n    min: min ? Math.floor(min * pow) / pow : min,\n    max: max ? Math.ceil(max * pow) / pow : max\n  };\n}\n/**\n * **Range** connector provides the logic to create custom widget that will let\n * the user refine results using a numeric range.\n *\n * This connectors provides a `refine()` function that accepts bounds. It will also provide\n * information about the min and max bounds for the current result set.\n */\n\n\nvar connectRange = function connectRange(renderFn) {\n  var unmountFn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n  checkRendering(renderFn, withUsage());\n  return function (widgetParams) {\n    var _ref2 = widgetParams || {},\n        _ref2$attribute = _ref2.attribute,\n        attribute = _ref2$attribute === void 0 ? '' : _ref2$attribute,\n        minBound = _ref2.min,\n        maxBound = _ref2.max,\n        _ref2$precision = _ref2.precision,\n        precision = _ref2$precision === void 0 ? 0 : _ref2$precision;\n\n    if (!attribute) {\n      throw new Error(withUsage('The `attribute` option is required.'));\n    }\n\n    if (isFiniteNumber(minBound) && isFiniteNumber(maxBound) && minBound > maxBound) {\n      throw new Error(withUsage(\"The `max` option can't be lower than `min`.\"));\n    }\n\n    var formatToNumber = function formatToNumber(v) {\n      return Number(Number(v).toFixed(precision));\n    };\n\n    var rangeFormatter = {\n      from: function from(v) {\n        return v.toLocaleString();\n      },\n      to: function to(v) {\n        return formatToNumber(v).toLocaleString();\n      }\n    }; // eslint-disable-next-line complexity\n\n    var getRefinedState = function getRefinedState(helper, currentRange, nextMin, nextMax) {\n      var resolvedState = helper.state;\n      var currentRangeMin = currentRange.min,\n          currentRangeMax = currentRange.max;\n\n      var _ref3 = resolvedState.getNumericRefinement(attribute, '>=') || [],\n          _ref4 = _slicedToArray(_ref3, 1),\n          min = _ref4[0];\n\n      var _ref5 = resolvedState.getNumericRefinement(attribute, '<=') || [],\n          _ref6 = _slicedToArray(_ref5, 1),\n          max = _ref6[0];\n\n      var isResetMin = nextMin === undefined || nextMin === '';\n      var isResetMax = nextMax === undefined || nextMax === '';\n\n      var _toPrecision = toPrecision({\n        min: !isResetMin ? parseFloat(nextMin) : undefined,\n        max: !isResetMax ? parseFloat(nextMax) : undefined,\n        precision: precision\n      }),\n          nextMinAsNumber = _toPrecision.min,\n          nextMaxAsNumber = _toPrecision.max;\n\n      var newNextMin;\n\n      if (!isFiniteNumber(minBound) && currentRangeMin === nextMinAsNumber) {\n        newNextMin = undefined;\n      } else if (isFiniteNumber(minBound) && isResetMin) {\n        newNextMin = minBound;\n      } else {\n        newNextMin = nextMinAsNumber;\n      }\n\n      var newNextMax;\n\n      if (!isFiniteNumber(maxBound) && currentRangeMax === nextMaxAsNumber) {\n        newNextMax = undefined;\n      } else if (isFiniteNumber(maxBound) && isResetMax) {\n        newNextMax = maxBound;\n      } else {\n        newNextMax = nextMaxAsNumber;\n      }\n\n      var isResetNewNextMin = newNextMin === undefined;\n      var isGreaterThanCurrentRange = isFiniteNumber(currentRangeMin) && currentRangeMin <= newNextMin;\n      var isMinValid = isResetNewNextMin || isFiniteNumber(newNextMin) && (!isFiniteNumber(currentRangeMin) || isGreaterThanCurrentRange);\n      var isResetNewNextMax = newNextMax === undefined;\n      var isLowerThanRange = isFiniteNumber(newNextMax) && currentRangeMax >= newNextMax;\n      var isMaxValid = isResetNewNextMax || isFiniteNumber(newNextMax) && (!isFiniteNumber(currentRangeMax) || isLowerThanRange);\n      var hasMinChange = min !== newNextMin;\n      var hasMaxChange = max !== newNextMax;\n\n      if ((hasMinChange || hasMaxChange) && isMinValid && isMaxValid) {\n        resolvedState = resolvedState.removeNumericRefinement(attribute);\n\n        if (isFiniteNumber(newNextMin)) {\n          resolvedState = resolvedState.addNumericRefinement(attribute, '>=', newNextMin);\n        }\n\n        if (isFiniteNumber(newNextMax)) {\n          resolvedState = resolvedState.addNumericRefinement(attribute, '<=', newNextMax);\n        }\n\n        return resolvedState.resetPage();\n      }\n\n      return null;\n    };\n\n    var sendEventWithRefinedState = function sendEventWithRefinedState(refinedState, instantSearchInstance, helper) {\n      var eventName = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'Filter Applied';\n      var filters = convertNumericRefinementsToFilters(refinedState, attribute);\n\n      if (filters && filters.length > 0) {\n        instantSearchInstance.sendEventToInsights({\n          insightsMethod: 'clickedFilters',\n          widgetType: $$type,\n          eventType: 'click',\n          payload: {\n            eventName: eventName,\n            index: helper.getIndex(),\n            filters: filters\n          },\n          attribute: attribute\n        });\n      }\n    };\n\n    var createSendEvent = function createSendEvent(instantSearchInstance, helper, currentRange) {\n      return function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        if (args.length === 1) {\n          instantSearchInstance.sendEventToInsights(args[0]);\n          return;\n        }\n\n        var eventType = args[0],\n            facetValue = args[1],\n            eventName = args[2];\n\n        if (eventType !== 'click') {\n          return;\n        }\n\n        var _facetValue = _slicedToArray(facetValue, 2),\n            nextMin = _facetValue[0],\n            nextMax = _facetValue[1];\n\n        var refinedState = getRefinedState(helper, currentRange, nextMin, nextMax);\n        sendEventWithRefinedState(refinedState, instantSearchInstance, helper, eventName);\n      };\n    };\n\n    function _getCurrentRange(stats) {\n      var min;\n\n      if (isFiniteNumber(minBound)) {\n        min = minBound;\n      } else if (isFiniteNumber(stats.min)) {\n        min = stats.min;\n      } else {\n        min = 0;\n      }\n\n      var max;\n\n      if (isFiniteNumber(maxBound)) {\n        max = maxBound;\n      } else if (isFiniteNumber(stats.max)) {\n        max = stats.max;\n      } else {\n        max = 0;\n      }\n\n      return toPrecision({\n        min: min,\n        max: max,\n        precision: precision\n      });\n    }\n\n    function _getCurrentRefinement(helper) {\n      var _ref7 = helper.getNumericRefinement(attribute, '>=') || [],\n          _ref8 = _slicedToArray(_ref7, 1),\n          minValue = _ref8[0];\n\n      var _ref9 = helper.getNumericRefinement(attribute, '<=') || [],\n          _ref10 = _slicedToArray(_ref9, 1),\n          maxValue = _ref10[0];\n\n      var min = isFiniteNumber(minValue) ? minValue : -Infinity;\n      var max = isFiniteNumber(maxValue) ? maxValue : Infinity;\n      return [min, max];\n    }\n\n    function _refine(instantSearchInstance, helper, currentRange) {\n      return function () {\n        var _ref11 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [undefined, undefined],\n            _ref12 = _slicedToArray(_ref11, 2),\n            nextMin = _ref12[0],\n            nextMax = _ref12[1];\n\n        var refinedState = getRefinedState(helper, currentRange, nextMin, nextMax);\n\n        if (refinedState) {\n          sendEventWithRefinedState(refinedState, instantSearchInstance, helper);\n          helper.setState(refinedState).search();\n        }\n      };\n    }\n\n    return {\n      $$type: $$type,\n      init: function init(initOptions) {\n        renderFn(_objectSpread(_objectSpread({}, this.getWidgetRenderState(initOptions)), {}, {\n          instantSearchInstance: initOptions.instantSearchInstance\n        }), true);\n      },\n      render: function render(renderOptions) {\n        renderFn(_objectSpread(_objectSpread({}, this.getWidgetRenderState(renderOptions)), {}, {\n          instantSearchInstance: renderOptions.instantSearchInstance\n        }), false);\n      },\n      getRenderState: function getRenderState(renderState, renderOptions) {\n        return _objectSpread(_objectSpread({}, renderState), {}, {\n          range: _objectSpread(_objectSpread({}, renderState.range), {}, _defineProperty({}, attribute, this.getWidgetRenderState(renderOptions)))\n        });\n      },\n      getWidgetRenderState: function getWidgetRenderState(_ref13) {\n        var results = _ref13.results,\n            helper = _ref13.helper,\n            instantSearchInstance = _ref13.instantSearchInstance;\n        var facetsFromResults = results && results.disjunctiveFacets || [];\n        var facet = find(facetsFromResults, function (facetResult) {\n          return facetResult.name === attribute;\n        });\n        var stats = facet && facet.stats || {\n          min: undefined,\n          max: undefined\n        };\n\n        var currentRange = _getCurrentRange(stats);\n\n        var start = _getCurrentRefinement(helper);\n\n        var refine;\n\n        if (!results) {\n          // On first render pass an empty range\n          // to be able to bypass the validation\n          // related to it\n          refine = _refine(instantSearchInstance, helper, {\n            min: undefined,\n            max: undefined\n          });\n        } else {\n          refine = _refine(instantSearchInstance, helper, currentRange);\n        }\n\n        return {\n          refine: refine,\n          canRefine: currentRange.min !== currentRange.max,\n          format: rangeFormatter,\n          range: currentRange,\n          sendEvent: createSendEvent(instantSearchInstance, helper, currentRange),\n          widgetParams: _objectSpread(_objectSpread({}, widgetParams), {}, {\n            precision: precision\n          }),\n          start: start\n        };\n      },\n      dispose: function dispose(_ref14) {\n        var state = _ref14.state;\n        unmountFn();\n        return state.removeDisjunctiveFacet(attribute).removeNumericRefinement(attribute);\n      },\n      getWidgetUiState: function getWidgetUiState(uiState, _ref15) {\n        var searchParameters = _ref15.searchParameters;\n\n        var _searchParameters$get = searchParameters.getNumericRefinements(attribute),\n            _searchParameters$get2 = _searchParameters$get['>='],\n            min = _searchParameters$get2 === void 0 ? [] : _searchParameters$get2,\n            _searchParameters$get3 = _searchParameters$get['<='],\n            max = _searchParameters$get3 === void 0 ? [] : _searchParameters$get3;\n\n        if (min.length === 0 && max.length === 0) {\n          return uiState;\n        }\n\n        return _objectSpread(_objectSpread({}, uiState), {}, {\n          range: _objectSpread(_objectSpread({}, uiState.range), {}, _defineProperty({}, attribute, \"\".concat(min, \":\").concat(max)))\n        });\n      },\n      getWidgetSearchParameters: function getWidgetSearchParameters(searchParameters, _ref16) {\n        var uiState = _ref16.uiState;\n        var widgetSearchParameters = searchParameters.addDisjunctiveFacet(attribute).setQueryParameters({\n          numericRefinements: _objectSpread(_objectSpread({}, searchParameters.numericRefinements), {}, _defineProperty({}, attribute, {}))\n        });\n\n        if (isFiniteNumber(minBound)) {\n          widgetSearchParameters = widgetSearchParameters.addNumericRefinement(attribute, '>=', minBound);\n        }\n\n        if (isFiniteNumber(maxBound)) {\n          widgetSearchParameters = widgetSearchParameters.addNumericRefinement(attribute, '<=', maxBound);\n        }\n\n        var value = uiState.range && uiState.range[attribute];\n\n        if (!value || value.indexOf(':') === -1) {\n          return widgetSearchParameters;\n        }\n\n        var _value$split$map = value.split(':').map(parseFloat),\n            _value$split$map2 = _slicedToArray(_value$split$map, 2),\n            lowerBound = _value$split$map2[0],\n            upperBound = _value$split$map2[1];\n\n        if (isFiniteNumber(lowerBound) && (!isFiniteNumber(minBound) || minBound < lowerBound)) {\n          widgetSearchParameters = widgetSearchParameters.removeNumericRefinement(attribute, '>=');\n          widgetSearchParameters = widgetSearchParameters.addNumericRefinement(attribute, '>=', lowerBound);\n        }\n\n        if (isFiniteNumber(upperBound) && (!isFiniteNumber(maxBound) || upperBound < maxBound)) {\n          widgetSearchParameters = widgetSearchParameters.removeNumericRefinement(attribute, '<=');\n          widgetSearchParameters = widgetSearchParameters.addNumericRefinement(attribute, '<=', upperBound);\n        }\n\n        return widgetSearchParameters;\n      }\n    };\n  };\n};\n\nexport default connectRange;"]},"metadata":{},"sourceType":"module"}