{"ast":null,"code":"import { createSuitMixin as e } from \"../mixins/suit.js\";\nimport \"vue\";\nimport \"../util/vue-compat/index-2.js\";\nimport { createPanelProviderMixin as t } from \"../mixins/panel.js\";\nexport default {\n  render: function () {\n    var e = this,\n        t = e.$createElement,\n        n = e._self._c || t;\n    return n(\"div\", {\n      class: [e.suit(), !e.canRefine && e.suit(\"\", \"noRefinement\")]\n    }, [e.getSlot(\"header\") ? n(\"div\", {\n      class: e.suit(\"header\")\n    }, [e._t(\"header\", null, {\n      hasRefinements: e.canRefine\n    })], 2) : e._e(), e._v(\" \"), n(\"div\", {\n      class: e.suit(\"body\")\n    }, [e._t(\"default\", null, {\n      hasRefinements: e.canRefine\n    })], 2), e._v(\" \"), e.getSlot(\"footer\") ? n(\"div\", {\n      class: e.suit(\"footer\")\n    }, [e._t(\"footer\", null, {\n      hasRefinements: e.canRefine\n    })], 2) : e._e()]);\n  },\n  staticRenderFns: [],\n  name: \"AisPanel\",\n  mixins: [e({\n    name: \"Panel\"\n  }), t()],\n  methods: {\n    getSlot: function (e) {\n      return this.$slots[e] || this.$scopedSlots[e];\n    }\n  }\n};","map":{"version":3,"sources":["../../../../src/components/Panel.vue"],"names":["render","name","mixins","createSuitMixin","createPanelProviderMixin","methods","getSlot","this","$slots","$scopedSlots"],"mappings":";;;;eA+Be;AAACA,EAAAA,MAAAA,EAAAA,YAAAA;AAAAA,QAAAA,CAAAA,GAAAA,IAAAA;AAAAA,QAAAA,CAAAA,GAAAA,CAAAA,CAAAA,cAAAA;AAAAA,QAAAA,CAAAA,GAAAA,CAAAA,CAAAA,KAAAA,CAAAA,EAAAA,IAAAA,CAAAA;AAAAA,WAAAA,CAAAA,CAAAA,KAAAA,EAAAA;AAAAA,MAAAA,KAAAA,EAAAA,CAAAA,CAAAA,CAAAA,IAAAA,EAAAA,EAAAA,CAAAA,CAAAA,CAAAA,SAAAA,IAAAA,CAAAA,CAAAA,IAAAA,CAAAA,EAAAA,EAAAA,cAAAA,CAAAA;AAAAA,KAAAA,EAAAA,CAAAA,CAAAA,CAAAA,OAAAA,CAAAA,QAAAA,IAAAA,CAAAA,CAAAA,KAAAA,EAAAA;AAAAA,MAAAA,KAAAA,EAAAA,CAAAA,CAAAA,IAAAA,CAAAA,QAAAA;AAAAA,KAAAA,EAAAA,CAAAA,CAAAA,CAAAA,EAAAA,CAAAA,QAAAA,EAAAA,IAAAA,EAAAA;AAAAA,MAAAA,cAAAA,EAAAA,CAAAA,CAAAA;AAAAA,KAAAA,CAAAA,CAAAA,EAAAA,CAAAA,CAAAA,GAAAA,CAAAA,CAAAA,EAAAA,EAAAA,EAAAA,CAAAA,CAAAA,EAAAA,CAAAA,GAAAA,CAAAA,EAAAA,CAAAA,CAAAA,KAAAA,EAAAA;AAAAA,MAAAA,KAAAA,EAAAA,CAAAA,CAAAA,IAAAA,CAAAA,MAAAA;AAAAA,KAAAA,EAAAA,CAAAA,CAAAA,CAAAA,EAAAA,CAAAA,SAAAA,EAAAA,IAAAA,EAAAA;AAAAA,MAAAA,cAAAA,EAAAA,CAAAA,CAAAA;AAAAA,KAAAA,CAAAA,CAAAA,EAAAA,CAAAA,CAAAA,EAAAA,CAAAA,CAAAA,EAAAA,CAAAA,GAAAA,CAAAA,EAAAA,CAAAA,CAAAA,OAAAA,CAAAA,QAAAA,IAAAA,CAAAA,CAAAA,KAAAA,EAAAA;AAAAA,MAAAA,KAAAA,EAAAA,CAAAA,CAAAA,IAAAA,CAAAA,QAAAA;AAAAA,KAAAA,EAAAA,CAAAA,CAAAA,CAAAA,EAAAA,CAAAA,QAAAA,EAAAA,IAAAA,EAAAA;AAAAA,MAAAA,cAAAA,EAAAA,CAAAA,CAAAA;AAAAA,KAAAA,CAAAA,CAAAA,EAAAA,CAAAA,CAAAA,GAAAA,CAAAA,CAAAA,EAAAA,EAAAA,CAAAA,CAAAA;AAAAA,GAAD;AAACA,EAAAA,eAAAA,EAAAA,EAAD;AACbC,EAAAA,IAAAA,EAAM,UADO;AAEbC,EAAAA,MAAAA,EAAQ,CAACC,CAAAA,CAAgB;AAAEF,IAAAA,IAAAA,EAAM;AAAR,GAAhBE,CAAD,EAAqCC,CAAAA,EAArC,CAFK;AAGbC,EAAAA,OAAAA,EAAS;AACPC,IAAAA,OAAAA,EAAAA,UAAQL,CAARK,EAAQL;AACN,aAEIM,KAAKC,MAALD,CAAYN,CAAZM,KAAqBA,KAAKE,YAALF,CAAkBN,CAAlBM,CAFzB;AAE2CN;AAJtC;AAHI,C","sourcesContent":["<template>\n  <div :class=\"[suit(), !canRefine && suit('', 'noRefinement')]\">\n    <div\n      v-if=\"getSlot('header')\"\n      :class=\"suit('header')\"\n    >\n      <slot\n        name=\"header\"\n        :has-refinements=\"canRefine\"\n      />\n    </div>\n    <div :class=\"suit('body')\">\n      <slot :has-refinements=\"canRefine\" />\n    </div>\n    <div\n      v-if=\"getSlot('footer')\"\n      :class=\"suit('footer')\"\n    >\n      <slot\n        name=\"footer\"\n        :has-refinements=\"canRefine\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { isVue3 } from '../util/vue-compat';\nimport { createPanelProviderMixin } from '../mixins/panel';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisPanel',\n  mixins: [createSuitMixin({ name: 'Panel' }), createPanelProviderMixin()],\n  methods: {\n    getSlot(name) {\n      return isVue3\n        ? this.$slots[name]\n        : this.$slots[name] || this.$scopedSlots[name];\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}