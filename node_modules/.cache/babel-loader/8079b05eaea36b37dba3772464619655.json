{"ast":null,"code":"import { createSuitMixin as e } from \"../mixins/suit.js\";\nimport { createWidgetMixin as t } from \"../mixins/widget.js\";\nimport { connectAutocomplete as n } from \"instantsearch.js/es/connectors\";\nexport default {\n  render: function () {\n    var e = this,\n        t = e.$createElement,\n        n = e._self._c || t;\n    return e.state ? n(\"div\", {\n      class: e.suit()\n    }, [e._t(\"default\", [n(\"p\", [e._v(\"This widget doesn't render anything without a filled in default slot.\")]), e._v(\" \"), n(\"p\", [e._v(\"query, function to refine and results are provided.\")]), e._v(\" \"), n(\"pre\", [e._v(\"refine: Function\")]), e._v(\" \"), n(\"pre\", [e._v('currentRefinement: \"' + e._s(e.state.currentRefinement) + '\"')]), e._v(\" \"), n(\"details\", [e._m(0), e._v(\" \"), n(\"pre\", [e._v(e._s(e.state.indices))])])], {\n      refine: e.state.refine,\n      currentRefinement: e.state.currentRefinement,\n      indices: e.state.indices\n    })], 2) : e._e();\n  },\n  staticRenderFns: [function () {\n    var e = this.$createElement,\n        t = this._self._c || e;\n    return t(\"summary\", [t(\"code\", [this._v(\"indices\")]), this._v(\":\")]);\n  }],\n  name: \"AisAutocomplete\",\n  mixins: [t({\n    connector: n\n  }), e({\n    name: \"Autocomplete\"\n  })],\n  props: {\n    escapeHTML: {\n      type: Boolean,\n      required: !1,\n      default: !0\n    }\n  },\n  computed: {\n    widgetParams: function () {\n      return {\n        escapeHTML: this.escapeHTML\n      };\n    }\n  }\n};","map":{"version":3,"sources":["../../../../src/components/Autocomplete.vue"],"names":["render","name","mixins","createWidgetMixin","connector","connectAutocomplete","createSuitMixin","props","escapeHTML","type","Boolean","required","default","computed","widgetParams","this"],"mappings":"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","sourcesContent":["<template>\n  <div\n    :class=\"suit()\"\n    v-if=\"state\"\n  >\n    <slot\n      :refine=\"state.refine\"\n      :current-refinement=\"state.currentRefinement\"\n      :indices=\"state.indices\"\n    >\n      <p>This widget doesn't render anything without a filled in default slot.</p>\n      <p>query, function to refine and results are provided.</p>\n      <pre>refine: Function</pre>\n      <pre>currentRefinement: \"{{ state.currentRefinement }}\"</pre>\n      <details>\n        <summary><code>indices</code>:</summary>\n        <pre>{{ state.indices }}</pre>\n      </details>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { createWidgetMixin } from '../mixins/widget';\nimport { connectAutocomplete } from 'instantsearch.js/es/connectors';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisAutocomplete',\n  mixins: [\n    createWidgetMixin({ connector: connectAutocomplete }),\n    createSuitMixin({ name: 'Autocomplete' }),\n  ],\n  props: {\n    escapeHTML: {\n      type: Boolean,\n      required: false,\n      default: true,\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        escapeHTML: this.escapeHTML,\n      };\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}