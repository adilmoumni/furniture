{"ast":null,"code":"export default function (r, e, o) {\n  if (!r) throw new Error(\"You need to provide `widgetName` in your data\");\n  var t = [\"ais-\" + r];\n  return e && t.push(\"-\" + e), o && t.push(\"--\" + o), t.join(\"\");\n}","map":{"version":3,"sources":["../../../../src/util/suit.js"],"names":["widgetName","element","modifier","Error","const","elements","push","join"],"mappings":"eASe,UAAcA,CAAd,EAA0BC,CAA1B,EAAmCC,CAAnC,EAAmCA;AAChD,MAAA,CAAKF,CAAL,EACE,MAAM,IAAIG,KAAJ,CAAU,+CAAV,CAAN;AAGFC,MAAMC,CAAAA,GAAW,CAAA,SAAQL,CAAR,CAAjBI;AAUA,SARIH,CAAAA,IACFI,CAAAA,CAASC,IAATD,CAASC,MAASL,CAAlBI,CADEJ,EAIAC,CAAAA,IACFG,CAAAA,CAASC,IAATD,CAASC,OAAUJ,CAAnBG,CALEJ,EAQGI,CAAAA,CAASE,IAATF,CAAc,EAAdA,CAAP;AAAqB","sourcesContent":["/**\n * Create class names like ais-widgetName-element--modifier\n *\n * @param {string} widgetName first part\n * @param {string} element part separated by -\n * @param {string} modifier final part, separated by --\n *\n * @returns {string} the composed class name\n */\nexport default function suit(widgetName, element, modifier) {\n  if (!widgetName) {\n    throw new Error('You need to provide `widgetName` in your data');\n  }\n\n  const elements = [`ais-${widgetName}`];\n\n  if (element) {\n    elements.push(`-${element}`);\n  }\n\n  if (modifier) {\n    elements.push(`--${modifier}`);\n  }\n\n  return elements.join('');\n}\n"]},"metadata":{},"sourceType":"module"}