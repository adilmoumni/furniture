{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useState, useEffect, useMemo, useContext } from 'react';\nimport { instantSearchContext } from 'react-instantsearch-core';\nimport { createConcurrentSafePromise } from '../lib/createConcurrentSafePromise';\nimport { debounce } from '../lib/debounce';\n\nfunction hasReactHooks() {\n  // >= 16.8.0\n  var _React$version$split$ = React.version.split('.').map(Number),\n      _React$version$split$2 = _slicedToArray(_React$version$split$, 2),\n      major = _React$version$split$2[0],\n      minor = _React$version$split$2[1];\n\n  return major >= 17 || major === 16 && minor >= 8;\n}\n\nexport default function useAnswers(_ref) {\n  var searchClient = _ref.searchClient,\n      queryLanguages = _ref.queryLanguages,\n      attributesForPrediction = _ref.attributesForPrediction,\n      nbHits = _ref.nbHits,\n      _ref$renderDebounceTi = _ref.renderDebounceTime,\n      renderDebounceTime = _ref$renderDebounceTi === void 0 ? 100 : _ref$renderDebounceTi,\n      _ref$searchDebounceTi = _ref.searchDebounceTime,\n      searchDebounceTime = _ref$searchDebounceTi === void 0 ? 100 : _ref$searchDebounceTi,\n      extraParameters = _objectWithoutProperties(_ref, [\"searchClient\", \"queryLanguages\", \"attributesForPrediction\", \"nbHits\", \"renderDebounceTime\", \"searchDebounceTime\"]);\n\n  if (!hasReactHooks()) {\n    throw new Error(\"`Answers` component and `useAnswers` hook require all React packages to be 16.8.0 or higher.\");\n  }\n\n  var context = useContext(instantSearchContext);\n\n  var _useState = useState(context.store.getState().widgets.query),\n      _useState2 = _slicedToArray(_useState, 2),\n      query = _useState2[0],\n      setQuery = _useState2[1];\n\n  var _useState3 = useState(context.mainTargetedIndex),\n      _useState4 = _slicedToArray(_useState3, 2),\n      index = _useState4[0],\n      setIndex = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isLoading = _useState6[0],\n      setIsLoading = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      hits = _useState8[0],\n      setHits = _useState8[1];\n\n  var runConcurrentSafePromise = useMemo(function () {\n    return createConcurrentSafePromise();\n  }, []);\n  var searchIndex = useMemo(function () {\n    return searchClient.initIndex(index);\n  }, [searchClient, index]);\n\n  if (!searchIndex.findAnswers) {\n    throw new Error('`Answers` component and `useAnswers` hook require `algoliasearch` to be 4.8.0 or higher.');\n  }\n\n  var debouncedSearch = useMemo(function () {\n    return debounce(searchIndex.findAnswers, searchDebounceTime);\n  }, [searchIndex]);\n  useEffect(function () {\n    setIndex(context.mainTargetedIndex);\n    return context.store.subscribe(function () {\n      var _context$store$getSta = context.store.getState(),\n          widgets = _context$store$getSta.widgets;\n\n      setQuery(widgets.query);\n    });\n  }, [context]);\n  var setDebouncedResult = useMemo(function () {\n    return debounce(function (result) {\n      setIsLoading(false);\n      setHits(result.hits);\n    }, renderDebounceTime);\n  }, [setIsLoading, setHits]);\n\n  var fetchAnswers = function fetchAnswers() {\n    if (!query) {\n      setIsLoading(false);\n      setHits([]);\n      return;\n    }\n\n    setIsLoading(true);\n    runConcurrentSafePromise(debouncedSearch(query, queryLanguages, _objectSpread({}, extraParameters, {\n      nbHits: nbHits,\n      attributesForPrediction: attributesForPrediction\n    }))).then(function (result) {\n      if (!result) {\n        // It's undefined when it's debounced.\n        return;\n      }\n\n      setDebouncedResult(result);\n    });\n  };\n\n  useEffect(function () {\n    fetchAnswers();\n  }, [query]);\n  return {\n    hits: hits,\n    isLoading: isLoading\n  };\n}","map":{"version":3,"sources":["/Users/adil/Documents/GitHub/furniture-front/node_modules/react-instantsearch-dom/dist/es/hooks/useAnswers.js"],"names":["_objectSpread","_objectWithoutProperties","_slicedToArray","React","useState","useEffect","useMemo","useContext","instantSearchContext","createConcurrentSafePromise","debounce","hasReactHooks","_React$version$split$","version","split","map","Number","_React$version$split$2","major","minor","useAnswers","_ref","searchClient","queryLanguages","attributesForPrediction","nbHits","_ref$renderDebounceTi","renderDebounceTime","_ref$searchDebounceTi","searchDebounceTime","extraParameters","Error","context","_useState","store","getState","widgets","query","_useState2","setQuery","_useState3","mainTargetedIndex","_useState4","index","setIndex","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","hits","setHits","runConcurrentSafePromise","searchIndex","initIndex","findAnswers","debouncedSearch","subscribe","_context$store$getSta","setDebouncedResult","result","fetchAnswers","then"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,yCAA1B;AACA,OAAOC,wBAAP,MAAqC,oDAArC;AACA,OAAOC,cAAP,MAA2B,0CAA3B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,OAArC,EAA8CC,UAA9C,QAAgE,OAAhE;AACA,SAASC,oBAAT,QAAqC,0BAArC;AACA,SAASC,2BAAT,QAA4C,oCAA5C;AACA,SAASC,QAAT,QAAyB,iBAAzB;;AAEA,SAASC,aAAT,GAAyB;AACvB;AACA,MAAIC,qBAAqB,GAAGT,KAAK,CAACU,OAAN,CAAcC,KAAd,CAAoB,GAApB,EAAyBC,GAAzB,CAA6BC,MAA7B,CAA5B;AAAA,MACIC,sBAAsB,GAAGf,cAAc,CAACU,qBAAD,EAAwB,CAAxB,CAD3C;AAAA,MAEIM,KAAK,GAAGD,sBAAsB,CAAC,CAAD,CAFlC;AAAA,MAGIE,KAAK,GAAGF,sBAAsB,CAAC,CAAD,CAHlC;;AAKA,SAAOC,KAAK,IAAI,EAAT,IAAeA,KAAK,KAAK,EAAV,IAAgBC,KAAK,IAAI,CAA/C;AACD;;AAED,eAAe,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACvC,MAAIC,YAAY,GAAGD,IAAI,CAACC,YAAxB;AAAA,MACIC,cAAc,GAAGF,IAAI,CAACE,cAD1B;AAAA,MAEIC,uBAAuB,GAAGH,IAAI,CAACG,uBAFnC;AAAA,MAGIC,MAAM,GAAGJ,IAAI,CAACI,MAHlB;AAAA,MAIIC,qBAAqB,GAAGL,IAAI,CAACM,kBAJjC;AAAA,MAKIA,kBAAkB,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,GAAnC,GAAyCA,qBALlE;AAAA,MAMIE,qBAAqB,GAAGP,IAAI,CAACQ,kBANjC;AAAA,MAOIA,kBAAkB,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,GAAnC,GAAyCA,qBAPlE;AAAA,MAQIE,eAAe,GAAG7B,wBAAwB,CAACoB,IAAD,EAAO,CAAC,cAAD,EAAiB,gBAAjB,EAAmC,yBAAnC,EAA8D,QAA9D,EAAwE,oBAAxE,EAA8F,oBAA9F,CAAP,CAR9C;;AAUA,MAAI,CAACV,aAAa,EAAlB,EAAsB;AACpB,UAAM,IAAIoB,KAAJ,CAAU,8FAAV,CAAN;AACD;;AAED,MAAIC,OAAO,GAAGzB,UAAU,CAACC,oBAAD,CAAxB;;AAEA,MAAIyB,SAAS,GAAG7B,QAAQ,CAAC4B,OAAO,CAACE,KAAR,CAAcC,QAAd,GAAyBC,OAAzB,CAAiCC,KAAlC,CAAxB;AAAA,MACIC,UAAU,GAAGpC,cAAc,CAAC+B,SAAD,EAAY,CAAZ,CAD/B;AAAA,MAEII,KAAK,GAAGC,UAAU,CAAC,CAAD,CAFtB;AAAA,MAGIC,QAAQ,GAAGD,UAAU,CAAC,CAAD,CAHzB;;AAKA,MAAIE,UAAU,GAAGpC,QAAQ,CAAC4B,OAAO,CAACS,iBAAT,CAAzB;AAAA,MACIC,UAAU,GAAGxC,cAAc,CAACsC,UAAD,EAAa,CAAb,CAD/B;AAAA,MAEIG,KAAK,GAAGD,UAAU,CAAC,CAAD,CAFtB;AAAA,MAGIE,QAAQ,GAAGF,UAAU,CAAC,CAAD,CAHzB;;AAKA,MAAIG,UAAU,GAAGzC,QAAQ,CAAC,KAAD,CAAzB;AAAA,MACI0C,UAAU,GAAG5C,cAAc,CAAC2C,UAAD,EAAa,CAAb,CAD/B;AAAA,MAEIE,SAAS,GAAGD,UAAU,CAAC,CAAD,CAF1B;AAAA,MAGIE,YAAY,GAAGF,UAAU,CAAC,CAAD,CAH7B;;AAKA,MAAIG,UAAU,GAAG7C,QAAQ,CAAC,EAAD,CAAzB;AAAA,MACI8C,UAAU,GAAGhD,cAAc,CAAC+C,UAAD,EAAa,CAAb,CAD/B;AAAA,MAEIE,IAAI,GAAGD,UAAU,CAAC,CAAD,CAFrB;AAAA,MAGIE,OAAO,GAAGF,UAAU,CAAC,CAAD,CAHxB;;AAKA,MAAIG,wBAAwB,GAAG/C,OAAO,CAAC,YAAY;AACjD,WAAOG,2BAA2B,EAAlC;AACD,GAFqC,EAEnC,EAFmC,CAAtC;AAGA,MAAI6C,WAAW,GAAGhD,OAAO,CAAC,YAAY;AACpC,WAAOgB,YAAY,CAACiC,SAAb,CAAuBZ,KAAvB,CAAP;AACD,GAFwB,EAEtB,CAACrB,YAAD,EAAeqB,KAAf,CAFsB,CAAzB;;AAIA,MAAI,CAACW,WAAW,CAACE,WAAjB,EAA8B;AAC5B,UAAM,IAAIzB,KAAJ,CAAU,0FAAV,CAAN;AACD;;AAED,MAAI0B,eAAe,GAAGnD,OAAO,CAAC,YAAY;AACxC,WAAOI,QAAQ,CAAC4C,WAAW,CAACE,WAAb,EAA0B3B,kBAA1B,CAAf;AACD,GAF4B,EAE1B,CAACyB,WAAD,CAF0B,CAA7B;AAGAjD,EAAAA,SAAS,CAAC,YAAY;AACpBuC,IAAAA,QAAQ,CAACZ,OAAO,CAACS,iBAAT,CAAR;AACA,WAAOT,OAAO,CAACE,KAAR,CAAcwB,SAAd,CAAwB,YAAY;AACzC,UAAIC,qBAAqB,GAAG3B,OAAO,CAACE,KAAR,CAAcC,QAAd,EAA5B;AAAA,UACIC,OAAO,GAAGuB,qBAAqB,CAACvB,OADpC;;AAGAG,MAAAA,QAAQ,CAACH,OAAO,CAACC,KAAT,CAAR;AACD,KALM,CAAP;AAMD,GARQ,EAQN,CAACL,OAAD,CARM,CAAT;AASA,MAAI4B,kBAAkB,GAAGtD,OAAO,CAAC,YAAY;AAC3C,WAAOI,QAAQ,CAAC,UAAUmD,MAAV,EAAkB;AAChCb,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAI,MAAAA,OAAO,CAACS,MAAM,CAACV,IAAR,CAAP;AACD,KAHc,EAGZxB,kBAHY,CAAf;AAID,GAL+B,EAK7B,CAACqB,YAAD,EAAeI,OAAf,CAL6B,CAAhC;;AAOA,MAAIU,YAAY,GAAG,SAASA,YAAT,GAAwB;AACzC,QAAI,CAACzB,KAAL,EAAY;AACVW,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAI,MAAAA,OAAO,CAAC,EAAD,CAAP;AACA;AACD;;AAEDJ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAK,IAAAA,wBAAwB,CAACI,eAAe,CAACpB,KAAD,EAAQd,cAAR,EAAwBvB,aAAa,CAAC,EAAD,EAAK8B,eAAL,EAAsB;AACjGL,MAAAA,MAAM,EAAEA,MADyF;AAEjGD,MAAAA,uBAAuB,EAAEA;AAFwE,KAAtB,CAArC,CAAhB,CAAxB,CAGKuC,IAHL,CAGU,UAAUF,MAAV,EAAkB;AAC1B,UAAI,CAACA,MAAL,EAAa;AACX;AACA;AACD;;AAEDD,MAAAA,kBAAkB,CAACC,MAAD,CAAlB;AACD,KAVD;AAWD,GAnBD;;AAqBAxD,EAAAA,SAAS,CAAC,YAAY;AACpByD,IAAAA,YAAY;AACb,GAFQ,EAEN,CAACzB,KAAD,CAFM,CAAT;AAGA,SAAO;AACLc,IAAAA,IAAI,EAAEA,IADD;AAELJ,IAAAA,SAAS,EAAEA;AAFN,GAAP;AAID","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useState, useEffect, useMemo, useContext } from 'react';\nimport { instantSearchContext } from 'react-instantsearch-core';\nimport { createConcurrentSafePromise } from '../lib/createConcurrentSafePromise';\nimport { debounce } from '../lib/debounce';\n\nfunction hasReactHooks() {\n  // >= 16.8.0\n  var _React$version$split$ = React.version.split('.').map(Number),\n      _React$version$split$2 = _slicedToArray(_React$version$split$, 2),\n      major = _React$version$split$2[0],\n      minor = _React$version$split$2[1];\n\n  return major >= 17 || major === 16 && minor >= 8;\n}\n\nexport default function useAnswers(_ref) {\n  var searchClient = _ref.searchClient,\n      queryLanguages = _ref.queryLanguages,\n      attributesForPrediction = _ref.attributesForPrediction,\n      nbHits = _ref.nbHits,\n      _ref$renderDebounceTi = _ref.renderDebounceTime,\n      renderDebounceTime = _ref$renderDebounceTi === void 0 ? 100 : _ref$renderDebounceTi,\n      _ref$searchDebounceTi = _ref.searchDebounceTime,\n      searchDebounceTime = _ref$searchDebounceTi === void 0 ? 100 : _ref$searchDebounceTi,\n      extraParameters = _objectWithoutProperties(_ref, [\"searchClient\", \"queryLanguages\", \"attributesForPrediction\", \"nbHits\", \"renderDebounceTime\", \"searchDebounceTime\"]);\n\n  if (!hasReactHooks()) {\n    throw new Error(\"`Answers` component and `useAnswers` hook require all React packages to be 16.8.0 or higher.\");\n  }\n\n  var context = useContext(instantSearchContext);\n\n  var _useState = useState(context.store.getState().widgets.query),\n      _useState2 = _slicedToArray(_useState, 2),\n      query = _useState2[0],\n      setQuery = _useState2[1];\n\n  var _useState3 = useState(context.mainTargetedIndex),\n      _useState4 = _slicedToArray(_useState3, 2),\n      index = _useState4[0],\n      setIndex = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isLoading = _useState6[0],\n      setIsLoading = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      hits = _useState8[0],\n      setHits = _useState8[1];\n\n  var runConcurrentSafePromise = useMemo(function () {\n    return createConcurrentSafePromise();\n  }, []);\n  var searchIndex = useMemo(function () {\n    return searchClient.initIndex(index);\n  }, [searchClient, index]);\n\n  if (!searchIndex.findAnswers) {\n    throw new Error('`Answers` component and `useAnswers` hook require `algoliasearch` to be 4.8.0 or higher.');\n  }\n\n  var debouncedSearch = useMemo(function () {\n    return debounce(searchIndex.findAnswers, searchDebounceTime);\n  }, [searchIndex]);\n  useEffect(function () {\n    setIndex(context.mainTargetedIndex);\n    return context.store.subscribe(function () {\n      var _context$store$getSta = context.store.getState(),\n          widgets = _context$store$getSta.widgets;\n\n      setQuery(widgets.query);\n    });\n  }, [context]);\n  var setDebouncedResult = useMemo(function () {\n    return debounce(function (result) {\n      setIsLoading(false);\n      setHits(result.hits);\n    }, renderDebounceTime);\n  }, [setIsLoading, setHits]);\n\n  var fetchAnswers = function fetchAnswers() {\n    if (!query) {\n      setIsLoading(false);\n      setHits([]);\n      return;\n    }\n\n    setIsLoading(true);\n    runConcurrentSafePromise(debouncedSearch(query, queryLanguages, _objectSpread({}, extraParameters, {\n      nbHits: nbHits,\n      attributesForPrediction: attributesForPrediction\n    }))).then(function (result) {\n      if (!result) {\n        // It's undefined when it's debounced.\n        return;\n      }\n\n      setDebouncedResult(result);\n    });\n  };\n\n  useEffect(function () {\n    fetchAnswers();\n  }, [query]);\n  return {\n    hits: hits,\n    isLoading: isLoading\n  };\n}"]},"metadata":{},"sourceType":"module"}