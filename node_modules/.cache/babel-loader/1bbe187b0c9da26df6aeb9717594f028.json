{"ast":null,"code":"import { component } from '../lib/suit';\nimport { getPropertyByPath, TAG_REPLACEMENT } from '../lib/utils';\nvar suit = component('Highlight');\nexport default function highlight(_ref) {\n  var attribute = _ref.attribute,\n      _ref$highlightedTagNa = _ref.highlightedTagName,\n      highlightedTagName = _ref$highlightedTagNa === void 0 ? 'mark' : _ref$highlightedTagNa,\n      hit = _ref.hit,\n      _ref$cssClasses = _ref.cssClasses,\n      cssClasses = _ref$cssClasses === void 0 ? {} : _ref$cssClasses;\n\n  var _ref2 = getPropertyByPath(hit._highlightResult, attribute) || {},\n      _ref2$value = _ref2.value,\n      attributeValue = _ref2$value === void 0 ? '' : _ref2$value; // cx is not used, since it would be bundled as a dependency for Vue & Angular\n\n\n  var className = suit({\n    descendantName: 'highlighted'\n  }) + (cssClasses.highlighted ? \" \".concat(cssClasses.highlighted) : '');\n  return attributeValue.replace(new RegExp(TAG_REPLACEMENT.highlightPreTag, 'g'), \"<\".concat(highlightedTagName, \" class=\\\"\").concat(className, \"\\\">\")).replace(new RegExp(TAG_REPLACEMENT.highlightPostTag, 'g'), \"</\".concat(highlightedTagName, \">\"));\n}","map":{"version":3,"sources":["/Users/adil/Documents/GitHub/furniture-front/node_modules/instantsearch.js/es/helpers/highlight.js"],"names":["component","getPropertyByPath","TAG_REPLACEMENT","suit","highlight","_ref","attribute","_ref$highlightedTagNa","highlightedTagName","hit","_ref$cssClasses","cssClasses","_ref2","_highlightResult","_ref2$value","value","attributeValue","className","descendantName","highlighted","concat","replace","RegExp","highlightPreTag","highlightPostTag"],"mappings":"AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,iBAAT,EAA4BC,eAA5B,QAAmD,cAAnD;AACA,IAAIC,IAAI,GAAGH,SAAS,CAAC,WAAD,CAApB;AACA,eAAe,SAASI,SAAT,CAAmBC,IAAnB,EAAyB;AACtC,MAAIC,SAAS,GAAGD,IAAI,CAACC,SAArB;AAAA,MACIC,qBAAqB,GAAGF,IAAI,CAACG,kBADjC;AAAA,MAEIA,kBAAkB,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,MAAnC,GAA4CA,qBAFrE;AAAA,MAGIE,GAAG,GAAGJ,IAAI,CAACI,GAHf;AAAA,MAIIC,eAAe,GAAGL,IAAI,CAACM,UAJ3B;AAAA,MAKIA,UAAU,GAAGD,eAAe,KAAK,KAAK,CAAzB,GAA6B,EAA7B,GAAkCA,eALnD;;AAOA,MAAIE,KAAK,GAAGX,iBAAiB,CAACQ,GAAG,CAACI,gBAAL,EAAuBP,SAAvB,CAAjB,IAAsD,EAAlE;AAAA,MACIQ,WAAW,GAAGF,KAAK,CAACG,KADxB;AAAA,MAEIC,cAAc,GAAGF,WAAW,KAAK,KAAK,CAArB,GAAyB,EAAzB,GAA8BA,WAFnD,CARsC,CAU0B;;;AAGhE,MAAIG,SAAS,GAAGd,IAAI,CAAC;AACnBe,IAAAA,cAAc,EAAE;AADG,GAAD,CAAJ,IAEVP,UAAU,CAACQ,WAAX,GAAyB,IAAIC,MAAJ,CAAWT,UAAU,CAACQ,WAAtB,CAAzB,GAA8D,EAFpD,CAAhB;AAGA,SAAOH,cAAc,CAACK,OAAf,CAAuB,IAAIC,MAAJ,CAAWpB,eAAe,CAACqB,eAA3B,EAA4C,GAA5C,CAAvB,EAAyE,IAAIH,MAAJ,CAAWZ,kBAAX,EAA+B,WAA/B,EAA4CY,MAA5C,CAAmDH,SAAnD,EAA8D,KAA9D,CAAzE,EAA+II,OAA/I,CAAuJ,IAAIC,MAAJ,CAAWpB,eAAe,CAACsB,gBAA3B,EAA6C,GAA7C,CAAvJ,EAA0M,KAAKJ,MAAL,CAAYZ,kBAAZ,EAAgC,GAAhC,CAA1M,CAAP;AACD","sourcesContent":["import { component } from '../lib/suit';\nimport { getPropertyByPath, TAG_REPLACEMENT } from '../lib/utils';\nvar suit = component('Highlight');\nexport default function highlight(_ref) {\n  var attribute = _ref.attribute,\n      _ref$highlightedTagNa = _ref.highlightedTagName,\n      highlightedTagName = _ref$highlightedTagNa === void 0 ? 'mark' : _ref$highlightedTagNa,\n      hit = _ref.hit,\n      _ref$cssClasses = _ref.cssClasses,\n      cssClasses = _ref$cssClasses === void 0 ? {} : _ref$cssClasses;\n\n  var _ref2 = getPropertyByPath(hit._highlightResult, attribute) || {},\n      _ref2$value = _ref2.value,\n      attributeValue = _ref2$value === void 0 ? '' : _ref2$value; // cx is not used, since it would be bundled as a dependency for Vue & Angular\n\n\n  var className = suit({\n    descendantName: 'highlighted'\n  }) + (cssClasses.highlighted ? \" \".concat(cssClasses.highlighted) : '');\n  return attributeValue.replace(new RegExp(TAG_REPLACEMENT.highlightPreTag, 'g'), \"<\".concat(highlightedTagName, \" class=\\\"\").concat(className, \"\\\">\")).replace(new RegExp(TAG_REPLACEMENT.highlightPostTag, 'g'), \"</\".concat(highlightedTagName, \">\"));\n}"]},"metadata":{},"sourceType":"module"}