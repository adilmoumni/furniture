{"ast":null,"code":"/**\n * This implementation is taken from Lodash implementation.\n * See: https://github.com/lodash/lodash/blob/4.17.11-npm/unescape.js\n */\n// Used to map HTML entities to characters.\nvar htmlEscapes = {\n  '&amp;': '&',\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&#39;': \"'\"\n}; // Used to match HTML entities and HTML characters.\n\nvar regexEscapedHtml = /&(amp|quot|lt|gt|#39);/g;\nvar regexHasEscapedHtml = RegExp(regexEscapedHtml.source);\n/**\n * Converts the HTML entities \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n * characters.\n */\n\nexport default function unescape(value) {\n  return value && regexHasEscapedHtml.test(value) ? value.replace(regexEscapedHtml, function (character) {\n    return htmlEscapes[character];\n  }) : value;\n}","map":{"version":3,"sources":["/Users/adil/Documents/GitHub/furniture-front/node_modules/instantsearch.js/es/lib/utils/unescape.js"],"names":["htmlEscapes","regexEscapedHtml","regexHasEscapedHtml","RegExp","source","unescape","value","test","replace","character"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,IAAIA,WAAW,GAAG;AAChB,WAAS,GADO;AAEhB,UAAQ,GAFQ;AAGhB,UAAQ,GAHQ;AAIhB,YAAU,GAJM;AAKhB,WAAS;AALO,CAAlB,C,CAMG;;AAEH,IAAIC,gBAAgB,GAAG,yBAAvB;AACA,IAAIC,mBAAmB,GAAGC,MAAM,CAACF,gBAAgB,CAACG,MAAlB,CAAhC;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACtC,SAAOA,KAAK,IAAIJ,mBAAmB,CAACK,IAApB,CAAyBD,KAAzB,CAAT,GAA2CA,KAAK,CAACE,OAAN,CAAcP,gBAAd,EAAgC,UAAUQ,SAAV,EAAqB;AACrG,WAAOT,WAAW,CAACS,SAAD,CAAlB;AACD,GAFiD,CAA3C,GAEFH,KAFL;AAGD","sourcesContent":["/**\n * This implementation is taken from Lodash implementation.\n * See: https://github.com/lodash/lodash/blob/4.17.11-npm/unescape.js\n */\n// Used to map HTML entities to characters.\nvar htmlEscapes = {\n  '&amp;': '&',\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&#39;': \"'\"\n}; // Used to match HTML entities and HTML characters.\n\nvar regexEscapedHtml = /&(amp|quot|lt|gt|#39);/g;\nvar regexHasEscapedHtml = RegExp(regexEscapedHtml.source);\n/**\n * Converts the HTML entities \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n * characters.\n */\n\nexport default function unescape(value) {\n  return value && regexHasEscapedHtml.test(value) ? value.replace(regexEscapedHtml, function (character) {\n    return htmlEscapes[character];\n  }) : value;\n}"]},"metadata":{},"sourceType":"module"}