{"ast":null,"code":"import { createSuitMixin as t } from \"../mixins/suit.js\";\nimport \"vue\";\nimport { renderCompat as i, getDefaultSlot as r } from \"../util/vue-compat/index-2.js\";\nimport { createWidgetMixin as n } from \"../mixins/widget.js\";\nimport { connectDynamicWidgets as e } from \"instantsearch.js/es/connectors\";\nimport { _objectSpread as s } from \"../util/polyfills.js\";\nexport default {\n  name: \"AisExperimentalDynamicWidgets\",\n  mixins: [n({\n    connector: e\n  }), t({\n    name: \"DynamicWidgets\"\n  })],\n  props: {\n    transformItems: {\n      type: Function,\n      default: void 0\n    }\n  },\n  render: i(function (t) {\n    var i = this,\n        n = new Map();\n\n    if ((r(this) || []).forEach(function (r) {\n      var e = function t(i) {\n        var r,\n            n = i.componentOptions && i.componentOptions.propsData;\n\n        if (n) {\n          if (n.attribute) return n.attribute;\n          if (Array.isArray(n.attributes)) return n.attributes[0];\n        }\n\n        if (r = i.componentOptions && i.componentOptions.children ? i.componentOptions.children : i.children, Array.isArray(r)) return r.reduce(function (i, r) {\n          return i || t(r);\n        }, void 0);\n      }(r);\n\n      e && n.set(e, t(\"div\", {\n        key: e,\n        class: [i.suit(\"widget\")]\n      }, [r]));\n    }), !this.state) {\n      var e = [];\n      return n.forEach(function (t) {\n        return e.push(t);\n      }), t(\"div\", s({\n        class: [this.suit()]\n      }, {\n        attrs: {\n          hidden: !0\n        }\n      }), e);\n    }\n\n    return t(\"div\", {\n      class: [this.suit()]\n    }, this.state.attributesToRender.map(function (t) {\n      return n.get(t);\n    }));\n  }),\n  computed: {\n    widgetParams: function () {\n      return {\n        transformItems: this.transformItems,\n        widgets: []\n      };\n    }\n  }\n};","map":{"version":3,"sources":["../../../../src/components/DynamicWidgets.js"],"names":["getWidgetAttribute","vnode","const","props","componentOptions","propsData","attribute","Array","isArray","attributes","children","reduce","acc","curr","undefined","name","mixins","createWidgetMixin","connector","connectDynamicWidgets","createSuitMixin","transformItems","type","Function","default","render","renderCompat","h","components","Map","getDefaultSlot","this","forEach","set","key","class","suit","state","allComponents","component","push","_objectSpread","attrs","hidden","attributesToRender","map","get","computed","widgetParams","widgets"],"mappings":"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","sourcesContent":["import { createWidgetMixin } from '../mixins/widget';\nimport { connectDynamicWidgets } from 'instantsearch.js/es/connectors';\nimport { createSuitMixin } from '../mixins/suit';\nimport { _objectSpread } from '../util/polyfills';\nimport { isVue3, renderCompat, getDefaultSlot } from '../util/vue-compat';\n\nfunction getWidgetAttribute(vnode) {\n  const props = isVue3\n    ? vnode.props\n    : vnode.componentOptions && vnode.componentOptions.propsData;\n  if (props) {\n    if (props.attribute) {\n      return props.attribute;\n    }\n    if (Array.isArray(props.attributes)) {\n      return props.attributes[0];\n    }\n  }\n\n  let children;\n  if (isVue3) {\n    children =\n      vnode.children && vnode.children.default && vnode.children.default();\n  } else {\n    children =\n      vnode.componentOptions && vnode.componentOptions.children\n        ? vnode.componentOptions.children\n        : vnode.children;\n  }\n\n  if (Array.isArray(children)) {\n    // return first child with a truthy attribute\n    return children.reduce(\n      (acc, curr) => acc || getWidgetAttribute(curr),\n      undefined\n    );\n  }\n\n  return undefined;\n}\n\nexport default {\n  name: 'AisExperimentalDynamicWidgets',\n  mixins: [\n    createWidgetMixin({ connector: connectDynamicWidgets }),\n    createSuitMixin({ name: 'DynamicWidgets' }),\n  ],\n  props: {\n    transformItems: {\n      type: Function,\n      default: undefined,\n    },\n  },\n  render: renderCompat(function(h) {\n    const components = new Map();\n\n    (getDefaultSlot(this) || []).forEach(vnode => {\n      const attribute = getWidgetAttribute(vnode);\n      if (attribute) {\n        components.set(\n          attribute,\n          h('div', { key: attribute, class: [this.suit('widget')] }, [vnode])\n        );\n      }\n    });\n\n    // by default, render everything, but hidden so that the routing doesn't disappear\n    if (!this.state) {\n      const allComponents = [];\n      components.forEach(component => allComponents.push(component));\n\n      return h(\n        'div',\n        _objectSpread(\n          {\n            class: [this.suit()],\n          },\n          { attrs: { hidden: true } }\n        ),\n        allComponents\n      );\n    }\n\n    return h(\n      'div',\n      { class: [this.suit()] },\n      this.state.attributesToRender.map(attribute => components.get(attribute))\n    );\n  }),\n  computed: {\n    widgetParams() {\n      return {\n        transformItems: this.transformItems,\n        // we do not pass \"widgets\" to the connector, since Vue is in charge of rendering\n        widgets: [],\n      };\n    },\n  },\n};\n"]},"metadata":{},"sourceType":"module"}