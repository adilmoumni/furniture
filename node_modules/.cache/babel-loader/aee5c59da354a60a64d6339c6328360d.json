{"ast":null,"code":"import \"vue\";\nimport \"../util/vue-compat/index-2.js\";\nimport t from \"mitt\";\n\nvar e = \"instantSearchPanelEmitter\",\n    n = \"PANEL_CHANGE_EVENT\",\n    i = function () {\n  var e;\n  return (e = {\n    props: {\n      emitter: {\n        type: Object,\n        required: !1,\n        default: function () {\n          return t();\n        }\n      }\n    },\n    provide: function () {\n      var t;\n      return (t = {}).instantSearchPanelEmitter = this.emitter, t;\n    },\n    data: function () {\n      return {\n        canRefine: !0\n      };\n    },\n    created: function () {\n      var t = this;\n      this.emitter.on(\"PANEL_CHANGE_EVENT\", function (e) {\n        t.updateCanRefine(e);\n      });\n    }\n  }).beforeDestroy = function () {\n    this.emitter.all.clear();\n  }, e.methods = {\n    updateCanRefine: function (t) {\n      this.canRefine = t;\n    }\n  }, e;\n},\n    r = function (t) {\n  var e = t.mapStateToCanRefine;\n  return {\n    inject: {\n      emitter: {\n        from: \"instantSearchPanelEmitter\",\n        default: function () {\n          return {\n            emit: function () {}\n          };\n        }\n      }\n    },\n    data: function () {\n      return {\n        state: null,\n        hasAlreadyEmitted: !1\n      };\n    },\n    watch: {\n      state: {\n        immediate: !0,\n        handler: function (t, n) {\n          if (t) {\n            var i = e(n || {}),\n                r = e(t);\n            this.hasAlreadyEmitted && i === r || (this.emitter.emit(\"PANEL_CHANGE_EVENT\", r), this.hasAlreadyEmitted = !0);\n          }\n        }\n      }\n    }\n  };\n};\n\nexport { n as PANEL_CHANGE_EVENT, e as PANEL_EMITTER_NAMESPACE, r as createPanelConsumerMixin, i as createPanelProviderMixin };","map":{"version":3,"sources":["../../../../src/mixins/panel.js"],"names":["PANEL_EMITTER_NAMESPACE","PANEL_CHANGE_EVENT","createPanelProviderMixin","props","emitter","type","Object","required","default","mitt","provide","this","data","canRefine","created","on","value","updateCanRefine","all","clear","methods","createPanelConsumerMixin","ref","inject","from","emit","state","hasAlreadyEmitted","watch","immediate","handler","nextState","previousState","const","previousCanRefine","mapStateToCanRefine","nextCanRefine"],"mappings":";;;;AAGY,IAACA,CAAAA,GAA0B,2BAA3B;AAAA,IACCC,CAAAA,GAAqB,oBADtB;AAAA,IAGCC,CAAAA,GAAAA,YAAAA;AAAAA,MAAAA,CAAAA;AAAAA,SAAAA,CAAAA,CAAAA,GAAkC;AAC7CC,IAAAA,KAAAA,EAAO;AACLC,MAAAA,OAAAA,EAAS;AACPC,QAAAA,IAAAA,EAAMC,MADC;AAEPC,QAAAA,QAAAA,EAAAA,CAAU,CAFH;AAGPC,QAAAA,OAAAA,EAAAA,YAAAA;AACE,iBAAOC,CAAAA,EAAP;AAAOA;AAJF;AADJ,KADsC;AAU7CC,IAAAA,OAAAA,EAAAA,YAAAA;AAAAA,UAAAA,CAAAA;AACE,aAAA,CAAA,CAAA,GAAO,EAAP,EAC0B,yBAD1B,GAC6BC,KAAKP,OADlC,EACkCA,CADlC;AACkCA,KAZS;AAe7CQ,IAAAA,IAAAA,EAAAA,YAAAA;AACE,aAAO;AACLC,QAAAA,SAAAA,EAAAA,CAAW;AADN,OAAP;AACa,KAjB8B;AAoB7CC,IAAAA,OAAAA,EAAAA,YAAAA;AAAAA,UAAAA,CAAAA,GAAAA,IAAAA;AACEH,WAAKP,OAALO,CAAaI,EAAbJ,CAvB8B,oBAuB9BA,EAvB8B,UAuBMK,CAvBN,EAuBMA;AAClCL,QAAAA,CAAAA,CAAKM,eAALN,CAAqBK,CAArBL;AAAqBK,OADvBL;AACuBK;AAtBoB,GAAlCd,EAyBgC,aAzBhCA,GAyBgC,YAAA;AACzCS,SAAKP,OAALO,CAAaO,GAAbP,CAAiBQ,KAAjBR;AAAiBQ,GA1BRjB,EA0BQiB,CAAAA,CAEnBC,OAFmBD,GAEV;AACPF,IAAAA,eAAAA,EAAAA,UAAgBD,CAAhBC,EAAgBD;AACdL,WAAKE,SAALF,GAAiBK,CAAjBL;AAAiBK;AAFZ,GA5BEd,EA8BUc,CA9BVd;AA8BUc,CAjCX;AAAA,IAsCCK,CAAAA,GAAAA,UAA4BC,CAA5BD,EAA4BC;AAAAA,MAAAA,CAAAA,GAAAA,CAAAA,CAAAA,mBAAAA;AAAAA,SAAAA;AACvCC,IAAAA,MAAAA,EAAQ;AACNnB,MAAAA,OAAAA,EAAS;AACPoB,QAAAA,IAAAA,EAzCiC,2BAwC1B;AAEPhB,QAAAA,OAAAA,EAAAA,YAAAA;AACE,iBAAO;AACLiB,YAAAA,IAAAA,EAAAA,YAAAA,CAAAA;AADK,WAAP;AACEA;AAJG;AADH,KAD+BH;AAWvCV,IAAAA,IAAAA,EAAAA,YAAAA;AACE,aAAO;AACLc,QAAAA,KAAAA,EAAO,IADF;AAELC,QAAAA,iBAAAA,EAAAA,CAAmB;AAFd,OAAP;AAEqB,KAdgBL;AAiBvCM,IAAAA,KAAAA,EAAO;AACLF,MAAAA,KAAAA,EAAO;AACLG,QAAAA,SAAAA,EAAAA,CAAW,CADN;AAELC,QAAAA,OAAAA,EAAAA,UAAQC,CAARD,EAAmBE,CAAnBF,EAAmBE;AACjB,cAAKD,CAAL,EAAA;AAIAE,gBAAMC,CAAAA,GAAoBC,CAAAA,CAAoBH,CAAAA,IAAiB,EAArCG,CAA1BF;AAAAA,gBACMG,CAAAA,GAAgBD,CAAAA,CAAoBJ,CAApBI,CADtBF;AAGKtB,iBAAKgB,iBAALhB,IAA0BuB,CAAAA,KAAsBE,CAAhDzB,KACHA,KAAKP,OAALO,CAAac,IAAbd,CAlEwB,oBAkExBA,EAAsCyB,CAAtCzB,GACAA,KAAKgB,iBAALhB,GAAKgB,CAAoB,CAFtBhB;AAEsB;AAAA;AAZxB;AADF;AAjBgCW,GAAAA;AA8BN,CApEvB;;AAoEuB,SAAA,CAAA,IAAA,kBAAA,EAAA,CAAA,IAAA,uBAAA,EAAA,CAAA,IAAA,wBAAA,EAAA,CAAA,IAAA,wBAAA","sourcesContent":["import { isVue3 } from '../util/vue-compat';\nimport mitt from 'mitt';\n\nexport const PANEL_EMITTER_NAMESPACE = 'instantSearchPanelEmitter';\nexport const PANEL_CHANGE_EVENT = 'PANEL_CHANGE_EVENT';\n\nexport const createPanelProviderMixin = () => ({\n  props: {\n    emitter: {\n      type: Object,\n      required: false,\n      default() {\n        return mitt();\n      },\n    },\n  },\n  provide() {\n    return {\n      [PANEL_EMITTER_NAMESPACE]: this.emitter,\n    };\n  },\n  data() {\n    return {\n      canRefine: true,\n    };\n  },\n  created() {\n    this.emitter.on(PANEL_CHANGE_EVENT, value => {\n      this.updateCanRefine(value);\n    });\n  },\n  [isVue3 ? 'beforeUnmount' : 'beforeDestroy']() {\n    this.emitter.all.clear();\n  },\n  methods: {\n    updateCanRefine(value) {\n      this.canRefine = value;\n    },\n  },\n});\n\nexport const createPanelConsumerMixin = ({ mapStateToCanRefine }) => ({\n  inject: {\n    emitter: {\n      from: PANEL_EMITTER_NAMESPACE,\n      default() {\n        return {\n          emit: () => {},\n        };\n      },\n    },\n  },\n  data() {\n    return {\n      state: null,\n      hasAlreadyEmitted: false,\n    };\n  },\n  watch: {\n    state: {\n      immediate: true,\n      handler(nextState, previousState) {\n        if (!nextState) {\n          return;\n        }\n\n        const previousCanRefine = mapStateToCanRefine(previousState || {});\n        const nextCanRefine = mapStateToCanRefine(nextState);\n\n        if (!this.hasAlreadyEmitted || previousCanRefine !== nextCanRefine) {\n          this.emitter.emit(PANEL_CHANGE_EVENT, nextCanRefine);\n          this.hasAlreadyEmitted = true;\n        }\n      },\n    },\n  },\n});\n"]},"metadata":{},"sourceType":"module"}