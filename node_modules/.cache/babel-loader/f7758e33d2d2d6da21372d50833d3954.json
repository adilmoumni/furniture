{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nimport { serializePayload } from '../../lib/utils/serializer';\n\nfunction chunk(arr) {\n  var chunkSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 20;\n  var chunks = [];\n\n  for (var i = 0; i < Math.ceil(arr.length / chunkSize); i++) {\n    chunks.push(arr.slice(i * chunkSize, (i + 1) * chunkSize));\n  }\n\n  return chunks;\n}\n\nvar buildPayloads = function buildPayloads(_ref) {\n  var index = _ref.index,\n      widgetType = _ref.widgetType,\n      methodName = _ref.methodName,\n      args = _ref.args; // when there's only one argument, that means it's custom\n\n  if (args.length === 1 && _typeof(args[0]) === 'object') {\n    return [args[0]];\n  }\n\n  var eventType = args[0];\n  var hits = args[1];\n  var eventName = args[2];\n\n  if (!hits) {\n    if (process.env.NODE_ENV === 'development') {\n      throw new Error(\"You need to pass hit or hits as the second argument like:\\n  \".concat(methodName, \"(eventType, hit);\\n  \"));\n    } else {\n      return [];\n    }\n  }\n\n  if ((eventType === 'click' || eventType === 'conversion') && !eventName) {\n    if (process.env.NODE_ENV === 'development') {\n      throw new Error(\"You need to pass eventName as the third argument for 'click' or 'conversion' events like:\\n  \".concat(methodName, \"('click', hit, 'Product Purchased');\\n\\n  To learn more about event naming: https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/in-depth/clicks-conversions-best-practices/\\n  \"));\n    } else {\n      return [];\n    }\n  }\n\n  var hitsArray = Array.isArray(hits) ? removeEscapedFromHits(hits) : [hits];\n\n  if (hitsArray.length === 0) {\n    return [];\n  }\n\n  var queryID = hitsArray[0].__queryID;\n  var hitsChunks = chunk(hitsArray);\n  var objectIDsByChunk = hitsChunks.map(function (batch) {\n    return batch.map(function (hit) {\n      return hit.objectID;\n    });\n  });\n  var positionsByChunk = hitsChunks.map(function (batch) {\n    return batch.map(function (hit) {\n      return hit.__position;\n    });\n  });\n\n  if (eventType === 'view') {\n    return hitsChunks.map(function (batch, i) {\n      return {\n        insightsMethod: 'viewedObjectIDs',\n        widgetType: widgetType,\n        eventType: eventType,\n        payload: {\n          eventName: eventName || 'Hits Viewed',\n          index: index,\n          objectIDs: objectIDsByChunk[i]\n        },\n        hits: batch\n      };\n    });\n  } else if (eventType === 'click') {\n    return hitsChunks.map(function (batch, i) {\n      return {\n        insightsMethod: 'clickedObjectIDsAfterSearch',\n        widgetType: widgetType,\n        eventType: eventType,\n        payload: {\n          eventName: eventName,\n          index: index,\n          queryID: queryID,\n          objectIDs: objectIDsByChunk[i],\n          positions: positionsByChunk[i]\n        },\n        hits: batch\n      };\n    });\n  } else if (eventType === 'conversion') {\n    return hitsChunks.map(function (batch, i) {\n      return {\n        insightsMethod: 'convertedObjectIDsAfterSearch',\n        widgetType: widgetType,\n        eventType: eventType,\n        payload: {\n          eventName: eventName,\n          index: index,\n          queryID: queryID,\n          objectIDs: objectIDsByChunk[i]\n        },\n        hits: batch\n      };\n    });\n  } else if (process.env.NODE_ENV === 'development') {\n    throw new Error(\"eventType(\\\"\".concat(eventType, \"\\\") is not supported.\\n    If you want to send a custom payload, you can pass one object: \").concat(methodName, \"(customPayload);\\n    \"));\n  } else {\n    return [];\n  }\n};\n\nfunction removeEscapedFromHits(hits) {\n  // remove `hits.__escaped` without mutating\n  return hits.slice();\n}\n\nexport function createSendEventForHits(_ref2) {\n  var instantSearchInstance = _ref2.instantSearchInstance,\n      index = _ref2.index,\n      widgetType = _ref2.widgetType;\n\n  var sendEventForHits = function sendEventForHits() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var payloads = buildPayloads({\n      widgetType: widgetType,\n      index: index,\n      methodName: 'sendEvent',\n      args: args\n    });\n    payloads.forEach(function (payload) {\n      return instantSearchInstance.sendEventToInsights(payload);\n    });\n  };\n\n  return sendEventForHits;\n}\nexport function createBindEventForHits(_ref3) {\n  var index = _ref3.index,\n      widgetType = _ref3.widgetType;\n\n  var bindEventForHits = function bindEventForHits() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var payloads = buildPayloads({\n      widgetType: widgetType,\n      index: index,\n      methodName: 'bindEvent',\n      args: args\n    });\n    return payloads.length ? \"data-insights-event=\".concat(serializePayload(payloads)) : '';\n  };\n\n  return bindEventForHits;\n}","map":{"version":3,"sources":["/Users/adil/Documents/GitHub/furniture-front/node_modules/instantsearch.js/es/lib/utils/createSendEventForHits.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","serializePayload","chunk","arr","chunkSize","arguments","length","undefined","chunks","i","Math","ceil","push","slice","buildPayloads","_ref","index","widgetType","methodName","args","eventType","hits","eventName","process","env","NODE_ENV","Error","concat","hitsArray","Array","isArray","removeEscapedFromHits","queryID","__queryID","hitsChunks","objectIDsByChunk","map","batch","hit","objectID","positionsByChunk","__position","insightsMethod","payload","objectIDs","positions","createSendEventForHits","_ref2","instantSearchInstance","sendEventForHits","_len","_key","payloads","forEach","sendEventToInsights","createBindEventForHits","_ref3","bindEventForHits","_len2","_key2"],"mappings":"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","sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport { serializePayload } from '../../lib/utils/serializer';\n\nfunction chunk(arr) {\n  var chunkSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 20;\n  var chunks = [];\n\n  for (var i = 0; i < Math.ceil(arr.length / chunkSize); i++) {\n    chunks.push(arr.slice(i * chunkSize, (i + 1) * chunkSize));\n  }\n\n  return chunks;\n}\n\nvar buildPayloads = function buildPayloads(_ref) {\n  var index = _ref.index,\n      widgetType = _ref.widgetType,\n      methodName = _ref.methodName,\n      args = _ref.args;\n\n  // when there's only one argument, that means it's custom\n  if (args.length === 1 && _typeof(args[0]) === 'object') {\n    return [args[0]];\n  }\n\n  var eventType = args[0];\n  var hits = args[1];\n  var eventName = args[2];\n\n  if (!hits) {\n    if (process.env.NODE_ENV === 'development') {\n      throw new Error(\"You need to pass hit or hits as the second argument like:\\n  \".concat(methodName, \"(eventType, hit);\\n  \"));\n    } else {\n      return [];\n    }\n  }\n\n  if ((eventType === 'click' || eventType === 'conversion') && !eventName) {\n    if (process.env.NODE_ENV === 'development') {\n      throw new Error(\"You need to pass eventName as the third argument for 'click' or 'conversion' events like:\\n  \".concat(methodName, \"('click', hit, 'Product Purchased');\\n\\n  To learn more about event naming: https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/in-depth/clicks-conversions-best-practices/\\n  \"));\n    } else {\n      return [];\n    }\n  }\n\n  var hitsArray = Array.isArray(hits) ? removeEscapedFromHits(hits) : [hits];\n\n  if (hitsArray.length === 0) {\n    return [];\n  }\n\n  var queryID = hitsArray[0].__queryID;\n  var hitsChunks = chunk(hitsArray);\n  var objectIDsByChunk = hitsChunks.map(function (batch) {\n    return batch.map(function (hit) {\n      return hit.objectID;\n    });\n  });\n  var positionsByChunk = hitsChunks.map(function (batch) {\n    return batch.map(function (hit) {\n      return hit.__position;\n    });\n  });\n\n  if (eventType === 'view') {\n    return hitsChunks.map(function (batch, i) {\n      return {\n        insightsMethod: 'viewedObjectIDs',\n        widgetType: widgetType,\n        eventType: eventType,\n        payload: {\n          eventName: eventName || 'Hits Viewed',\n          index: index,\n          objectIDs: objectIDsByChunk[i]\n        },\n        hits: batch\n      };\n    });\n  } else if (eventType === 'click') {\n    return hitsChunks.map(function (batch, i) {\n      return {\n        insightsMethod: 'clickedObjectIDsAfterSearch',\n        widgetType: widgetType,\n        eventType: eventType,\n        payload: {\n          eventName: eventName,\n          index: index,\n          queryID: queryID,\n          objectIDs: objectIDsByChunk[i],\n          positions: positionsByChunk[i]\n        },\n        hits: batch\n      };\n    });\n  } else if (eventType === 'conversion') {\n    return hitsChunks.map(function (batch, i) {\n      return {\n        insightsMethod: 'convertedObjectIDsAfterSearch',\n        widgetType: widgetType,\n        eventType: eventType,\n        payload: {\n          eventName: eventName,\n          index: index,\n          queryID: queryID,\n          objectIDs: objectIDsByChunk[i]\n        },\n        hits: batch\n      };\n    });\n  } else if (process.env.NODE_ENV === 'development') {\n    throw new Error(\"eventType(\\\"\".concat(eventType, \"\\\") is not supported.\\n    If you want to send a custom payload, you can pass one object: \").concat(methodName, \"(customPayload);\\n    \"));\n  } else {\n    return [];\n  }\n};\n\nfunction removeEscapedFromHits(hits) {\n  // remove `hits.__escaped` without mutating\n  return hits.slice();\n}\n\nexport function createSendEventForHits(_ref2) {\n  var instantSearchInstance = _ref2.instantSearchInstance,\n      index = _ref2.index,\n      widgetType = _ref2.widgetType;\n\n  var sendEventForHits = function sendEventForHits() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var payloads = buildPayloads({\n      widgetType: widgetType,\n      index: index,\n      methodName: 'sendEvent',\n      args: args\n    });\n    payloads.forEach(function (payload) {\n      return instantSearchInstance.sendEventToInsights(payload);\n    });\n  };\n\n  return sendEventForHits;\n}\nexport function createBindEventForHits(_ref3) {\n  var index = _ref3.index,\n      widgetType = _ref3.widgetType;\n\n  var bindEventForHits = function bindEventForHits() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var payloads = buildPayloads({\n      widgetType: widgetType,\n      index: index,\n      methodName: 'bindEvent',\n      args: args\n    });\n    return payloads.length ? \"data-insights-event=\".concat(serializePayload(payloads)) : '';\n  };\n\n  return bindEventForHits;\n}"]},"metadata":{},"sourceType":"module"}