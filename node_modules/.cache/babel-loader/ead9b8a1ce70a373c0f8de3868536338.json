{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { checkRendering, escapeRefinement, unescapeRefinement, createDocumentationMessageGenerator, find, noop, toArray } from '../../lib/utils';\nvar withUsage = createDocumentationMessageGenerator({\n  name: 'toggle-refinement',\n  connector: true\n});\nvar $$type = 'ais.toggleRefinement';\n\nvar createSendEvent = function createSendEvent(_ref) {\n  var instantSearchInstance = _ref.instantSearchInstance,\n      helper = _ref.helper,\n      attribute = _ref.attribute,\n      on = _ref.on;\n\n  var sendEventForToggle = function sendEventForToggle() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (args.length === 1) {\n      instantSearchInstance.sendEventToInsights(args[0]);\n      return;\n    }\n\n    var eventType = args[0],\n        isRefined = args[1],\n        _args$ = args[2],\n        eventName = _args$ === void 0 ? 'Filter Applied' : _args$;\n\n    if (eventType !== 'click' || on === undefined) {\n      return;\n    } // only send an event when the refinement gets applied,\n    // not when it gets removed\n\n\n    if (!isRefined) {\n      instantSearchInstance.sendEventToInsights({\n        insightsMethod: 'clickedFilters',\n        widgetType: $$type,\n        eventType: eventType,\n        payload: {\n          eventName: eventName,\n          index: helper.getIndex(),\n          filters: on.map(function (value) {\n            return \"\".concat(attribute, \":\").concat(value);\n          })\n        },\n        attribute: attribute\n      });\n    }\n  };\n\n  return sendEventForToggle;\n};\n/**\n * **Toggle** connector provides the logic to build a custom widget that will provide\n * an on/off filtering feature based on an attribute value or values.\n *\n * Two modes are implemented in the custom widget:\n *  - with or without the value filtered\n *  - switch between two values.\n */\n\n\nvar connectToggleRefinement = function connectToggleRefinement(renderFn) {\n  var unmountFn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n  checkRendering(renderFn, withUsage());\n  return function (widgetParams) {\n    var _ref2 = widgetParams || {},\n        attribute = _ref2.attribute,\n        _ref2$on = _ref2.on,\n        userOn = _ref2$on === void 0 ? true : _ref2$on,\n        userOff = _ref2.off;\n\n    if (!attribute) {\n      throw new Error(withUsage('The `attribute` option is required.'));\n    }\n\n    var hasAnOffValue = userOff !== undefined;\n    var on = toArray(userOn).map(escapeRefinement);\n    var off = hasAnOffValue ? toArray(userOff).map(escapeRefinement) : undefined;\n    var sendEvent;\n\n    var toggleRefinementFactory = function toggleRefinementFactory(helper) {\n      return function () {\n        var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n          isRefined: false\n        },\n            isRefined = _ref3.isRefined;\n\n        if (!isRefined) {\n          sendEvent('click', isRefined);\n\n          if (hasAnOffValue) {\n            off.forEach(function (v) {\n              return helper.removeDisjunctiveFacetRefinement(attribute, v);\n            });\n          }\n\n          on.forEach(function (v) {\n            return helper.addDisjunctiveFacetRefinement(attribute, v);\n          });\n        } else {\n          on.forEach(function (v) {\n            return helper.removeDisjunctiveFacetRefinement(attribute, v);\n          });\n\n          if (hasAnOffValue) {\n            off.forEach(function (v) {\n              return helper.addDisjunctiveFacetRefinement(attribute, v);\n            });\n          }\n        }\n\n        helper.search();\n      };\n    };\n\n    var connectorState = {\n      createURLFactory: function createURLFactory(isRefined, _ref4) {\n        var state = _ref4.state,\n            createURL = _ref4.createURL;\n        return function () {\n          state = state.resetPage();\n          var valuesToRemove = isRefined ? on : off;\n\n          if (valuesToRemove) {\n            valuesToRemove.forEach(function (v) {\n              state = state.removeDisjunctiveFacetRefinement(attribute, v);\n            });\n          }\n\n          var valuesToAdd = isRefined ? off : on;\n\n          if (valuesToAdd) {\n            valuesToAdd.forEach(function (v) {\n              state = state.addDisjunctiveFacetRefinement(attribute, v);\n            });\n          }\n\n          return createURL(state);\n        };\n      }\n    };\n    return {\n      $$type: $$type,\n      init: function init(initOptions) {\n        var instantSearchInstance = initOptions.instantSearchInstance;\n        renderFn(_objectSpread(_objectSpread({}, this.getWidgetRenderState(initOptions)), {}, {\n          instantSearchInstance: instantSearchInstance\n        }), true);\n      },\n      render: function render(renderOptions) {\n        var instantSearchInstance = renderOptions.instantSearchInstance;\n        renderFn(_objectSpread(_objectSpread({}, this.getWidgetRenderState(renderOptions)), {}, {\n          instantSearchInstance: instantSearchInstance\n        }), false);\n      },\n      dispose: function dispose(_ref5) {\n        var state = _ref5.state;\n        unmountFn();\n        return state.removeDisjunctiveFacet(attribute);\n      },\n      getRenderState: function getRenderState(renderState, renderOptions) {\n        return _objectSpread(_objectSpread({}, renderState), {}, {\n          toggleRefinement: _objectSpread(_objectSpread({}, renderState.toggleRefinement), {}, _defineProperty({}, attribute, this.getWidgetRenderState(renderOptions)))\n        });\n      },\n      getWidgetRenderState: function getWidgetRenderState(_ref6) {\n        var state = _ref6.state,\n            helper = _ref6.helper,\n            results = _ref6.results,\n            createURL = _ref6.createURL,\n            instantSearchInstance = _ref6.instantSearchInstance;\n        var isRefined = results ? on.every(function (v) {\n          return helper.state.isDisjunctiveFacetRefined(attribute, v);\n        }) : on.every(function (v) {\n          return state.isDisjunctiveFacetRefined(attribute, v);\n        });\n        var onFacetValue = {\n          isRefined: isRefined,\n          count: 0\n        };\n        var offFacetValue = {\n          isRefined: hasAnOffValue && !isRefined,\n          count: 0\n        };\n\n        if (results) {\n          var offValue = toArray(off || false);\n          var allFacetValues = results.getFacetValues(attribute, {}) || [];\n          var onData = on.map(function (v) {\n            return find(allFacetValues, function (_ref7) {\n              var name = _ref7.name;\n              return name === unescapeRefinement(v);\n            });\n          }).filter(function (v) {\n            return v !== undefined;\n          });\n          var offData = hasAnOffValue ? offValue.map(function (v) {\n            return find(allFacetValues, function (_ref8) {\n              var name = _ref8.name;\n              return name === unescapeRefinement(v);\n            });\n          }).filter(function (v) {\n            return v !== undefined;\n          }) : [];\n          onFacetValue = {\n            isRefined: onData.length ? onData.every(function (v) {\n              return v.isRefined;\n            }) : false,\n            count: onData.reduce(function (acc, v) {\n              return acc + v.count;\n            }, 0) || null\n          };\n          offFacetValue = {\n            isRefined: offData.length ? offData.every(function (v) {\n              return v.isRefined;\n            }) : false,\n            count: offData.reduce(function (acc, v) {\n              return acc + v.count;\n            }, 0) || allFacetValues.reduce(function (total, _ref9) {\n              var count = _ref9.count;\n              return total + count;\n            }, 0)\n          };\n        }\n\n        if (!sendEvent) {\n          sendEvent = createSendEvent({\n            instantSearchInstance: instantSearchInstance,\n            attribute: attribute,\n            on: on,\n            helper: helper\n          });\n        }\n\n        var nextRefinement = isRefined ? offFacetValue : onFacetValue;\n        return {\n          value: {\n            name: attribute,\n            isRefined: isRefined,\n            count: results ? nextRefinement.count : null,\n            onFacetValue: onFacetValue,\n            offFacetValue: offFacetValue\n          },\n          createURL: connectorState.createURLFactory(isRefined, {\n            state: state,\n            createURL: createURL\n          }),\n          sendEvent: sendEvent,\n          canRefine: Boolean(results ? nextRefinement.count : null),\n          refine: toggleRefinementFactory(helper),\n          widgetParams: widgetParams\n        };\n      },\n      getWidgetUiState: function getWidgetUiState(uiState, _ref10) {\n        var searchParameters = _ref10.searchParameters;\n        var isRefined = on && on.every(function (v) {\n          return searchParameters.isDisjunctiveFacetRefined(attribute, v);\n        });\n\n        if (!isRefined) {\n          return uiState;\n        }\n\n        return _objectSpread(_objectSpread({}, uiState), {}, {\n          toggle: _objectSpread(_objectSpread({}, uiState.toggle), {}, _defineProperty({}, attribute, isRefined))\n        });\n      },\n      getWidgetSearchParameters: function getWidgetSearchParameters(searchParameters, _ref11) {\n        var uiState = _ref11.uiState;\n        var withFacetConfiguration = searchParameters.clearRefinements(attribute).addDisjunctiveFacet(attribute);\n        var isRefined = Boolean(uiState.toggle && uiState.toggle[attribute]);\n\n        if (isRefined) {\n          if (on) {\n            on.forEach(function (v) {\n              withFacetConfiguration = withFacetConfiguration.addDisjunctiveFacetRefinement(attribute, v);\n            });\n          }\n\n          return withFacetConfiguration;\n        } // It's not refined with an `off` value\n\n\n        if (hasAnOffValue) {\n          if (off) {\n            off.forEach(function (v) {\n              withFacetConfiguration = withFacetConfiguration.addDisjunctiveFacetRefinement(attribute, v);\n            });\n          }\n\n          return withFacetConfiguration;\n        } // It's not refined without an `off` value\n\n\n        return withFacetConfiguration.setQueryParameters({\n          disjunctiveFacetsRefinements: _objectSpread(_objectSpread({}, searchParameters.disjunctiveFacetsRefinements), {}, _defineProperty({}, attribute, []))\n        });\n      }\n    };\n  };\n};\n\nexport default connectToggleRefinement;","map":{"version":3,"sources":["/Users/adil/Documents/GitHub/furniture-front/node_modules/instantsearch.js/es/connectors/toggle-refinement/connectToggleRefinement.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","checkRendering","escapeRefinement","unescapeRefinement","createDocumentationMessageGenerator","find","noop","toArray","withUsage","name","connector","$$type","createSendEvent","_ref","instantSearchInstance","helper","attribute","on","sendEventForToggle","_len","args","Array","_key","sendEventToInsights","eventType","isRefined","_args$","eventName","undefined","insightsMethod","widgetType","payload","index","getIndex","filters","map","concat","connectToggleRefinement","renderFn","unmountFn","widgetParams","_ref2","_ref2$on","userOn","userOff","off","Error","hasAnOffValue","sendEvent","toggleRefinementFactory","_ref3","v","removeDisjunctiveFacetRefinement","addDisjunctiveFacetRefinement","search","connectorState","createURLFactory","_ref4","state","createURL","resetPage","valuesToRemove","valuesToAdd","init","initOptions","getWidgetRenderState","render","renderOptions","dispose","_ref5","removeDisjunctiveFacet","getRenderState","renderState","toggleRefinement","_ref6","results","every","isDisjunctiveFacetRefined","onFacetValue","count","offFacetValue","offValue","allFacetValues","getFacetValues","onData","_ref7","offData","_ref8","reduce","acc","total","_ref9","nextRefinement","canRefine","Boolean","refine","getWidgetUiState","uiState","_ref10","searchParameters","toggle","getWidgetSearchParameters","_ref11","withFacetConfiguration","clearRefinements","addDisjunctiveFacet","setQueryParameters","disjunctiveFacetsRefinements"],"mappings":"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","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { checkRendering, escapeRefinement, unescapeRefinement, createDocumentationMessageGenerator, find, noop, toArray } from '../../lib/utils';\nvar withUsage = createDocumentationMessageGenerator({\n  name: 'toggle-refinement',\n  connector: true\n});\nvar $$type = 'ais.toggleRefinement';\n\nvar createSendEvent = function createSendEvent(_ref) {\n  var instantSearchInstance = _ref.instantSearchInstance,\n      helper = _ref.helper,\n      attribute = _ref.attribute,\n      on = _ref.on;\n\n  var sendEventForToggle = function sendEventForToggle() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (args.length === 1) {\n      instantSearchInstance.sendEventToInsights(args[0]);\n      return;\n    }\n\n    var eventType = args[0],\n        isRefined = args[1],\n        _args$ = args[2],\n        eventName = _args$ === void 0 ? 'Filter Applied' : _args$;\n\n    if (eventType !== 'click' || on === undefined) {\n      return;\n    } // only send an event when the refinement gets applied,\n    // not when it gets removed\n\n\n    if (!isRefined) {\n      instantSearchInstance.sendEventToInsights({\n        insightsMethod: 'clickedFilters',\n        widgetType: $$type,\n        eventType: eventType,\n        payload: {\n          eventName: eventName,\n          index: helper.getIndex(),\n          filters: on.map(function (value) {\n            return \"\".concat(attribute, \":\").concat(value);\n          })\n        },\n        attribute: attribute\n      });\n    }\n  };\n\n  return sendEventForToggle;\n};\n\n/**\n * **Toggle** connector provides the logic to build a custom widget that will provide\n * an on/off filtering feature based on an attribute value or values.\n *\n * Two modes are implemented in the custom widget:\n *  - with or without the value filtered\n *  - switch between two values.\n */\nvar connectToggleRefinement = function connectToggleRefinement(renderFn) {\n  var unmountFn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n  checkRendering(renderFn, withUsage());\n  return function (widgetParams) {\n    var _ref2 = widgetParams || {},\n        attribute = _ref2.attribute,\n        _ref2$on = _ref2.on,\n        userOn = _ref2$on === void 0 ? true : _ref2$on,\n        userOff = _ref2.off;\n\n    if (!attribute) {\n      throw new Error(withUsage('The `attribute` option is required.'));\n    }\n\n    var hasAnOffValue = userOff !== undefined;\n    var on = toArray(userOn).map(escapeRefinement);\n    var off = hasAnOffValue ? toArray(userOff).map(escapeRefinement) : undefined;\n    var sendEvent;\n\n    var toggleRefinementFactory = function toggleRefinementFactory(helper) {\n      return function () {\n        var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n          isRefined: false\n        },\n            isRefined = _ref3.isRefined;\n\n        if (!isRefined) {\n          sendEvent('click', isRefined);\n\n          if (hasAnOffValue) {\n            off.forEach(function (v) {\n              return helper.removeDisjunctiveFacetRefinement(attribute, v);\n            });\n          }\n\n          on.forEach(function (v) {\n            return helper.addDisjunctiveFacetRefinement(attribute, v);\n          });\n        } else {\n          on.forEach(function (v) {\n            return helper.removeDisjunctiveFacetRefinement(attribute, v);\n          });\n\n          if (hasAnOffValue) {\n            off.forEach(function (v) {\n              return helper.addDisjunctiveFacetRefinement(attribute, v);\n            });\n          }\n        }\n\n        helper.search();\n      };\n    };\n\n    var connectorState = {\n      createURLFactory: function createURLFactory(isRefined, _ref4) {\n        var state = _ref4.state,\n            createURL = _ref4.createURL;\n        return function () {\n          state = state.resetPage();\n          var valuesToRemove = isRefined ? on : off;\n\n          if (valuesToRemove) {\n            valuesToRemove.forEach(function (v) {\n              state = state.removeDisjunctiveFacetRefinement(attribute, v);\n            });\n          }\n\n          var valuesToAdd = isRefined ? off : on;\n\n          if (valuesToAdd) {\n            valuesToAdd.forEach(function (v) {\n              state = state.addDisjunctiveFacetRefinement(attribute, v);\n            });\n          }\n\n          return createURL(state);\n        };\n      }\n    };\n    return {\n      $$type: $$type,\n      init: function init(initOptions) {\n        var instantSearchInstance = initOptions.instantSearchInstance;\n        renderFn(_objectSpread(_objectSpread({}, this.getWidgetRenderState(initOptions)), {}, {\n          instantSearchInstance: instantSearchInstance\n        }), true);\n      },\n      render: function render(renderOptions) {\n        var instantSearchInstance = renderOptions.instantSearchInstance;\n        renderFn(_objectSpread(_objectSpread({}, this.getWidgetRenderState(renderOptions)), {}, {\n          instantSearchInstance: instantSearchInstance\n        }), false);\n      },\n      dispose: function dispose(_ref5) {\n        var state = _ref5.state;\n        unmountFn();\n        return state.removeDisjunctiveFacet(attribute);\n      },\n      getRenderState: function getRenderState(renderState, renderOptions) {\n        return _objectSpread(_objectSpread({}, renderState), {}, {\n          toggleRefinement: _objectSpread(_objectSpread({}, renderState.toggleRefinement), {}, _defineProperty({}, attribute, this.getWidgetRenderState(renderOptions)))\n        });\n      },\n      getWidgetRenderState: function getWidgetRenderState(_ref6) {\n        var state = _ref6.state,\n            helper = _ref6.helper,\n            results = _ref6.results,\n            createURL = _ref6.createURL,\n            instantSearchInstance = _ref6.instantSearchInstance;\n        var isRefined = results ? on.every(function (v) {\n          return helper.state.isDisjunctiveFacetRefined(attribute, v);\n        }) : on.every(function (v) {\n          return state.isDisjunctiveFacetRefined(attribute, v);\n        });\n        var onFacetValue = {\n          isRefined: isRefined,\n          count: 0\n        };\n        var offFacetValue = {\n          isRefined: hasAnOffValue && !isRefined,\n          count: 0\n        };\n\n        if (results) {\n          var offValue = toArray(off || false);\n          var allFacetValues = results.getFacetValues(attribute, {}) || [];\n          var onData = on.map(function (v) {\n            return find(allFacetValues, function (_ref7) {\n              var name = _ref7.name;\n              return name === unescapeRefinement(v);\n            });\n          }).filter(function (v) {\n            return v !== undefined;\n          });\n          var offData = hasAnOffValue ? offValue.map(function (v) {\n            return find(allFacetValues, function (_ref8) {\n              var name = _ref8.name;\n              return name === unescapeRefinement(v);\n            });\n          }).filter(function (v) {\n            return v !== undefined;\n          }) : [];\n          onFacetValue = {\n            isRefined: onData.length ? onData.every(function (v) {\n              return v.isRefined;\n            }) : false,\n            count: onData.reduce(function (acc, v) {\n              return acc + v.count;\n            }, 0) || null\n          };\n          offFacetValue = {\n            isRefined: offData.length ? offData.every(function (v) {\n              return v.isRefined;\n            }) : false,\n            count: offData.reduce(function (acc, v) {\n              return acc + v.count;\n            }, 0) || allFacetValues.reduce(function (total, _ref9) {\n              var count = _ref9.count;\n              return total + count;\n            }, 0)\n          };\n        }\n\n        if (!sendEvent) {\n          sendEvent = createSendEvent({\n            instantSearchInstance: instantSearchInstance,\n            attribute: attribute,\n            on: on,\n            helper: helper\n          });\n        }\n\n        var nextRefinement = isRefined ? offFacetValue : onFacetValue;\n        return {\n          value: {\n            name: attribute,\n            isRefined: isRefined,\n            count: results ? nextRefinement.count : null,\n            onFacetValue: onFacetValue,\n            offFacetValue: offFacetValue\n          },\n          createURL: connectorState.createURLFactory(isRefined, {\n            state: state,\n            createURL: createURL\n          }),\n          sendEvent: sendEvent,\n          canRefine: Boolean(results ? nextRefinement.count : null),\n          refine: toggleRefinementFactory(helper),\n          widgetParams: widgetParams\n        };\n      },\n      getWidgetUiState: function getWidgetUiState(uiState, _ref10) {\n        var searchParameters = _ref10.searchParameters;\n        var isRefined = on && on.every(function (v) {\n          return searchParameters.isDisjunctiveFacetRefined(attribute, v);\n        });\n\n        if (!isRefined) {\n          return uiState;\n        }\n\n        return _objectSpread(_objectSpread({}, uiState), {}, {\n          toggle: _objectSpread(_objectSpread({}, uiState.toggle), {}, _defineProperty({}, attribute, isRefined))\n        });\n      },\n      getWidgetSearchParameters: function getWidgetSearchParameters(searchParameters, _ref11) {\n        var uiState = _ref11.uiState;\n        var withFacetConfiguration = searchParameters.clearRefinements(attribute).addDisjunctiveFacet(attribute);\n        var isRefined = Boolean(uiState.toggle && uiState.toggle[attribute]);\n\n        if (isRefined) {\n          if (on) {\n            on.forEach(function (v) {\n              withFacetConfiguration = withFacetConfiguration.addDisjunctiveFacetRefinement(attribute, v);\n            });\n          }\n\n          return withFacetConfiguration;\n        } // It's not refined with an `off` value\n\n\n        if (hasAnOffValue) {\n          if (off) {\n            off.forEach(function (v) {\n              withFacetConfiguration = withFacetConfiguration.addDisjunctiveFacetRefinement(attribute, v);\n            });\n          }\n\n          return withFacetConfiguration;\n        } // It's not refined without an `off` value\n\n\n        return withFacetConfiguration.setQueryParameters({\n          disjunctiveFacetsRefinements: _objectSpread(_objectSpread({}, searchParameters.disjunctiveFacetsRefinements), {}, _defineProperty({}, attribute, []))\n        });\n      }\n    };\n  };\n};\n\nexport default connectToggleRefinement;"]},"metadata":{},"sourceType":"module"}