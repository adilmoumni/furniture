{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { checkRendering, createDocumentationMessageGenerator, createConcurrentSafePromise, addQueryID, debounce, addAbsolutePosition, noop, escapeHits } from '../../lib/utils';\n\nfunction hasFindAnswersMethod(answersIndex) {\n  return typeof answersIndex.findAnswers === 'function';\n}\n\nvar withUsage = createDocumentationMessageGenerator({\n  name: 'answers',\n  connector: true\n});\n\nvar connectAnswers = function connectAnswers(renderFn) {\n  var unmountFn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n  checkRendering(renderFn, withUsage());\n  return function (widgetParams) {\n    var _ref = widgetParams || {},\n        queryLanguages = _ref.queryLanguages,\n        attributesForPrediction = _ref.attributesForPrediction,\n        _ref$nbHits = _ref.nbHits,\n        nbHits = _ref$nbHits === void 0 ? 1 : _ref$nbHits,\n        _ref$renderDebounceTi = _ref.renderDebounceTime,\n        renderDebounceTime = _ref$renderDebounceTi === void 0 ? 100 : _ref$renderDebounceTi,\n        _ref$searchDebounceTi = _ref.searchDebounceTime,\n        searchDebounceTime = _ref$searchDebounceTi === void 0 ? 100 : _ref$searchDebounceTi,\n        _ref$escapeHTML = _ref.escapeHTML,\n        escapeHTML = _ref$escapeHTML === void 0 ? true : _ref$escapeHTML,\n        _ref$extraParameters = _ref.extraParameters,\n        extraParameters = _ref$extraParameters === void 0 ? {} : _ref$extraParameters; // @ts-expect-error checking for the wrong value\n\n\n    if (!queryLanguages || queryLanguages.length === 0) {\n      throw new Error(withUsage('The `queryLanguages` expects an array of strings.'));\n    }\n\n    var runConcurrentSafePromise = createConcurrentSafePromise();\n    var lastHits = [];\n    var isLoading = false;\n    var debouncedRender = debounce(renderFn, renderDebounceTime); // this does not directly use DebouncedFunction<findAnswers>, since then the generic will disappear\n\n    var debouncedRefine;\n    return {\n      $$type: 'ais.answers',\n      init: function init(initOptions) {\n        var state = initOptions.state,\n            instantSearchInstance = initOptions.instantSearchInstance;\n        var answersIndex = instantSearchInstance.client.initIndex(state.index);\n\n        if (!hasFindAnswersMethod(answersIndex)) {\n          throw new Error(withUsage('`algoliasearch` >= 4.8.0 required.'));\n        }\n\n        debouncedRefine = debounce(answersIndex.findAnswers, searchDebounceTime);\n        renderFn(_objectSpread(_objectSpread({}, this.getWidgetRenderState(initOptions)), {}, {\n          instantSearchInstance: initOptions.instantSearchInstance\n        }), true);\n      },\n      render: function render(renderOptions) {\n        var _this = this;\n\n        var query = renderOptions.state.query;\n\n        if (!query) {\n          // renders nothing with empty query\n          lastHits = [];\n          isLoading = false;\n          renderFn(_objectSpread(_objectSpread({}, this.getWidgetRenderState(renderOptions)), {}, {\n            instantSearchInstance: renderOptions.instantSearchInstance\n          }), false);\n          return;\n        } // render the loader\n\n\n        lastHits = [];\n        isLoading = true;\n        renderFn(_objectSpread(_objectSpread({}, this.getWidgetRenderState(renderOptions)), {}, {\n          instantSearchInstance: renderOptions.instantSearchInstance\n        }), false); // call /answers API\n\n        runConcurrentSafePromise(debouncedRefine(query, queryLanguages, _objectSpread(_objectSpread({}, extraParameters), {}, {\n          nbHits: nbHits,\n          attributesForPrediction: attributesForPrediction\n        }))).then(function (result) {\n          if (!result) {\n            // It's undefined when it's debounced.\n            return;\n          }\n\n          if (escapeHTML && result.hits.length > 0) {\n            result.hits = escapeHits(result.hits);\n          }\n\n          var hitsWithAbsolutePosition = addAbsolutePosition(result.hits, 0, nbHits);\n          var hitsWithAbsolutePositionAndQueryID = addQueryID(hitsWithAbsolutePosition, result.queryID);\n          lastHits = hitsWithAbsolutePositionAndQueryID;\n          isLoading = false;\n          debouncedRender(_objectSpread(_objectSpread({}, _this.getWidgetRenderState(renderOptions)), {}, {\n            instantSearchInstance: renderOptions.instantSearchInstance\n          }), false);\n        });\n      },\n      getRenderState: function getRenderState(renderState, renderOptions) {\n        return _objectSpread(_objectSpread({}, renderState), {}, {\n          answers: this.getWidgetRenderState(renderOptions)\n        });\n      },\n      getWidgetRenderState: function getWidgetRenderState() {\n        return {\n          hits: lastHits,\n          isLoading: isLoading,\n          widgetParams: widgetParams\n        };\n      },\n      dispose: function dispose(_ref2) {\n        var state = _ref2.state;\n        unmountFn();\n        return state;\n      },\n      getWidgetSearchParameters: function getWidgetSearchParameters(state) {\n        return state;\n      }\n    };\n  };\n};\n\nexport default connectAnswers;","map":{"version":3,"sources":["/Users/adil/Documents/GitHub/furniture-front/node_modules/instantsearch.js/es/connectors/answers/connectAnswers.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","checkRendering","createDocumentationMessageGenerator","createConcurrentSafePromise","addQueryID","debounce","addAbsolutePosition","noop","escapeHits","hasFindAnswersMethod","answersIndex","findAnswers","withUsage","name","connector","connectAnswers","renderFn","unmountFn","undefined","widgetParams","_ref","queryLanguages","attributesForPrediction","_ref$nbHits","nbHits","_ref$renderDebounceTi","renderDebounceTime","_ref$searchDebounceTi","searchDebounceTime","_ref$escapeHTML","escapeHTML","_ref$extraParameters","extraParameters","Error","runConcurrentSafePromise","lastHits","isLoading","debouncedRender","debouncedRefine","$$type","init","initOptions","state","instantSearchInstance","client","initIndex","index","getWidgetRenderState","render","renderOptions","_this","query","then","result","hits","hitsWithAbsolutePosition","hitsWithAbsolutePositionAndQueryID","queryID","getRenderState","renderState","answers","dispose","_ref2","getWidgetSearchParameters"],"mappings":"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","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { checkRendering, createDocumentationMessageGenerator, createConcurrentSafePromise, addQueryID, debounce, addAbsolutePosition, noop, escapeHits } from '../../lib/utils';\n\nfunction hasFindAnswersMethod(answersIndex) {\n  return typeof answersIndex.findAnswers === 'function';\n}\n\nvar withUsage = createDocumentationMessageGenerator({\n  name: 'answers',\n  connector: true\n});\n\nvar connectAnswers = function connectAnswers(renderFn) {\n  var unmountFn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n  checkRendering(renderFn, withUsage());\n  return function (widgetParams) {\n    var _ref = widgetParams || {},\n        queryLanguages = _ref.queryLanguages,\n        attributesForPrediction = _ref.attributesForPrediction,\n        _ref$nbHits = _ref.nbHits,\n        nbHits = _ref$nbHits === void 0 ? 1 : _ref$nbHits,\n        _ref$renderDebounceTi = _ref.renderDebounceTime,\n        renderDebounceTime = _ref$renderDebounceTi === void 0 ? 100 : _ref$renderDebounceTi,\n        _ref$searchDebounceTi = _ref.searchDebounceTime,\n        searchDebounceTime = _ref$searchDebounceTi === void 0 ? 100 : _ref$searchDebounceTi,\n        _ref$escapeHTML = _ref.escapeHTML,\n        escapeHTML = _ref$escapeHTML === void 0 ? true : _ref$escapeHTML,\n        _ref$extraParameters = _ref.extraParameters,\n        extraParameters = _ref$extraParameters === void 0 ? {} : _ref$extraParameters; // @ts-expect-error checking for the wrong value\n\n\n    if (!queryLanguages || queryLanguages.length === 0) {\n      throw new Error(withUsage('The `queryLanguages` expects an array of strings.'));\n    }\n\n    var runConcurrentSafePromise = createConcurrentSafePromise();\n    var lastHits = [];\n    var isLoading = false;\n    var debouncedRender = debounce(renderFn, renderDebounceTime); // this does not directly use DebouncedFunction<findAnswers>, since then the generic will disappear\n\n    var debouncedRefine;\n    return {\n      $$type: 'ais.answers',\n      init: function init(initOptions) {\n        var state = initOptions.state,\n            instantSearchInstance = initOptions.instantSearchInstance;\n        var answersIndex = instantSearchInstance.client.initIndex(state.index);\n\n        if (!hasFindAnswersMethod(answersIndex)) {\n          throw new Error(withUsage('`algoliasearch` >= 4.8.0 required.'));\n        }\n\n        debouncedRefine = debounce(answersIndex.findAnswers, searchDebounceTime);\n        renderFn(_objectSpread(_objectSpread({}, this.getWidgetRenderState(initOptions)), {}, {\n          instantSearchInstance: initOptions.instantSearchInstance\n        }), true);\n      },\n      render: function render(renderOptions) {\n        var _this = this;\n\n        var query = renderOptions.state.query;\n\n        if (!query) {\n          // renders nothing with empty query\n          lastHits = [];\n          isLoading = false;\n          renderFn(_objectSpread(_objectSpread({}, this.getWidgetRenderState(renderOptions)), {}, {\n            instantSearchInstance: renderOptions.instantSearchInstance\n          }), false);\n          return;\n        } // render the loader\n\n\n        lastHits = [];\n        isLoading = true;\n        renderFn(_objectSpread(_objectSpread({}, this.getWidgetRenderState(renderOptions)), {}, {\n          instantSearchInstance: renderOptions.instantSearchInstance\n        }), false); // call /answers API\n\n        runConcurrentSafePromise(debouncedRefine(query, queryLanguages, _objectSpread(_objectSpread({}, extraParameters), {}, {\n          nbHits: nbHits,\n          attributesForPrediction: attributesForPrediction\n        }))).then(function (result) {\n          if (!result) {\n            // It's undefined when it's debounced.\n            return;\n          }\n\n          if (escapeHTML && result.hits.length > 0) {\n            result.hits = escapeHits(result.hits);\n          }\n\n          var hitsWithAbsolutePosition = addAbsolutePosition(result.hits, 0, nbHits);\n          var hitsWithAbsolutePositionAndQueryID = addQueryID(hitsWithAbsolutePosition, result.queryID);\n          lastHits = hitsWithAbsolutePositionAndQueryID;\n          isLoading = false;\n          debouncedRender(_objectSpread(_objectSpread({}, _this.getWidgetRenderState(renderOptions)), {}, {\n            instantSearchInstance: renderOptions.instantSearchInstance\n          }), false);\n        });\n      },\n      getRenderState: function getRenderState(renderState, renderOptions) {\n        return _objectSpread(_objectSpread({}, renderState), {}, {\n          answers: this.getWidgetRenderState(renderOptions)\n        });\n      },\n      getWidgetRenderState: function getWidgetRenderState() {\n        return {\n          hits: lastHits,\n          isLoading: isLoading,\n          widgetParams: widgetParams\n        };\n      },\n      dispose: function dispose(_ref2) {\n        var state = _ref2.state;\n        unmountFn();\n        return state;\n      },\n      getWidgetSearchParameters: function getWidgetSearchParameters(state) {\n        return state;\n      }\n    };\n  };\n};\n\nexport default connectAnswers;"]},"metadata":{},"sourceType":"module"}