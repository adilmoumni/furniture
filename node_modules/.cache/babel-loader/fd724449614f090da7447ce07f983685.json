{"ast":null,"code":"import { createSuitMixin as t } from \"../mixins/suit.js\";\nimport { createWidgetMixin as s } from \"../mixins/widget.js\";\nimport { connectHitsWithInsights as e } from \"instantsearch.js/es/connectors\";\nexport default {\n  render: function () {\n    var t = this,\n        s = t.$createElement,\n        e = t._self._c || s;\n    return t.state ? e(\"div\", {\n      class: t.suit()\n    }, [t._t(\"default\", [e(\"ol\", {\n      class: t.suit(\"list\")\n    }, t._l(t.items, function (s, i) {\n      return e(\"li\", {\n        key: s.objectID,\n        class: t.suit(\"item\")\n      }, [t._t(\"item\", [t._v(\"objectID: \" + t._s(s.objectID) + \", index: \" + t._s(i))], {\n        item: s,\n        index: i,\n        insights: t.state.insights\n      })], 2);\n    }), 0)], {\n      items: t.items,\n      insights: t.state.insights,\n      sendEvent: t.state.sendEvent\n    })], 2) : t._e();\n  },\n  staticRenderFns: [],\n  name: \"AisHits\",\n  mixins: [s({\n    connector: e\n  }), t({\n    name: \"Hits\"\n  })],\n  props: {\n    escapeHTML: {\n      type: Boolean,\n      default: !0\n    },\n    transformItems: {\n      type: Function,\n      default: void 0\n    }\n  },\n  computed: {\n    items: function () {\n      return this.state.hits;\n    },\n    widgetParams: function () {\n      return {\n        escapeHTML: this.escapeHTML,\n        transformItems: this.transformItems\n      };\n    }\n  }\n};","map":{"version":3,"sources":["../../../../src/components/Hits.vue"],"names":["render","name","mixins","createWidgetMixin","connector","connectHitsWithInsights","createSuitMixin","props","escapeHTML","type","Boolean","default","transformItems","Function","undefined","computed","items","this","state","hits","widgetParams"],"mappings":";;;eAiCe;AAACA,EAAAA,MAAAA,EAAAA,YAAAA;AAAAA,QAAAA,CAAAA,GAAAA,IAAAA;AAAAA,QAAAA,CAAAA,GAAAA,CAAAA,CAAAA,cAAAA;AAAAA,QAAAA,CAAAA,GAAAA,CAAAA,CAAAA,KAAAA,CAAAA,EAAAA,IAAAA,CAAAA;AAAAA,WAAAA,CAAAA,CAAAA,KAAAA,GAAAA,CAAAA,CAAAA,KAAAA,EAAAA;AAAAA,MAAAA,KAAAA,EAAAA,CAAAA,CAAAA,IAAAA;AAAAA,KAAAA,EAAAA,CAAAA,CAAAA,CAAAA,EAAAA,CAAAA,SAAAA,EAAAA,CAAAA,CAAAA,CAAAA,IAAAA,EAAAA;AAAAA,MAAAA,KAAAA,EAAAA,CAAAA,CAAAA,IAAAA,CAAAA,MAAAA;AAAAA,KAAAA,EAAAA,CAAAA,CAAAA,EAAAA,CAAAA,CAAAA,CAAAA,KAAAA,EAAAA,UAAAA,CAAAA,EAAAA,CAAAA,EAAAA;AAAAA,aAAAA,CAAAA,CAAAA,IAAAA,EAAAA;AAAAA,QAAAA,GAAAA,EAAAA,CAAAA,CAAAA,QAAAA;AAAAA,QAAAA,KAAAA,EAAAA,CAAAA,CAAAA,IAAAA,CAAAA,MAAAA;AAAAA,OAAAA,EAAAA,CAAAA,CAAAA,CAAAA,EAAAA,CAAAA,MAAAA,EAAAA,CAAAA,CAAAA,CAAAA,EAAAA,CAAAA,eAAAA,CAAAA,CAAAA,EAAAA,CAAAA,CAAAA,CAAAA,QAAAA,CAAAA,GAAAA,WAAAA,GAAAA,CAAAA,CAAAA,EAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,EAAAA;AAAAA,QAAAA,IAAAA,EAAAA,CAAAA;AAAAA,QAAAA,KAAAA,EAAAA,CAAAA;AAAAA,QAAAA,QAAAA,EAAAA,CAAAA,CAAAA,KAAAA,CAAAA;AAAAA,OAAAA,CAAAA,CAAAA,EAAAA,CAAAA,CAAAA;AAAAA,KAAAA,CAAAA,EAAAA,CAAAA,CAAAA,CAAAA,EAAAA;AAAAA,MAAAA,KAAAA,EAAAA,CAAAA,CAAAA,KAAAA;AAAAA,MAAAA,QAAAA,EAAAA,CAAAA,CAAAA,KAAAA,CAAAA,QAAAA;AAAAA,MAAAA,SAAAA,EAAAA,CAAAA,CAAAA,KAAAA,CAAAA;AAAAA,KAAAA,CAAAA,CAAAA,EAAAA,CAAAA,CAAAA,GAAAA,CAAAA,CAAAA,EAAAA,EAAAA;AAAAA,GAAD;AAACA,EAAAA,eAAAA,EAAAA,EAAD;AACbC,EAAAA,IAAAA,EAAM,SADO;AAEbC,EAAAA,MAAAA,EAAQ,CACNC,CAAAA,CAAkB;AAAEC,IAAAA,SAAAA,EAAWC;AAAb,GAAlBF,CADM,EAENG,CAAAA,CAAgB;AAAEL,IAAAA,IAAAA,EAAM;AAAR,GAAhBK,CAFM,CAFK;AAMbC,EAAAA,KAAAA,EAAO;AACLC,IAAAA,UAAAA,EAAY;AACVC,MAAAA,IAAAA,EAAMC,OADI;AAEVC,MAAAA,OAAAA,EAAAA,CAAS;AAFC,KADP;AAKLC,IAAAA,cAAAA,EAAgB;AACdH,MAAAA,IAAAA,EAAMI,QADQ;AAEdF,MAAAA,OAAAA,EAAAA,KAASG;AAFK;AALX,GANM;AAgBbC,EAAAA,QAAAA,EAAU;AACRC,IAAAA,KAAAA,EAAAA,YAAAA;AACE,aAAOC,KAAKC,KAALD,CAAWE,IAAlB;AAAkBA,KAFZ;AAIRC,IAAAA,YAAAA,EAAAA,YAAAA;AACE,aAAO;AACLZ,QAAAA,UAAAA,EAAYS,KAAKT,UADZ;AAELI,QAAAA,cAAAA,EAAgBK,KAAKL;AAFhB,OAAP;AAEuBA;AAPjB;AAhBG,C","sourcesContent":["<template>\n  <div\n    v-if=\"state\"\n    :class=\"suit()\"\n  >\n    <slot\n      :items=\"items\"\n      :insights=\"state.insights\"\n      :send-event=\"state.sendEvent\"\n    >\n      <ol :class=\"suit('list')\">\n        <li\n          v-for=\"(item, itemIndex) in items\"\n          :key=\"item.objectID\"\n          :class=\"suit('item')\"\n        >\n          <slot\n            name=\"item\"\n            :item=\"item\"\n            :index=\"itemIndex\"\n            :insights=\"state.insights\"\n          >objectID: {{ item.objectID }}, index: {{ itemIndex }}</slot>\n        </li>\n      </ol>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectHitsWithInsights } from 'instantsearch.js/es/connectors';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisHits',\n  mixins: [\n    createWidgetMixin({ connector: connectHitsWithInsights }),\n    createSuitMixin({ name: 'Hits' }),\n  ],\n  props: {\n    escapeHTML: {\n      type: Boolean,\n      default: true,\n    },\n    transformItems: {\n      type: Function,\n      default: undefined,\n    },\n  },\n  computed: {\n    items() {\n      return this.state.hits;\n    },\n    widgetParams() {\n      return {\n        escapeHTML: this.escapeHTML,\n        transformItems: this.transformItems,\n      };\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}