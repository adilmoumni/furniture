{"ast":null,"code":"import { createSuitMixin as e } from \"../mixins/suit.js\";\nimport { createWidgetMixin as t } from \"../mixins/widget.js\";\nimport { connectMenu as s } from \"instantsearch.js/es/connectors\";\nimport { createPanelConsumerMixin as o } from \"../mixins/panel.js\";\nexport default {\n  render: function () {\n    var e = this,\n        t = e.$createElement,\n        s = e._self._c || t;\n    return e.state ? s(\"div\", {\n      class: [e.suit(), !e.state.canRefine && e.suit(\"\", \"noRefinement\")]\n    }, [e._t(\"default\", [s(\"ul\", {\n      class: e.suit(\"list\")\n    }, e._l(e.state.items, function (t) {\n      return s(\"li\", {\n        key: t.value,\n        class: [e.suit(\"item\"), t.isRefined && e.suit(\"item\", \"selected\")]\n      }, [s(\"a\", {\n        class: e.suit(\"link\"),\n        attrs: {\n          href: e.state.createURL(t.value)\n        },\n        on: {\n          click: function (s) {\n            return s.preventDefault(), e.state.refine(t.value);\n          }\n        }\n      }, [s(\"span\", {\n        class: e.suit(\"label\")\n      }, [e._v(e._s(t.label))]), e._v(\" \"), s(\"span\", {\n        class: e.suit(\"count\")\n      }, [e._v(e._s(t.count))])])]);\n    }), 0), e._v(\" \"), e.showShowMoreButton ? s(\"button\", {\n      class: [e.suit(\"showMore\"), !e.state.canToggleShowMore && e.suit(\"showMore\", \"disabled\")],\n      attrs: {\n        disabled: !e.state.canToggleShowMore\n      },\n      on: {\n        click: function (t) {\n          return t.preventDefault(), e.state.toggleShowMore();\n        }\n      }\n    }, [e._t(\"showMoreLabel\", [e._v(e._s(e.state.isShowingMore ? \"Show less\" : \"Show more\"))], {\n      isShowingMore: e.state.isShowingMore\n    })], 2) : e._e()], {\n      items: e.state.items,\n      canRefine: e.state.canRefine,\n      canToggleShowMore: e.state.canToggleShowMore,\n      isShowingMore: e.state.isShowingMore,\n      refine: e.state.refine,\n      createURL: e.state.createURL,\n      toggleShowMore: e.state.toggleShowMore,\n      sendEvent: e.state.sendEvent\n    })], 2) : e._e();\n  },\n  staticRenderFns: [],\n  name: \"AisMenu\",\n  mixins: [e({\n    name: \"Menu\"\n  }), t({\n    connector: s\n  }), o({\n    mapStateToCanRefine: function (e) {\n      return Boolean(e.canRefine);\n    }\n  })],\n  props: {\n    attribute: {\n      type: String,\n      required: !0\n    },\n    limit: {\n      type: Number,\n      default: void 0\n    },\n    showMoreLimit: {\n      type: Number,\n      default: void 0\n    },\n    showMore: {\n      type: Boolean,\n      default: !1\n    },\n    sortBy: {\n      type: [Array, Function],\n      default: void 0\n    },\n    transformItems: {\n      type: Function,\n      default: void 0\n    }\n  },\n  computed: {\n    widgetParams: function () {\n      return {\n        attribute: this.attribute,\n        limit: this.limit,\n        showMore: this.showMore,\n        showMoreLimit: this.showMoreLimit,\n        sortBy: this.sortBy,\n        transformItems: this.transformItems\n      };\n    },\n    showShowMoreButton: function () {\n      return this.state.canRefine && this.showMore;\n    }\n  }\n};","map":{"version":3,"sources":["../../../../src/components/Menu.vue"],"names":["render","name","mixins","createSuitMixin","createWidgetMixin","connector","connectMenu","createPanelConsumerMixin","mapStateToCanRefine","state","Boolean","canRefine","props","attribute","type","String","required","limit","Number","default","undefined","showMoreLimit","showMore","sortBy","Array","Function","transformItems","computed","widgetParams","this","showShowMoreButton"],"mappings":"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","sourcesContent":["<template>\n  <div\n    v-if=\"state\"\n    :class=\"[suit(), !state.canRefine && suit('', 'noRefinement')]\"\n  >\n    <slot\n      :items=\"state.items\"\n      :can-refine=\"state.canRefine\"\n      :can-toggle-show-more=\"state.canToggleShowMore\"\n      :is-showing-more=\"state.isShowingMore\"\n      :refine=\"state.refine\"\n      :createURL=\"state.createURL\"\n      :toggle-show-more=\"state.toggleShowMore\"\n      :send-event=\"state.sendEvent\"\n    >\n      <ul :class=\"suit('list')\">\n        <li\n          v-for=\"item in state.items\"\n          :key=\"item.value\"\n          :class=\"[suit('item'), item.isRefined && suit('item', 'selected')]\"\n        >\n          <a\n            :href=\"state.createURL(item.value)\"\n            :class=\"suit('link')\"\n            @click.prevent=\"state.refine(item.value)\"\n          >\n            <span :class=\"suit('label')\">{{ item.label }}</span>\n            <span :class=\"suit('count')\">{{ item.count }}</span>\n          </a>\n        </li>\n      </ul>\n\n      <button\n        v-if=\"showShowMoreButton\"\n        :class=\"[suit('showMore'), !state.canToggleShowMore && suit('showMore', 'disabled')]\"\n        :disabled=\"!state.canToggleShowMore\"\n        @click.prevent=\"state.toggleShowMore()\"\n      >\n        <slot\n          name=\"showMoreLabel\"\n          :is-showing-more=\"state.isShowingMore\"\n        >{{ state.isShowingMore ? 'Show less' : 'Show more' }}</slot>\n      </button>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectMenu } from 'instantsearch.js/es/connectors';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisMenu',\n  mixins: [\n    createSuitMixin({ name: 'Menu' }),\n    createWidgetMixin({ connector: connectMenu }),\n    createPanelConsumerMixin({\n      mapStateToCanRefine: state => Boolean(state.canRefine),\n    }),\n  ],\n  props: {\n    attribute: {\n      type: String,\n      required: true,\n    },\n    // TODO: implement searchable in connector\n    // searchable: {\n    //   type: Boolean,\n    //   default: false,\n    // },\n    limit: {\n      type: Number,\n      default: undefined,\n    },\n    showMoreLimit: {\n      type: Number,\n      default: undefined,\n    },\n    showMore: {\n      type: Boolean,\n      default: false,\n    },\n    sortBy: {\n      type: [Array, Function],\n      default: undefined,\n    },\n    transformItems: {\n      type: Function,\n      default: undefined,\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        attribute: this.attribute,\n        limit: this.limit,\n        showMore: this.showMore,\n        showMoreLimit: this.showMoreLimit,\n        sortBy: this.sortBy,\n        transformItems: this.transformItems,\n      };\n    },\n    showShowMoreButton() {\n      return this.state.canRefine && this.showMore;\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}