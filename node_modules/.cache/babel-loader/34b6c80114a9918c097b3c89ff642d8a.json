{"ast":null,"code":"function isPrimitive(obj) {\n  return obj !== Object(obj);\n}\n\nfunction isEqual(first, second) {\n  if (first === second) {\n    return true;\n  }\n\n  if (isPrimitive(first) || isPrimitive(second) || typeof first === 'function' || typeof second === 'function') {\n    return first === second;\n  }\n\n  if (Object.keys(first).length !== Object.keys(second).length) {\n    return false;\n  }\n\n  for (var _i = 0, _Object$keys = Object.keys(first); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n\n    if (!(key in second)) {\n      return false;\n    }\n\n    if (!isEqual(first[key], second[key])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport default isEqual;","map":{"version":3,"sources":["/Users/adil/Documents/GitHub/furniture-front/node_modules/instantsearch.js/es/lib/utils/isEqual.js"],"names":["isPrimitive","obj","Object","isEqual","first","second","keys","length","_i","_Object$keys","key"],"mappings":"AAAA,SAASA,WAAT,CAAqBC,GAArB,EAA0B;AACxB,SAAOA,GAAG,KAAKC,MAAM,CAACD,GAAD,CAArB;AACD;;AAED,SAASE,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,MAAID,KAAK,KAAKC,MAAd,EAAsB;AACpB,WAAO,IAAP;AACD;;AAED,MAAIL,WAAW,CAACI,KAAD,CAAX,IAAsBJ,WAAW,CAACK,MAAD,CAAjC,IAA6C,OAAOD,KAAP,KAAiB,UAA9D,IAA4E,OAAOC,MAAP,KAAkB,UAAlG,EAA8G;AAC5G,WAAOD,KAAK,KAAKC,MAAjB;AACD;;AAED,MAAIH,MAAM,CAACI,IAAP,CAAYF,KAAZ,EAAmBG,MAAnB,KAA8BL,MAAM,CAACI,IAAP,CAAYD,MAAZ,EAAoBE,MAAtD,EAA8D;AAC5D,WAAO,KAAP;AACD;;AAED,OAAK,IAAIC,EAAE,GAAG,CAAT,EAAYC,YAAY,GAAGP,MAAM,CAACI,IAAP,CAAYF,KAAZ,CAAhC,EAAoDI,EAAE,GAAGC,YAAY,CAACF,MAAtE,EAA8EC,EAAE,EAAhF,EAAoF;AAClF,QAAIE,GAAG,GAAGD,YAAY,CAACD,EAAD,CAAtB;;AAEA,QAAI,EAAEE,GAAG,IAAIL,MAAT,CAAJ,EAAsB;AACpB,aAAO,KAAP;AACD;;AAED,QAAI,CAACF,OAAO,CAACC,KAAK,CAACM,GAAD,CAAN,EAAaL,MAAM,CAACK,GAAD,CAAnB,CAAZ,EAAuC;AACrC,aAAO,KAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD;;AAED,eAAeP,OAAf","sourcesContent":["function isPrimitive(obj) {\n  return obj !== Object(obj);\n}\n\nfunction isEqual(first, second) {\n  if (first === second) {\n    return true;\n  }\n\n  if (isPrimitive(first) || isPrimitive(second) || typeof first === 'function' || typeof second === 'function') {\n    return first === second;\n  }\n\n  if (Object.keys(first).length !== Object.keys(second).length) {\n    return false;\n  }\n\n  for (var _i = 0, _Object$keys = Object.keys(first); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n\n    if (!(key in second)) {\n      return false;\n    }\n\n    if (!isEqual(first[key], second[key])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport default isEqual;"]},"metadata":{},"sourceType":"module"}