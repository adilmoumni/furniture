{"ast":null,"code":"// Debounce a function call to the trailing edge.\n// The debounced function returns a promise.\nexport function debounce(func, wait) {\n  var lastTimeout = null;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return new Promise(function (resolve, reject) {\n      if (lastTimeout) {\n        clearTimeout(lastTimeout);\n      }\n\n      lastTimeout = setTimeout(function () {\n        lastTimeout = null;\n        Promise.resolve(func.apply(void 0, args)).then(resolve).catch(reject);\n      }, wait);\n    });\n  };\n}","map":{"version":3,"sources":["/Users/adil/Documents/GitHub/furniture-front/node_modules/instantsearch.js/es/lib/utils/debounce.js"],"names":["debounce","func","wait","lastTimeout","_len","arguments","length","args","Array","_key","Promise","resolve","reject","clearTimeout","setTimeout","apply","then","catch"],"mappings":"AAAA;AACA;AACA,OAAO,SAASA,QAAT,CAAkBC,IAAlB,EAAwBC,IAAxB,EAA8B;AACnC,MAAIC,WAAW,GAAG,IAAlB;AACA,SAAO,YAAY;AACjB,SAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,IAAI,GAAG,IAAIC,KAAJ,CAAUJ,IAAV,CAApC,EAAqDK,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGL,IAA3E,EAAiFK,IAAI,EAArF,EAAyF;AACvFF,MAAAA,IAAI,CAACE,IAAD,CAAJ,GAAaJ,SAAS,CAACI,IAAD,CAAtB;AACD;;AAED,WAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC5C,UAAIT,WAAJ,EAAiB;AACfU,QAAAA,YAAY,CAACV,WAAD,CAAZ;AACD;;AAEDA,MAAAA,WAAW,GAAGW,UAAU,CAAC,YAAY;AACnCX,QAAAA,WAAW,GAAG,IAAd;AACAO,QAAAA,OAAO,CAACC,OAAR,CAAgBV,IAAI,CAACc,KAAL,CAAW,KAAK,CAAhB,EAAmBR,IAAnB,CAAhB,EAA0CS,IAA1C,CAA+CL,OAA/C,EAAwDM,KAAxD,CAA8DL,MAA9D;AACD,OAHuB,EAGrBV,IAHqB,CAAxB;AAID,KATM,CAAP;AAUD,GAfD;AAgBD","sourcesContent":["// Debounce a function call to the trailing edge.\n// The debounced function returns a promise.\nexport function debounce(func, wait) {\n  var lastTimeout = null;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return new Promise(function (resolve, reject) {\n      if (lastTimeout) {\n        clearTimeout(lastTimeout);\n      }\n\n      lastTimeout = setTimeout(function () {\n        lastTimeout = null;\n        Promise.resolve(func.apply(void 0, args)).then(resolve).catch(reject);\n      }, wait);\n    });\n  };\n}"]},"metadata":{},"sourceType":"module"}