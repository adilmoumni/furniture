{"ast":null,"code":"import { createSuitMixin as t } from \"../mixins/suit.js\";\nimport { createWidgetMixin as e } from \"../mixins/widget.js\";\nimport { connectMenu as n } from \"instantsearch.js/es/connectors\";\nimport { createPanelConsumerMixin as i } from \"../mixins/panel.js\";\nexport default {\n  render: function () {\n    var t = this,\n        e = t.$createElement,\n        n = t._self._c || e;\n    return t.state ? n(\"div\", {\n      class: [t.suit(), !t.state.canRefine && t.suit(\"\", \"noRefinement\")]\n    }, [t._t(\"default\", [n(\"select\", {\n      class: t.suit(\"select\"),\n      on: {\n        change: function (e) {\n          return t.refine(e.currentTarget.value);\n        }\n      }\n    }, [n(\"option\", {\n      class: t.suit(\"option\"),\n      attrs: {\n        value: \"\"\n      }\n    }, [t._t(\"defaultOption\", [t._v(\"See all\")])], 2), t._v(\" \"), t._l(t.state.items, function (e) {\n      return n(\"option\", {\n        key: e.value,\n        class: t.suit(\"option\"),\n        domProps: {\n          value: e.value,\n          selected: e.isRefined\n        }\n      }, [t._t(\"item\", [t._v(t._s(e.label) + \" (\" + t._s(e.count) + \")\")], {\n        item: e\n      })], 2);\n    })], 2)], {\n      items: t.state.items,\n      canRefine: t.state.canRefine,\n      refine: t.refine,\n      createURL: t.state.createURL,\n      sendEvent: t.state.sendEvent\n    })], 2) : t._e();\n  },\n  staticRenderFns: [],\n  name: \"AisMenuSelect\",\n  mixins: [t({\n    name: \"MenuSelect\"\n  }), e({\n    connector: n\n  }), i({\n    mapStateToCanRefine: function (t) {\n      return Boolean(t.canRefine);\n    }\n  })],\n  props: {\n    attribute: {\n      type: String,\n      required: !0\n    },\n    limit: {\n      type: Number,\n      default: 10\n    },\n    sortBy: {\n      type: [Array, Function],\n      default: void 0\n    },\n    transformItems: {\n      type: Function,\n      default: function (t) {\n        return t;\n      }\n    }\n  },\n  computed: {\n    widgetParams: function () {\n      return {\n        attribute: this.attribute,\n        limit: this.limit,\n        sortBy: this.sortBy,\n        transformItems: this.transformItems\n      };\n    }\n  },\n  methods: {\n    refine: function (t) {\n      this.state.refine(t);\n    }\n  }\n};","map":{"version":3,"sources":["../../../../src/components/MenuSelect.vue"],"names":["render","name","mixins","createSuitMixin","createWidgetMixin","connector","connectMenu","createPanelConsumerMixin","mapStateToCanRefine","state","Boolean","canRefine","props","attribute","type","String","required","limit","Number","default","sortBy","Array","Function","undefined","transformItems","items","computed","widgetParams","this","methods","refine","value"],"mappings":"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","sourcesContent":["<template>\n  <div\n    :class=\"[suit(), !state.canRefine && suit('', 'noRefinement')]\"\n    v-if=\"state\"\n  >\n    <slot\n      :items=\"state.items\"\n      :can-refine=\"state.canRefine\"\n      :refine=\"refine\"\n      :createURL=\"state.createURL\"\n      :send-event=\"state.sendEvent\"\n    >\n      <select\n        :class=\"suit('select')\"\n        @change=\"refine($event.currentTarget.value)\"\n      >\n        <option\n          :class=\"suit('option')\"\n          value=\"\"\n        >\n          <slot name=\"defaultOption\">See all</slot>\n        </option>\n        <option\n          v-for=\"item in state.items\"\n          :key=\"item.value\"\n          :class=\"suit('option')\"\n          :value=\"item.value\"\n          :selected=\"item.isRefined\"\n        >\n          <slot\n            name=\"item\"\n            :item=\"item\"\n          >{{ item.label }} ({{ item.count }})</slot>\n        </option>\n      </select>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectMenu } from 'instantsearch.js/es/connectors';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisMenuSelect',\n  mixins: [\n    createSuitMixin({ name: 'MenuSelect' }),\n    createWidgetMixin({ connector: connectMenu }),\n    createPanelConsumerMixin({\n      mapStateToCanRefine: state => Boolean(state.canRefine),\n    }),\n  ],\n  props: {\n    attribute: {\n      type: String,\n      required: true,\n    },\n    limit: {\n      type: Number,\n      default: 10,\n    },\n    sortBy: {\n      type: [Array, Function],\n      default: undefined,\n    },\n    transformItems: {\n      type: Function,\n      default(items) {\n        return items;\n      },\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        attribute: this.attribute,\n        limit: this.limit,\n        sortBy: this.sortBy,\n        transformItems: this.transformItems,\n      };\n    },\n  },\n  methods: {\n    refine(value) {\n      this.state.refine(value);\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}