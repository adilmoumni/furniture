{"ast":null,"code":"import { createSuitMixin as e } from \"../mixins/suit.js\";\nimport \"vue\";\nimport { renderCompat as i, getDefaultSlot as n } from \"../util/vue-compat/index-2.js\";\nimport { createWidgetMixin as t } from \"../mixins/widget.js\";\nimport r from \"instantsearch.js/es/widgets/index/index\";\nexport default {\n  name: \"AisIndex\",\n  mixins: [e({\n    name: \"Index\"\n  }), t({\n    connector: function () {\n      return r;\n    }\n  })],\n  provide: function () {\n    var e = this;\n    return {\n      $_ais_getParentIndex: function () {\n        return e.widget;\n      }\n    };\n  },\n  props: {\n    indexName: {\n      type: String,\n      required: !0\n    },\n    indexId: {\n      type: String,\n      required: !1\n    }\n  },\n  render: i(function (e) {\n    return e(\"div\", {}, n(this));\n  }),\n  computed: {\n    widgetParams: function () {\n      return {\n        indexName: this.indexName,\n        indexId: this.indexId\n      };\n    }\n  }\n};","map":{"version":3,"sources":["../../../../src/components/Index.js"],"names":["indexWidget","name","mixins","createSuitMixin","createWidgetMixin","connector","provide","$_ais_getParentIndex","this","widget","props","indexName","type","String","required","indexId","render","renderCompat","h","getDefaultSlot","computed","widgetParams"],"mappings":";;;;;eAQe;AACbC,EAAAA,IAAAA,EAAM,UADO;AAEbC,EAAAA,MAAAA,EAAQ,CACNC,CAAAA,CAAgB;AAAEF,IAAAA,IAAAA,EAAM;AAAR,GAAhBE,CADM,EAENC,CAAAA,CAAkB;AAAEC,IAAAA,SAAAA,EAAAA,YAAAA;AAAAA,aANGL,CAMHK;AANGL;AAML,GAAlBI,CAFM,CAFK;AAMbE,EAAAA,OAAAA,EAAAA,YAAAA;AAAAA,QAAAA,CAAAA,GAAAA,IAAAA;AACE,WAAO;AAGLC,MAAAA,oBAAAA,EAAAA,YAAAA;AAAAA,eAA4BC,CAAAA,CAAKC,MAAjCF;AAAiCE;AAH5B,KAAP;AAGmCA,GAVxB;AAabC,EAAAA,KAAAA,EAAO;AACLC,IAAAA,SAAAA,EAAW;AACTC,MAAAA,IAAAA,EAAMC,MADG;AAETC,MAAAA,QAAAA,EAAAA,CAAU;AAFD,KADN;AAKLC,IAAAA,OAAAA,EAAS;AACPH,MAAAA,IAAAA,EAAMC,MADC;AAEPC,MAAAA,QAAAA,EAAAA,CAAU;AAFH;AALJ,GAbM;AAuBbE,EAAAA,MAAAA,EAAQC,CAAAA,CAAa,UAASC,CAAT,EAASA;AAC5B,WAAOA,CAAAA,CAAE,KAAFA,EAAS,EAATA,EAAaC,CAAAA,CAAeX,IAAfW,CAAbD,CAAP;AAAmCV,GAD7BS,CAvBK;AA0BbG,EAAAA,QAAAA,EAAU;AACRC,IAAAA,YAAAA,EAAAA,YAAAA;AACE,aAAO;AACLV,QAAAA,SAAAA,EAAWH,KAAKG,SADX;AAELI,QAAAA,OAAAA,EAASP,KAAKO;AAFT,OAAP;AAEgBA;AAJV;AA1BG,C","sourcesContent":["import { createSuitMixin } from '../mixins/suit';\nimport { createWidgetMixin } from '../mixins/widget';\nimport indexWidget from 'instantsearch.js/es/widgets/index/index';\nimport { renderCompat, getDefaultSlot } from '../util/vue-compat';\n\n// wrapped in a dummy function, since indexWidget doesn't render\nconst connectIndex = () => indexWidget;\n\nexport default {\n  name: 'AisIndex',\n  mixins: [\n    createSuitMixin({ name: 'Index' }),\n    createWidgetMixin({ connector: connectIndex }),\n  ],\n  provide() {\n    return {\n      // The widget is created & registered by widgetMixin, accessor is needed\n      // because provide is not reactive.\n      $_ais_getParentIndex: () => this.widget,\n    };\n  },\n  props: {\n    indexName: {\n      type: String,\n      required: true,\n    },\n    indexId: {\n      type: String,\n      required: false,\n    },\n  },\n  render: renderCompat(function(h) {\n    return h('div', {}, getDefaultSlot(this));\n  }),\n  computed: {\n    widgetParams() {\n      return {\n        indexName: this.indexName,\n        indexId: this.indexId,\n      };\n    },\n  },\n};\n"]},"metadata":{},"sourceType":"module"}