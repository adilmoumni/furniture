{"ast":null,"code":"var _jsxFileName = \"/Users/adil/Documents/GitHub/furniture-front/src/App.js\";\nimport algoliasearch from 'algoliasearch/lite';\nimport { InstantSearch, SearchBox, Hits, Highlight, connectRefinementList } from 'react-instantsearch-dom'; // const searchClient = algoliasearch(\n//   'GF9DTO0HM0',\n//   'daf7d7e0cc8a9cdc3f34fbd6e36197d9'\n// );\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst searchClient = algoliasearch('GF9DTO0HM0', 'daf7d7e0cc8a9cdc3f34fbd6e36197d9');\n\nconst Hit = ({\n  hit\n}) => /*#__PURE__*/_jsxDEV(\"p\", {\n  children: /*#__PURE__*/_jsxDEV(Highlight, {\n    attribute: \"name\",\n    hit: hit,\n    tagName: \"name\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 3\n}, this);\n\n_c = Hit;\n\nconst App = () => /*#__PURE__*/_jsxDEV(InstantSearch, {\n  indexName: \"furniture_records\",\n  searchClient: searchClient,\n  children: [/*#__PURE__*/_jsxDEV(SearchBox, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(StaticRefinementList, {\n    attribute: \"furniture_records\",\n    values: [{\n      label: 'iPad',\n      value: 'iPad'\n    }, {\n      label: 'iPhone',\n      value: 'iPhone'\n    }]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Hits, {\n    hitComponent: Hit\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 18,\n  columnNumber: 3\n}, this);\n\n_c2 = App;\nconst StaticRefinementList = connectRefinementList(_c3 = ({\n  values,\n  currentRefinement,\n  items,\n  refine\n}) => /*#__PURE__*/_jsxDEV(\"ul\", {\n  className: \"ais-RefinementList-list\",\n  children: values.map(staticItem => {\n    const {\n      isRefined\n    } = items.find(item => item.label === staticItem.label) || {\n      isRefined: false\n    };\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          value: staticItem.value,\n          checked: isRefined,\n          onChange: event => {\n            const value = event.currentTarget.value;\n            const next = currentRefinement.includes(value) ? currentRefinement.filter(current => current !== value) : currentRefinement.concat(value);\n            refine(next);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this), staticItem.label]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)\n    }, staticItem.value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this);\n  })\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 34,\n  columnNumber: 5\n}, this));\n_c4 = StaticRefinementList;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Hit\");\n$RefreshReg$(_c2, \"App\");\n$RefreshReg$(_c3, \"StaticRefinementList$connectRefinementList\");\n$RefreshReg$(_c4, \"StaticRefinementList\");","map":{"version":3,"sources":["/Users/adil/Documents/GitHub/furniture-front/src/App.js"],"names":["algoliasearch","InstantSearch","SearchBox","Hits","Highlight","connectRefinementList","searchClient","Hit","hit","App","label","value","StaticRefinementList","values","currentRefinement","items","refine","map","staticItem","isRefined","find","item","event","currentTarget","next","includes","filter","current","concat"],"mappings":";AAAA,OAAOA,aAAP,MAA0B,oBAA1B;AACA,SAASC,aAAT,EAAwBC,SAAxB,EAAmCC,IAAnC,EAAyCC,SAAzC,EAAoDC,qBAApD,QAAiF,yBAAjF,C,CAEA;AACA;AACA;AACA;;;AAEA,MAAMC,YAAY,GAAGN,aAAa,CAAC,YAAD,EAAe,kCAAf,CAAlC;;AAEA,MAAMO,GAAG,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBACV;AAAA,yBACE,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,MAArB;AAA4B,IAAA,GAAG,EAAEA,GAAjC;AAAsC,IAAA,OAAO,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMD,G;;AAMN,MAAME,GAAG,GAAG,mBACV,QAAC,aAAD;AAAe,EAAA,SAAS,EAAC,mBAAzB;AAA6C,EAAA,YAAY,EAAEH,YAA3D;AAAA,0BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,UADF,eAGE,QAAC,oBAAD;AACE,IAAA,SAAS,EAAC,mBADZ;AAEE,IAAA,MAAM,EAAE,CACN;AAAEI,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,KAAK,EAAE;AAAxB,KADM,EAEN;AAAED,MAAAA,KAAK,EAAE,QAAT;AAAmBC,MAAAA,KAAK,EAAE;AAA1B,KAFM;AAFV;AAAA;AAAA;AAAA;AAAA,UAHF,eAUE,QAAC,IAAD;AAAM,IAAA,YAAY,EAAEJ;AAApB;AAAA;AAAA;AAAA;AAAA,UAVF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;MAAME,G;AAeN,MAAMG,oBAAoB,GAAGP,qBAAqB,OAChD,CAAC;AAAEQ,EAAAA,MAAF;AAAUC,EAAAA,iBAAV;AAA6BC,EAAAA,KAA7B;AAAoCC,EAAAA;AAApC,CAAD,kBACE;AAAI,EAAA,SAAS,EAAC,yBAAd;AAAA,YACGH,MAAM,CAACI,GAAP,CAAWC,UAAU,IAAI;AACxB,UAAM;AAAEC,MAAAA;AAAF,QAAgBJ,KAAK,CAACK,IAAN,CACpBC,IAAI,IAAIA,IAAI,CAACX,KAAL,KAAeQ,UAAU,CAACR,KADd,KAEjB;AACHS,MAAAA,SAAS,EAAE;AADR,KAFL;AAMA,wBACE;AAAA,6BACE;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,KAAK,EAAED,UAAU,CAACP,KAFpB;AAGE,UAAA,OAAO,EAAEQ,SAHX;AAIE,UAAA,QAAQ,EAAEG,KAAK,IAAI;AACjB,kBAAMX,KAAK,GAAGW,KAAK,CAACC,aAAN,CAAoBZ,KAAlC;AACA,kBAAMa,IAAI,GAAGV,iBAAiB,CAACW,QAAlB,CAA2Bd,KAA3B,IACTG,iBAAiB,CAACY,MAAlB,CAAyBC,OAAO,IAAIA,OAAO,KAAKhB,KAAhD,CADS,GAETG,iBAAiB,CAACc,MAAlB,CAAyBjB,KAAzB,CAFJ;AAIAK,YAAAA,MAAM,CAACQ,IAAD,CAAN;AACD;AAXH;AAAA;AAAA;AAAA;AAAA,gBADF,EAcGN,UAAU,CAACR,KAdd;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,OAASQ,UAAU,CAACP,KAApB;AAAA;AAAA;AAAA;AAAA,YADF;AAoBD,GA3BA;AADH;AAAA;AAAA;AAAA;AAAA,QAF8C,CAAlD;MAAMC,oB;AAoCN,eAAeH,GAAf","sourcesContent":["import algoliasearch from 'algoliasearch/lite';\nimport { InstantSearch, SearchBox, Hits, Highlight, connectRefinementList } from 'react-instantsearch-dom';\n\n// const searchClient = algoliasearch(\n//   'GF9DTO0HM0',\n//   'daf7d7e0cc8a9cdc3f34fbd6e36197d9'\n// );\n\nconst searchClient = algoliasearch('GF9DTO0HM0', 'daf7d7e0cc8a9cdc3f34fbd6e36197d9');\n\nconst Hit = ({ hit }) => (\n  <p>\n    <Highlight attribute=\"name\" hit={hit} tagName=\"name\" />\n  </p>\n);\n\nconst App = () => (\n  <InstantSearch indexName=\"furniture_records\" searchClient={searchClient}>\n    <SearchBox />\n\n    <StaticRefinementList\n      attribute=\"furniture_records\"\n      values={[\n        { label: 'iPad', value: 'iPad' },\n        { label: 'iPhone', value: 'iPhone' },\n      ]}\n    />\n    <Hits hitComponent={Hit} />\n  </InstantSearch>\n);\n\nconst StaticRefinementList = connectRefinementList(\n  ({ values, currentRefinement, items, refine }) => (\n    <ul className=\"ais-RefinementList-list\">\n      {values.map(staticItem => {\n        const { isRefined } = items.find(\n          item => item.label === staticItem.label\n        ) || {\n          isRefined: false,\n        };\n\n        return (\n          <li key={staticItem.value}>\n            <label>\n              <input\n                type=\"checkbox\"\n                value={staticItem.value}\n                checked={isRefined}\n                onChange={event => {\n                  const value = event.currentTarget.value;\n                  const next = currentRefinement.includes(value)\n                    ? currentRefinement.filter(current => current !== value)\n                    : currentRefinement.concat(value);\n\n                  refine(next);\n                }}\n              />\n              {staticItem.label}\n            </label>\n          </li>\n        );\n      })}\n    </ul>\n  )\n);\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}