{"ast":null,"code":"import \"vue\";\nimport \"../util/vue-compat/index-2.js\";\nimport { parseAlgoliaHit as t } from \"../util/parseAlgoliaHit.js\";\nvar e = {\n  functional: !0,\n  render: function (t, e) {\n    return e.slots().default;\n  }\n};\nexport default {\n  render: function () {\n    var t = this,\n        e = t.$createElement,\n        i = t._self._c || e;\n    return i(\"span\", {\n      class: t.suit()\n    }, t._l(t.parsedHighlights, function (e, r) {\n      var a = e.value,\n          g = e.isHighlighted;\n      return i(g ? t.highlightedTagName : t.TextNode, {\n        key: r,\n        tag: \"component\",\n        class: [g && t.suit(\"highlighted\")]\n      }, [t._v(t._s(a))]);\n    }), 1);\n  },\n  staticRenderFns: [],\n  name: \"AisHighlighter\",\n  props: {\n    hit: {\n      type: Object,\n      required: !0\n    },\n    attribute: {\n      type: String,\n      required: !0\n    },\n    highlightedTagName: {\n      type: String,\n      default: \"mark\"\n    },\n    suit: {\n      type: Function,\n      required: !0\n    },\n    highlightProperty: {\n      type: String,\n      required: !0\n    },\n    preTag: {\n      type: String,\n      required: !0\n    },\n    postTag: {\n      type: String,\n      required: !0\n    }\n  },\n  data: function () {\n    return {\n      TextNode: e\n    };\n  },\n  computed: {\n    parsedHighlights: function () {\n      return t({\n        attribute: this.attribute,\n        hit: this.hit,\n        highlightProperty: this.highlightProperty,\n        preTag: this.preTag,\n        postTag: this.postTag\n      });\n    }\n  }\n};","map":{"version":3,"sources":["../../../../src/components/Highlighter.vue"],"names":["const","TextNode","functional","render","createElement","context","slots","default","name","props","hit","type","Object","required","attribute","String","highlightedTagName","suit","Function","highlightProperty","preTag","postTag","data","computed","parsedHighlights","parseAlgoliaHit","this"],"mappings":"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","sourcesContent":["<template>\n  <span :class=\"suit()\">\n    <component\n      v-for=\"({ value, isHighlighted }, index) in parsedHighlights\"\n      :class=\"[isHighlighted && suit('highlighted')]\"\n      :key=\"index\"\n      :is=\"isHighlighted ? highlightedTagName : TextNode\"\n    >{{ value }}</component>\n  </span>\n</template>\n\n<script>\nimport { isVue3 } from '../util/vue-compat';\nimport { parseAlgoliaHit } from '../util/parseAlgoliaHit';\n\nconst TextNode = isVue3\n  ? (props, context) => context.slots.default()\n  : {\n      functional: true,\n      render(createElement, context) {\n        const slots = context.slots();\n        return slots.default;\n      },\n    };\n\nexport default {\n  name: 'AisHighlighter',\n  props: {\n    hit: {\n      type: Object,\n      required: true,\n    },\n    attribute: {\n      type: String,\n      required: true,\n    },\n    highlightedTagName: {\n      type: String,\n      default: 'mark',\n    },\n    suit: {\n      type: Function,\n      required: true,\n    },\n    highlightProperty: {\n      type: String,\n      required: true,\n    },\n    preTag: {\n      type: String,\n      required: true,\n    },\n    postTag: {\n      type: String,\n      required: true,\n    },\n  },\n  data() {\n    return { TextNode };\n  },\n  computed: {\n    parsedHighlights() {\n      return parseAlgoliaHit({\n        attribute: this.attribute,\n        hit: this.hit,\n        highlightProperty: this.highlightProperty,\n        preTag: this.preTag,\n        postTag: this.postTag,\n      });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}