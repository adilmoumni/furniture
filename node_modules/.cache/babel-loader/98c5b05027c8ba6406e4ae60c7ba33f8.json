{"ast":null,"code":"import noop from './noop';\n/**\n * Logs a warning when this function is called, in development environment only.\n */\n\nvar deprecate = function deprecate(fn, message) {\n  return fn;\n};\n/**\n * Logs a warning\n * This is used to log issues in development environment only.\n */\n\n\nvar warn = noop;\n/**\n * Logs a warning if the condition is not met.\n * This is used to log issues in development environment only.\n */\n\nvar _warning = noop;\n\nif (process.env.NODE_ENV === 'development') {\n  warn = function warn(message) {\n    // eslint-disable-next-line no-console\n    console.warn(\"[InstantSearch.js]: \".concat(message.trim()));\n  };\n\n  deprecate = function deprecate(fn, message) {\n    var hasAlreadyPrinted = false;\n    return function () {\n      if (!hasAlreadyPrinted) {\n        hasAlreadyPrinted = true;\n        warn(message);\n      }\n\n      return fn.apply(void 0, arguments);\n    };\n  };\n\n  _warning = function warning(condition, message) {\n    if (condition) {\n      return;\n    }\n\n    var hasAlreadyPrinted = _warning.cache[message];\n\n    if (!hasAlreadyPrinted) {\n      _warning.cache[message] = true;\n      warn(message);\n    }\n  };\n\n  _warning.cache = {};\n}\n\nexport { warn, deprecate, _warning as warning };","map":{"version":3,"sources":["/Users/adil/Documents/GitHub/furniture-front/node_modules/instantsearch.js/es/lib/utils/logger.js"],"names":["noop","deprecate","fn","message","warn","_warning","process","env","NODE_ENV","console","concat","trim","hasAlreadyPrinted","apply","arguments","warning","condition","cache"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,QAAjB;AAEA;AACA;AACA;;AACA,IAAIC,SAAS,GAAG,SAASA,SAAT,CAAmBC,EAAnB,EAAuBC,OAAvB,EAAgC;AAC9C,SAAOD,EAAP;AACD,CAFD;AAGA;AACA;AACA;AACA;;;AAGA,IAAIE,IAAI,GAAGJ,IAAX;AACA;AACA;AACA;AACA;;AAEA,IAAIK,QAAQ,GAAGL,IAAf;;AAEA,IAAIM,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CJ,EAAAA,IAAI,GAAG,SAASA,IAAT,CAAcD,OAAd,EAAuB;AAC5B;AACAM,IAAAA,OAAO,CAACL,IAAR,CAAa,uBAAuBM,MAAvB,CAA8BP,OAAO,CAACQ,IAAR,EAA9B,CAAb;AACD,GAHD;;AAKAV,EAAAA,SAAS,GAAG,SAASA,SAAT,CAAmBC,EAAnB,EAAuBC,OAAvB,EAAgC;AAC1C,QAAIS,iBAAiB,GAAG,KAAxB;AACA,WAAO,YAAY;AACjB,UAAI,CAACA,iBAAL,EAAwB;AACtBA,QAAAA,iBAAiB,GAAG,IAApB;AACAR,QAAAA,IAAI,CAACD,OAAD,CAAJ;AACD;;AAED,aAAOD,EAAE,CAACW,KAAH,CAAS,KAAK,CAAd,EAAiBC,SAAjB,CAAP;AACD,KAPD;AAQD,GAVD;;AAYAT,EAAAA,QAAQ,GAAG,SAASU,OAAT,CAAiBC,SAAjB,EAA4Bb,OAA5B,EAAqC;AAC9C,QAAIa,SAAJ,EAAe;AACb;AACD;;AAED,QAAIJ,iBAAiB,GAAGP,QAAQ,CAACY,KAAT,CAAed,OAAf,CAAxB;;AAEA,QAAI,CAACS,iBAAL,EAAwB;AACtBP,MAAAA,QAAQ,CAACY,KAAT,CAAed,OAAf,IAA0B,IAA1B;AACAC,MAAAA,IAAI,CAACD,OAAD,CAAJ;AACD;AACF,GAXD;;AAaAE,EAAAA,QAAQ,CAACY,KAAT,GAAiB,EAAjB;AACD;;AAED,SAASb,IAAT,EAAeH,SAAf,EAA0BI,QAAQ,IAAIU,OAAtC","sourcesContent":["import noop from './noop';\n\n/**\n * Logs a warning when this function is called, in development environment only.\n */\nvar deprecate = function deprecate(fn, message) {\n  return fn;\n};\n/**\n * Logs a warning\n * This is used to log issues in development environment only.\n */\n\n\nvar warn = noop;\n/**\n * Logs a warning if the condition is not met.\n * This is used to log issues in development environment only.\n */\n\nvar _warning = noop;\n\nif (process.env.NODE_ENV === 'development') {\n  warn = function warn(message) {\n    // eslint-disable-next-line no-console\n    console.warn(\"[InstantSearch.js]: \".concat(message.trim()));\n  };\n\n  deprecate = function deprecate(fn, message) {\n    var hasAlreadyPrinted = false;\n    return function () {\n      if (!hasAlreadyPrinted) {\n        hasAlreadyPrinted = true;\n        warn(message);\n      }\n\n      return fn.apply(void 0, arguments);\n    };\n  };\n\n  _warning = function warning(condition, message) {\n    if (condition) {\n      return;\n    }\n\n    var hasAlreadyPrinted = _warning.cache[message];\n\n    if (!hasAlreadyPrinted) {\n      _warning.cache[message] = true;\n      warn(message);\n    }\n  };\n\n  _warning.cache = {};\n}\n\nexport { warn, deprecate, _warning as warning };"]},"metadata":{},"sourceType":"module"}