{"ast":null,"code":"import \"vue\";\nimport { Vue2 as e } from \"./vue-compat/index-2.js\";\nimport { warn as t } from \"./warn.js\";\nimport n from \"instantsearch.js/es\";\nimport r from \"algoliasearch-helper\";\nvar i = r.SearchResults,\n    s = r.SearchParameters;\n\nfunction a(t, n) {\n  void 0 === n && (n = {});\n  var r = n.mixins;\n  void 0 === r && (r = []);\n  var i,\n      s = {\n    serverPrefetch: void 0,\n    fetch: void 0,\n    _base: void 0,\n    name: \"ais-ssr-root-component\"\n  };\n  return s.router = t.$router, s.store = t.$store, (i = new (t.$vnode ? t.$vnode.componentOptions.Ctor.extend(s) : e.component(Object.assign({}, t.$options, s)))({\n    propsData: t.$options.propsData,\n    mixins: [].concat(r)\n  })).$slots = t.$slots, i.$root = t.$root, i.$options.serverPrefetch = [], i;\n}\n\nfunction o(e, a, o, c) {\n  var u,\n      d = r(a, o),\n      f = n(e);\n  return f.findResultsState = function (e) {\n    var t,\n        n,\n        r = e.component,\n        i = e.renderToString;\n    if (!i) throw new Error(\"findResultsState requires `renderToString: (component) => Promise<string>` in the first argument.\");\n    return Promise.resolve().then(function () {\n      t = c(r, {\n        mixins: [{\n          created: function () {\n            n = this, this.instantsearch.helper = d, this.instantsearch.mainHelper = d, this.instantsearch.mainIndex.init({\n              instantSearchInstance: this.instantsearch,\n              parent: null,\n              uiState: this.instantsearch._initialUiState\n            });\n          }\n        }]\n      });\n    }).then(function () {\n      return i(t);\n    }).then(function () {\n      return function (e) {\n        return new Promise(function (t, n) {\n          e.searchOnlyWithDerivedHelpers(), e.derivedHelpers[0].on(\"result\", function () {\n            t();\n          }), e.derivedHelpers.forEach(function (e) {\n            return e.on(\"error\", function (e) {\n              n(e);\n            });\n          });\n        });\n      }(d);\n    }).then(function () {\n      var e = {};\n      return function e(t, n) {\n        return n(t), t.getWidgets().forEach(function (t) {\n          \"ais.index\" === t.$$type && (n(t), e(t, n));\n        });\n      }(n.instantsearch.mainIndex, function (t) {\n        e[t.getIndexId()] = t.getResults();\n      }), f.hydrate(e), u = Object.keys(e).map(function (t) {\n        var n = e[t],\n            r = n._state,\n            i = n._rawResults;\n        return [t, {\n          _state: Object.keys(r).reduce(function (e, t) {\n            return e[t] = r[t], e;\n          }, {}),\n          _rawResults: i\n        }];\n      }).reduce(function (e, t) {\n        var n = t[0],\n            r = t[1];\n        return e[n] = r, e;\n      }, {\n        __identifier: \"stringified\"\n      }), f.getState();\n    });\n  }, f.getState = function () {\n    if (!u) throw new Error(\"You need to wait for findResultsState to finish\");\n    return u;\n  }, f.__forceRender = function (e, t) {\n    var n = t.getHelper(),\n        r = f.__initialSearchResults[t.getIndexId()];\n\n    if (r) {\n      var i = r._state;\n      n.state = i, e.render({\n        helper: n,\n        results: r,\n        scopedResults: t.getScopedResults().map(function (e) {\n          return Object.assign(e, {\n            results: f.__initialSearchResults[e.indexId]\n          });\n        }),\n        parent: t,\n        state: i,\n        templatesConfig: {},\n        createURL: t.createURL,\n        instantSearchInstance: f,\n        searchMetadata: {\n          isSearchStalled: !1\n        }\n      });\n    }\n  }, f.hydrate = function (e) {\n    if (e) {\n      var n = \"stringified\" === e.__identifier ? Object.keys(e).reduce(function (t, n) {\n        return \"__identifier\" === n ? t : (t[n] = new i(new s(e[n]._state), e[n]._rawResults), t);\n      }, {}) : e;\n      f.__initialSearchResults = n, f.helper = d, f.mainHelper = d, f.mainIndex.init({\n        instantSearchInstance: f,\n        parent: null,\n        uiState: f._initialUiState\n      });\n    } else t(\"The result of `findResultsState()` needs to be passed to `hydrate()`.\");\n  }, f;\n}\n\nfunction c(e) {\n  void 0 === e && (e = {});\n  var t = e.searchClient,\n      n = e.indexName,\n      r = e.$cloneComponent;\n  if (void 0 === r && (r = a), !t || !n) throw new Error(\"createServerRootMixin requires `searchClient` and `indexName` in the first argument\");\n  var i = o(e, t, n, r);\n  return {\n    provide: function () {\n      return {\n        $_ais_ssrInstantSearchInstance: this.instantsearch\n      };\n    },\n    data: function () {\n      return {\n        instantsearch: i\n      };\n    }\n  };\n}\n\nexport { c as createServerRootMixin };","map":{"version":3,"sources":["../../../../src/util/createServerRootMixin.js"],"names":["walkIndex","indexWidget","visit","getWidgets","forEach","widget","$$type","helper","Promise","resolve","reject","searchOnlyWithDerivedHelpers","derivedHelpers","on","derivedHelper","e","defaultCloneComponent","componentInstance","ref","const","options","serverPrefetch","undefined","fetch","_base","name","app","router","$router","store","$store","$vnode","componentOptions","Ctor","extend","Vue2","component","Object","assign","$options","propsData","mixins","$slots","$root","augmentInstantSearch","instantSearchOptions","searchClient","indexName","cloneComponent","algoliaHelper","search","instantsearch","resultsState","findResultsState","renderToString","Error","renderedComponent","then","created","this","mainHelper","mainIndex","init","instantSearchInstance","parent","uiState","_initialUiState","results","getIndexId","getResults","hydrate","keys","map","indexId","_state","reduce","acc","key","_rawResults","val","__identifier","getState","__forceRender","localHelper","getHelper","__initialSearchResults","state","render","scopedResults","getScopedResults","result","templatesConfig","createURL","searchMetadata","isSearchStalled","warn","initialResults","SearchResults","SearchParameters","createServerRootMixin","$cloneComponent","provide","$_ais_ssrInstantSearchInstance","data"],"mappings":";;;;;AAGA,IAAA,CAAA,GAAA,CAAA,CAAA,aAAA;AAAA,IAAA,CAAA,GAAA,CAAA,CAAA,gBAAA;;AA8BA,SAASgB,CAAT,CAA+BC,CAA/B,EAAkDC,CAAlD,EAAkDA;AAAAA,OAAAA,CAAAA,KAAAA,CAAAA,KAAAA,CAAAA,GAAkB,EAAlBA;AAAkB,MAAA,CAAA,GAAA,CAAA,CAAA,MAAA;AAAA,OAAA,CAAA,KAAA,CAAA,KAAA,CAAA,GAAP,EAAO;AAClEC,MAOIO,CAPJP;AAAAA,MAAMC,CAAAA,GAAU;AACdC,IAAAA,cAAAA,EAAAA,KAAgBC,CADF;AAEdC,IAAAA,KAAAA,EAAAA,KAAOD,CAFO;AAGdE,IAAAA,KAAAA,EAAAA,KAAOF,CAHO;AAIdG,IAAAA,IAAAA,EAAM;AAJQ,GAAhBN;AAyCA,SApBEC,CAAAA,CAAQO,MAARP,GAAiBH,CAAAA,CAAkBW,OAAnCR,EACAA,CAAAA,CAAQS,KAART,GAAgBH,CAAAA,CAAkBa,MADlCV,EACkCU,CAMlCJ,CAAAA,GAAM,KAJWT,CAAAA,CAAkBc,MAAlBd,GACbA,CAAAA,CAAkBc,MAAlBd,CAAyBe,gBAAzBf,CAA0CgB,IAA1ChB,CAA+CiB,MAA/CjB,CAAsDG,CAAtDH,CADaA,GAEbkB,CAAAA,CAAKC,SAALD,CAAeE,MAAAA,CAAOC,MAAPD,CAAc,EAAdA,EAAkBpB,CAAAA,CAAkBsB,QAApCF,EAA8CjB,CAA9CiB,CAAfF,CAEE,EAAa;AACjBK,IAAAA,SAAAA,EAAWvB,CAAAA,CAAkBsB,QAAlBtB,CAA2BuB,SADrB;AAEjBC,IAAAA,MAAAA,EAAQ,GAAA,MAAA,CAAIA,CAAJ;AAFS,GAAb,CAN4BX,EAahCY,MAbgCZ,GAavBb,CAAAA,CAAkByB,MAd7BtB,EAeFM,CAAAA,CAAIiB,KAAJjB,GAAYT,CAAAA,CAAkB0B,KAf5BvB,EAiBAM,CAAAA,CAAIa,QAAJb,CAAaL,cAAbK,GAA8B,EAjB9BN,EAoBKM,CAAP;AAGF;;AAAA,SAASkB,CAAT,CACEC,CADF,EAEEC,CAFF,EAGEC,CAHF,EAIEC,CAJF,EAIEA;AAIA7B,MAGIiC,CAHJjC;AAAAA,MAAMZ,CAAAA,GAAS0C,CAAAA,CAAcH,CAAdG,EAA4BF,CAA5BE,CAAf9B;AAAAA,MACM+B,CAAAA,GAASC,CAAAA,CAAcN,CAAdM,CADfhC;AA+KA,SAnKA+B,CAAAA,CAAOG,gBAAPH,GAA0B,UAAShC,CAAT,EAASA;AAAAA,QAO7BQ,CAP6BR;AAAAA,QAQ7BsC,CAR6BtC;AAAAA,QAQ7BsC,CAAAA,GAAAA,CAAAA,CAAAA,SAR6BtC;AAAAA,QAQ7BsC,CAAAA,GAAAA,CAAAA,CAAAA,cAR6BtC;AACjC,QAAA,CAAKoC,CAAL,EACE,MAAM,IAAIC,KAAJ,CACJ,mGADI,CAAN;AAQF,WAAO/C,OAAAA,CAAQC,OAARD,GACJiD,IADIjD,CACJiD,YAAAA;AACC/B,MAAAA,CAAAA,GAAMsB,CAAAA,CAAeZ,CAAfY,EAA0B;AAC9BP,QAAAA,MAAAA,EAAQ,CACN;AACEiB,UAAAA,OAAAA,EAAAA,YAAAA;AAEEF,YAAAA,CAAAA,GAAoBG,IAApBH,EACAG,KAAKR,aAALQ,CAAmBpD,MAAnBoD,GAA4BpD,CAD5BiD,EAEAG,KAAKR,aAALQ,CAAmBC,UAAnBD,GAAgCpD,CAFhCiD,EAIAG,KAAKR,aAALQ,CAAmBE,SAAnBF,CAA6BG,IAA7BH,CAAkC;AAChCI,cAAAA,qBAAAA,EAAuBJ,KAAKR,aADI;AAEhCa,cAAAA,MAAAA,EAAQ,IAFwB;AAGhCC,cAAAA,OAAAA,EAASN,KAAKR,aAALQ,CAAmBO;AAHI,aAAlCP,CAJAH;AAO8BU;AAVlC,SADM;AADsB,OAA1BlB,CAANtB;AAYsCwC,KAdnC1D,EAqBJiD,IArBIjD,CAqBJiD,YAAAA;AAAAA,aAAWH,CAAAA,CAAe5B,CAAf4B,CAAXG;AAA0B/B,KArBtBlB,EAsBJiD,IAtBIjD,CAsBJiD,YAAAA;AAAAA,aAlHP,UAAsClD,CAAtC,EAAsCA;AACpC,eAAO,IAAIC,OAAJ,CAAIA,UAASC,CAATD,EAAkBE,CAAlBF,EAAkBE;AAC3BH,UAAAA,CAAAA,CAAOI,4BAAPJ,IAGAA,CAAAA,CAAOK,cAAPL,CAAsB,CAAtBA,EAAyBM,EAAzBN,CAA4B,QAA5BA,EAA4B,YAAA;AAC1BE,YAAAA,CAAAA;AAAAA,WADFF,CAHAA,EAOAA,CAAAA,CAAOK,cAAPL,CAAsBH,OAAtBG,CAAsBH,UAAQU,CAARV,EAAQU;AAAAA,mBAC5BA,CAAAA,CAAcD,EAAdC,CAAiB,OAAjBA,EAAiB,UAASC,CAAT,EAASA;AACxBL,cAAAA,CAAAA,CAAOK,CAAPL,CAAAA;AAAOK,aADTD,CAD4BA;AAEnBC,WAFXR,CAPAA;AASWQ,SAVN,CAAP;AAiHgBJ,OAlHlB,CAkH+CJ,CAlH/C,CAkHOkD;AAAwClD,KAtBpCC,EAuBJiD,IAvBIjD,CAuBJiD,YAAAA;AACCtC,UAAMgD,CAAAA,GAAU,EAAhBhD;AA+BA,aA7JR,SAASnB,CAAT,CAAmBC,CAAnB,EAAgCC,CAAhC,EAAgCA;AAG9B,eAFAA,CAAAA,CAAMD,CAANC,CAAAA,EAEOD,CAAAA,CAAYE,UAAZF,GAAyBG,OAAzBH,CAAyBG,UAAQC,CAARD,EAAQC;AAChB,0BAAlBA,CAAAA,CAAOC,MAAW,KACtBJ,CAAAA,CAAMG,CAANH,CAAAA,EACAF,CAAAA,CAAUK,CAAVL,EAAkBE,CAAlBF,CAFsB;AAEJE,SAHbD,CAAP;AA4HMD,OA/HR,CA+HkBwD,CAAAA,CAAkBL,aAAlBK,CAAgCK,SA/HlD,EA+HkDA,UAAWxD,CAAXwD,EAAWxD;AACnD8D,QAAAA,CAAAA,CAAQ9D,CAAAA,CAAO+D,UAAP/D,EAAR8D,CAAAA,GAA+B9D,CAAAA,CAAOgE,UAAPhE,EAA/B8D;AAAsCE,OAhIhD,GAmIQnB,CAAAA,CAAOoB,OAAPpB,CAAeiB,CAAfjB,CAnIR,EAqIQE,CAAAA,GAAef,MAAAA,CAAOkC,IAAPlC,CAAY8B,CAAZ9B,EACZmC,GADYnC,CACZmC,UAAIC,CAAJD,EAAIC;AACH,YAAA,CAAA,GAAgCN,CAAAA,CAAQM,CAARN,CAAhC;AAAA,YAAwCM,CAAAA,GAAAA,CAAAA,CAAAA,MAAxC;AAAA,YAAwCA,CAAAA,GAAAA,CAAAA,CAAAA,WAAxC;AACA,eAAO,CACLA,CADK,EAEL;AAEEC,UAAAA,MAAAA,EAAQrC,MAAAA,CAAOkC,IAAPlC,CAAYqC,CAAZrC,EAAoBsC,MAApBtC,CAAoBsC,UAAQC,CAARD,EAAaE,CAAbF,EAAaE;AAEvC,mBADAD,CAAAA,CAAIC,CAAJD,CAAAA,GAAWF,CAAAA,CAAOG,CAAPH,CAAXE,EACOA,CAAP;AAAOA,WAFDvC,EAGL,EAHKA,CAFV;AAKK,UAAA,WAAA,EACHyC;AANF,SAFK,CAAP;AAQIA,OAXOzC,EAeZsC,MAfYtC,CAeZsC,UACEC,CADFD,EACOzD,CADPyD,EACOzD;AAAAA,YAAAA,CAAAA,GAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AAAAA,YAAAA,CAAAA,GAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AAEJ,eADA0D,CAAAA,CAAIC,CAAJD,CAAAA,GAAWG,CAAXH,EACOA,CAAP;AAAOA,OAlBEvC,EAoBX;AACE2C,QAAAA,YAAAA,EAAc;AADhB,OApBW3C,CArIvB,EA6Jea,CAAAA,CAAO+B,QAAP/B,EAAP;AAAc+B,KAvDXzE,CAAP;AAuDkByE,GAjEpB/B,EAwEAA,CAAAA,CAAO+B,QAAP/B,GAAkB,YAAA;AAChB,QAAA,CAAKE,CAAL,EACE,MAAM,IAAIG,KAAJ,CAAU,iDAAV,CAAN;AAEF,WAAOH,CAAP;AAAOA,GA5ETF,EAuFAA,CAAAA,CAAOgC,aAAPhC,GAAuB,UAAS7C,CAAT,EAAiB2D,CAAjB,EAAiBA;AACtC7C,QAAMgE,CAAAA,GAAcnB,CAAAA,CAAOoB,SAAPpB,EAApB7C;AAAAA,QAEMgD,CAAAA,GAAUjB,CAAAA,CAAOmC,sBAAPnC,CAA8Bc,CAAAA,CAAOI,UAAPJ,EAA9Bd,CAFhB/B;;AAMA,QAAKgD,CAAL,EAAA;AAIAhD,UAAMmE,CAAAA,GAAQnB,CAAAA,CAAQO,MAAtBvD;AAIAgE,MAAAA,CAAAA,CAAYG,KAAZH,GAAoBG,CAApBH,EAEA9E,CAAAA,CAAOkF,MAAPlF,CAAc;AACZE,QAAAA,MAAAA,EAAQ4E,CADI;AACJA,QAAAA,OAAAA,EACRhB,CAFY;AAGZqB,QAAAA,aAAAA,EAAexB,CAAAA,CAAOyB,gBAAPzB,GAA0BQ,GAA1BR,CAA0BQ,UAAIkB,CAAJlB,EAAIkB;AAAAA,iBAC3CrD,MAAAA,CAAOC,MAAPD,CAAcqD,CAAdrD,EAAsB;AACpB8B,YAAAA,OAAAA,EAASjB,CAAAA,CAAOmC,sBAAPnC,CAA8BwC,CAAAA,CAAOjB,OAArCvB;AADW,WAAtBb,CAD2CqD;AAEKjB,SAFnCT,CAHH;AAKsCS,QAAAA,MAAAA,EAGlDT,CARY;AAQZA,QAAAA,KAAAA,EACAsB,CATY;AAUZK,QAAAA,eAAAA,EAAiB,EAVL;AAWZC,QAAAA,SAAAA,EAAW5B,CAAAA,CAAO4B,SAXN;AAYZ7B,QAAAA,qBAAAA,EAAuBb,CAZX;AAaZ2C,QAAAA,cAAAA,EAAgB;AACdC,UAAAA,eAAAA,EAAAA,CAAiB;AADH;AAbJ,OAAdzF,CAFA8E;AAgBqB;AAAA,GAtHvBjC,EAgIAA,CAAAA,CAAOoB,OAAPpB,GAAiB,UAASiB,CAAT,EAASA;AACxB,QAAKA,CAAL,EAAA;AAOAhD,UAAM6E,CAAAA,GACqB,kBAAzB7B,CAAAA,CAAQa,YAAiB,GACrB3C,MAAAA,CAAOkC,IAAPlC,CAAY8B,CAAZ9B,EAAqBsC,MAArBtC,CAAqBsC,UAAQC,CAARD,EAAaF,CAAbE,EAAaF;AAChC,eAAgB,mBAAZA,CAAY,GACPG,CADO,IAGhBA,CAAAA,CAAIH,CAAJG,CAAAA,GAAe,IAAIqB,CAAJ,CACb,IAAIC,CAAJ,CAAqB/B,CAAAA,CAAQM,CAARN,CAAAA,CAAiBO,MAAtC,CADa,EAEbP,CAAAA,CAAQM,CAARN,CAAAA,CAAiBW,WAFJ,CAAfF,EAIOA,CAPS,CAAhB;AAOOA,OARTvC,EASG,EATHA,CADqB,GAWrB8B,CAZNhD;AAcA+B,MAAAA,CAAAA,CAAOmC,sBAAPnC,GAAgC8C,CAAhC9C,EAEAA,CAAAA,CAAO3C,MAAP2C,GAAgB3C,CAFhB2C,EAGAA,CAAAA,CAAOU,UAAPV,GAAoB3C,CAHpB2C,EAKAA,CAAAA,CAAOW,SAAPX,CAAiBY,IAAjBZ,CAAsB;AACpBa,QAAAA,qBAAAA,EAAuBb,CADH;AAEpBc,QAAAA,MAAAA,EAAQ,IAFY;AAGpBC,QAAAA,OAAAA,EAASf,CAAAA,CAAOgB;AAHI,OAAtBhB,CALAA;AAQkBgB,KA7BlB,MACE6B,CAAAA,CACE,uEADFA,CAAAA;AACE,GAnIN7C,EAmKOA,CAAP;AAGK;;AAAA,SAASiD,CAAT,CAA+BtD,CAA/B,EAA+BA;AAAAA,OAAAA,CAAAA,KAAAA,CAAAA,KAAAA,CAAAA,GAAuB,EAAvBA;AACpC,MAAA,CAAA,GAAA,CAAA,CAAA,YAAA;AAAA,MAAA,CAAA,GAAA,CAAA,CAAA,SAAA;AAAA,MAAA,CAAA,GAAA,CAAA,CAAA,eAAA;AAMA,MAAA,KAAA,CAAA,KAAA,CAAA,KAAA,CAAA,GAHoB7B,CAGpB,GAHoBA,CAGf8B,CAHe9B,IAGf8B,CAAiBC,CAAtB,EACE,MAAM,IAAIQ,KAAJ,CACJ,qFADI,CAAN;AAKFpC,MAAM+B,CAAAA,GAASN,CAAAA,CACbC,CADaD,EAEbE,CAFaF,EAGbG,CAHaH,EAIbwD,CAJaxD,CAAfzB;AAwBA,SAfkB;AAChBkF,IAAAA,OAAAA,EAAAA,YAAAA;AACE,aAAO;AACLC,QAAAA,8BAAAA,EAAgC3C,KAAKR;AADhC,OAAP;AACuCA,KAHzB;AAMhBoD,IAAAA,IAAAA,EAAAA,YAAAA;AACE,aAAO;AAGLpD,QAAAA,aAAAA,EAAeD;AAHV,OAAP;AAGiBA;AAVH,GAelB;AALqBA;;AAAAA,SAAAA,CAAAA,IAAAA,qBAAAA","sourcesContent":["import instantsearch from 'instantsearch.js/es';\nimport algoliaHelper from 'algoliasearch-helper';\nimport { isVue3, isVue2, Vue2, createSSRApp } from '../util/vue-compat';\nconst { SearchResults, SearchParameters } = algoliaHelper;\nimport { warn } from './warn';\n\nfunction walkIndex(indexWidget, visit) {\n  visit(indexWidget);\n\n  return indexWidget.getWidgets().forEach(widget => {\n    if (widget.$$type !== 'ais.index') return;\n    visit(widget);\n    walkIndex(widget, visit);\n  });\n}\n\nfunction searchOnlyWithDerivedHelpers(helper) {\n  return new Promise((resolve, reject) => {\n    helper.searchOnlyWithDerivedHelpers();\n\n    // we assume all derived helpers resolve at least in the same tick\n    helper.derivedHelpers[0].on('result', () => {\n      resolve();\n    });\n\n    helper.derivedHelpers.forEach(derivedHelper =>\n      derivedHelper.on('error', e => {\n        reject(e);\n      })\n    );\n  });\n}\n\nfunction defaultCloneComponent(componentInstance, { mixins = [] } = {}) {\n  const options = {\n    serverPrefetch: undefined,\n    fetch: undefined,\n    _base: undefined,\n    name: 'ais-ssr-root-component',\n  };\n\n  let app;\n\n  if (isVue3) {\n    const appOptions = Object.assign({}, componentInstance.$options, options);\n    appOptions.mixins = [...appOptions.mixins, ...mixins];\n    app = createSSRApp(appOptions);\n    if (componentInstance.$router) {\n      app.use(componentInstance.$router);\n    }\n    if (componentInstance.$store) {\n      app.use(componentInstance.$store);\n    }\n  } else {\n    // copy over global Vue APIs\n    options.router = componentInstance.$router;\n    options.store = componentInstance.$store;\n\n    const Extended = componentInstance.$vnode\n      ? componentInstance.$vnode.componentOptions.Ctor.extend(options)\n      : Vue2.component(Object.assign({}, componentInstance.$options, options));\n\n    app = new Extended({\n      propsData: componentInstance.$options.propsData,\n      mixins: [...mixins],\n    });\n  }\n\n  // https://stackoverflow.com/a/48195006/3185307\n  app.$slots = componentInstance.$slots;\n  app.$root = componentInstance.$root;\n  if (isVue2) {\n    app.$options.serverPrefetch = [];\n  }\n\n  return app;\n}\n\nfunction augmentInstantSearch(\n  instantSearchOptions,\n  searchClient,\n  indexName,\n  cloneComponent\n) {\n  /* eslint-disable no-param-reassign */\n\n  const helper = algoliaHelper(searchClient, indexName);\n  const search = instantsearch(instantSearchOptions);\n\n  let resultsState;\n\n  /**\n   * main API for SSR, called in serverPrefetch of a root component which contains instantsearch\n   * @param {Object} props the object including `component` and `renderToString`\n   * @param {Object} props.component the calling component's `this`\n   * @param {Function} props.renderToString the function to render componentInstance to string\n   * @returns {Promise} result of the search, to save for .hydrate\n   */\n  search.findResultsState = function({ component, renderToString }) {\n    if (!renderToString) {\n      throw new Error(\n        'findResultsState requires `renderToString: (component) => Promise<string>` in the first argument.'\n      );\n    }\n\n    let app;\n    let renderedComponent;\n\n    return Promise.resolve()\n      .then(() => {\n        app = cloneComponent(component, {\n          mixins: [\n            {\n              created() {\n                // eslint-disable-next-line consistent-this\n                renderedComponent = this;\n                this.instantsearch.helper = helper;\n                this.instantsearch.mainHelper = helper;\n\n                this.instantsearch.mainIndex.init({\n                  instantSearchInstance: this.instantsearch,\n                  parent: null,\n                  uiState: this.instantsearch._initialUiState,\n                });\n              },\n            },\n          ],\n        });\n      })\n      .then(() => renderToString(app))\n      .then(() => searchOnlyWithDerivedHelpers(helper))\n      .then(() => {\n        const results = {};\n        walkIndex(renderedComponent.instantsearch.mainIndex, widget => {\n          results[widget.getIndexId()] = widget.getResults();\n        });\n\n        search.hydrate(results);\n\n        resultsState = Object.keys(results)\n          .map(indexId => {\n            const { _state, _rawResults } = results[indexId];\n            return [\n              indexId,\n              {\n                // copy just the values of SearchParameters, not the functions\n                _state: Object.keys(_state).reduce((acc, key) => {\n                  acc[key] = _state[key];\n                  return acc;\n                }, {}),\n                _rawResults,\n              },\n            ];\n          })\n          .reduce(\n            (acc, [key, val]) => {\n              acc[key] = val;\n              return acc;\n            },\n            {\n              __identifier: 'stringified',\n            }\n          );\n        return search.getState();\n      });\n  };\n\n  /**\n   * @returns {Promise} result state to serialize and enter into .hydrate\n   */\n  search.getState = function() {\n    if (!resultsState) {\n      throw new Error('You need to wait for findResultsState to finish');\n    }\n    return resultsState;\n  };\n\n  /**\n   * make sure correct data is available in each widget's state.\n   * called in widget mixin with (this.widget, this)\n   *\n   * @param {object} widget The widget instance\n   * @param {object} parent The local parent index\n   * @returns {void}\n   */\n  search.__forceRender = function(widget, parent) {\n    const localHelper = parent.getHelper();\n\n    const results = search.__initialSearchResults[parent.getIndexId()];\n\n    // this happens when a different InstantSearch gets rendered initially,\n    // after the hydrate finished. There's thus no initial results available.\n    if (!results) {\n      return;\n    }\n\n    const state = results._state;\n\n    // helper gets created in init, but that means it doesn't get the injected\n    // parameters, because those are from the lastResults\n    localHelper.state = state;\n\n    widget.render({\n      helper: localHelper,\n      results,\n      scopedResults: parent.getScopedResults().map(result =>\n        Object.assign(result, {\n          results: search.__initialSearchResults[result.indexId],\n        })\n      ),\n      parent,\n      state,\n      templatesConfig: {},\n      createURL: parent.createURL,\n      instantSearchInstance: search,\n      searchMetadata: {\n        isSearchStalled: false,\n      },\n    });\n  };\n\n  /**\n   * Called both in server\n   * @param {object} results a map of indexId: SearchResults\n   * @returns {void}\n   */\n  search.hydrate = function(results) {\n    if (!results) {\n      warn(\n        'The result of `findResultsState()` needs to be passed to `hydrate()`.'\n      );\n      return;\n    }\n\n    const initialResults =\n      results.__identifier === 'stringified'\n        ? Object.keys(results).reduce((acc, indexId) => {\n            if (indexId === '__identifier') {\n              return acc;\n            }\n            acc[indexId] = new SearchResults(\n              new SearchParameters(results[indexId]._state),\n              results[indexId]._rawResults\n            );\n            return acc;\n          }, {})\n        : results;\n\n    search.__initialSearchResults = initialResults;\n\n    search.helper = helper;\n    search.mainHelper = helper;\n\n    search.mainIndex.init({\n      instantSearchInstance: search,\n      parent: null,\n      uiState: search._initialUiState,\n    });\n  };\n\n  /* eslint-enable no-param-reassign */\n  return search;\n}\n\nexport function createServerRootMixin(instantSearchOptions = {}) {\n  const {\n    searchClient,\n    indexName,\n    $cloneComponent = defaultCloneComponent,\n  } = instantSearchOptions;\n\n  if (!searchClient || !indexName) {\n    throw new Error(\n      'createServerRootMixin requires `searchClient` and `indexName` in the first argument'\n    );\n  }\n\n  const search = augmentInstantSearch(\n    instantSearchOptions,\n    searchClient,\n    indexName,\n    $cloneComponent\n  );\n\n  // put this in the user's root Vue instance\n  // we can then reuse that InstantSearch instance seamlessly from `ais-instant-search-ssr`\n  const rootMixin = {\n    provide() {\n      return {\n        $_ais_ssrInstantSearchInstance: this.instantsearch,\n      };\n    },\n    data() {\n      return {\n        // this is in data, so that the real & duplicated render do not share\n        // the same instantsearch instance.\n        instantsearch: search,\n      };\n    },\n  };\n\n  return rootMixin;\n}\n"]},"metadata":{},"sourceType":"module"}