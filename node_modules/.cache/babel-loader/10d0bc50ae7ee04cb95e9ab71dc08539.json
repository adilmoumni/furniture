{"ast":null,"code":"import PropTypes from 'prop-types';\nimport createConnector from '../core/createConnector';\nimport { getResults } from '../core/indexUtils';\nexport default createConnector({\n  displayName: 'AlgoliaDynamicWidgets',\n  defaultProps: {\n    transformItems: function transformItems(items) {\n      return items;\n    }\n  },\n  propTypes: {\n    transformItems: PropTypes.func\n  },\n  getProvidedProps: function getProvidedProps(props, _searchState, searchResults) {\n    var results = getResults(searchResults, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n\n    if (!results) {\n      return {\n        attributesToRender: []\n      };\n    }\n\n    var facetOrder = results.renderingContent && results.renderingContent.facetOrdering && results.renderingContent.facetOrdering.facets && results.renderingContent.facetOrdering.facets.order || [];\n    return {\n      attributesToRender: props.transformItems(facetOrder, {\n        results: results\n      })\n    };\n  }\n});","map":{"version":3,"sources":["/Users/adil/Documents/GitHub/furniture-front/node_modules/react-instantsearch-core/dist/es/connectors/connectDynamicWidgets.js"],"names":["PropTypes","createConnector","getResults","displayName","defaultProps","transformItems","items","propTypes","func","getProvidedProps","props","_searchState","searchResults","results","ais","contextValue","multiIndexContext","indexContextValue","attributesToRender","facetOrder","renderingContent","facetOrdering","facets","order"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,eAAeD,eAAe,CAAC;AAC7BE,EAAAA,WAAW,EAAE,uBADgB;AAE7BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,cAAc,EAAE,SAASA,cAAT,CAAwBC,KAAxB,EAA+B;AAC7C,aAAOA,KAAP;AACD;AAHW,GAFe;AAO7BC,EAAAA,SAAS,EAAE;AACTF,IAAAA,cAAc,EAAEL,SAAS,CAACQ;AADjB,GAPkB;AAU7BC,EAAAA,gBAAgB,EAAE,SAASA,gBAAT,CAA0BC,KAA1B,EAAiCC,YAAjC,EAA+CC,aAA/C,EAA8D;AAC9E,QAAIC,OAAO,GAAGX,UAAU,CAACU,aAAD,EAAgB;AACtCE,MAAAA,GAAG,EAAEJ,KAAK,CAACK,YAD2B;AAEtCC,MAAAA,iBAAiB,EAAEN,KAAK,CAACO;AAFa,KAAhB,CAAxB;;AAKA,QAAI,CAACJ,OAAL,EAAc;AACZ,aAAO;AACLK,QAAAA,kBAAkB,EAAE;AADf,OAAP;AAGD;;AAED,QAAIC,UAAU,GAAGN,OAAO,CAACO,gBAAR,IAA4BP,OAAO,CAACO,gBAAR,CAAyBC,aAArD,IAAsER,OAAO,CAACO,gBAAR,CAAyBC,aAAzB,CAAuCC,MAA7G,IAAuHT,OAAO,CAACO,gBAAR,CAAyBC,aAAzB,CAAuCC,MAAvC,CAA8CC,KAArK,IAA8K,EAA/L;AACA,WAAO;AACLL,MAAAA,kBAAkB,EAAER,KAAK,CAACL,cAAN,CAAqBc,UAArB,EAAiC;AACnDN,QAAAA,OAAO,EAAEA;AAD0C,OAAjC;AADf,KAAP;AAKD;AA5B4B,CAAD,CAA9B","sourcesContent":["import PropTypes from 'prop-types';\nimport createConnector from '../core/createConnector';\nimport { getResults } from '../core/indexUtils';\nexport default createConnector({\n  displayName: 'AlgoliaDynamicWidgets',\n  defaultProps: {\n    transformItems: function transformItems(items) {\n      return items;\n    }\n  },\n  propTypes: {\n    transformItems: PropTypes.func\n  },\n  getProvidedProps: function getProvidedProps(props, _searchState, searchResults) {\n    var results = getResults(searchResults, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n\n    if (!results) {\n      return {\n        attributesToRender: []\n      };\n    }\n\n    var facetOrder = results.renderingContent && results.renderingContent.facetOrdering && results.renderingContent.facetOrdering.facets && results.renderingContent.facetOrdering.facets.order || [];\n    return {\n      attributesToRender: props.transformItems(facetOrder, {\n        results: results\n      })\n    };\n  }\n});"]},"metadata":{},"sourceType":"module"}