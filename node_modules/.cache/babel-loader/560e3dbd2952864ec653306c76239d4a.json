{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { escapeHits, TAG_PLACEHOLDER, checkRendering, createDocumentationMessageGenerator, createSendEventForHits, noop, warning } from '../../lib/utils';\nvar withUsage = createDocumentationMessageGenerator({\n  name: 'autocomplete',\n  connector: true\n});\n\nvar connectAutocomplete = function connectAutocomplete(renderFn) {\n  var unmountFn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n  checkRendering(renderFn, withUsage());\n  return function (widgetParams) {\n    var _ref = widgetParams || {},\n        _ref$escapeHTML = _ref.escapeHTML,\n        escapeHTML = _ref$escapeHTML === void 0 ? true : _ref$escapeHTML;\n\n    process.env.NODE_ENV === 'development' ? warning(!widgetParams.indices, \"\\nThe option `indices` has been removed from the Autocomplete connector.\\n\\nThe indices to target are now inferred from the widgets tree.\\n\".concat(Array.isArray(widgetParams.indices) ? \"\\nAn alternative would be:\\n\\nconst autocomplete = connectAutocomplete(renderer);\\n\\nsearch.addWidgets([\\n  \".concat(widgetParams.indices.map(function (_ref2) {\n      var value = _ref2.value;\n      return \"index({ indexName: '\".concat(value, \"' }),\");\n    }).join('\\n  '), \"\\n  autocomplete()\\n]);\\n\") : '', \"\\n      \")) : void 0;\n    var connectorState = {};\n    return {\n      $$type: 'ais.autocomplete',\n      init: function init(initOptions) {\n        var instantSearchInstance = initOptions.instantSearchInstance;\n        renderFn(_objectSpread(_objectSpread({}, this.getWidgetRenderState(initOptions)), {}, {\n          instantSearchInstance: instantSearchInstance\n        }), true);\n      },\n      render: function render(renderOptions) {\n        var instantSearchInstance = renderOptions.instantSearchInstance;\n        var renderState = this.getWidgetRenderState(renderOptions);\n        renderState.indices.forEach(function (_ref3) {\n          var sendEvent = _ref3.sendEvent,\n              hits = _ref3.hits;\n          sendEvent('view', hits);\n        });\n        renderFn(_objectSpread(_objectSpread({}, renderState), {}, {\n          instantSearchInstance: instantSearchInstance\n        }), false);\n      },\n      getRenderState: function getRenderState(renderState, renderOptions) {\n        return _objectSpread(_objectSpread({}, renderState), {}, {\n          autocomplete: this.getWidgetRenderState(renderOptions)\n        });\n      },\n      getWidgetRenderState: function getWidgetRenderState(_ref4) {\n        var _this = this;\n\n        var helper = _ref4.helper,\n            scopedResults = _ref4.scopedResults,\n            instantSearchInstance = _ref4.instantSearchInstance;\n\n        if (!connectorState.refine) {\n          connectorState.refine = function (query) {\n            helper.setQuery(query).search();\n          };\n        }\n\n        var indices = scopedResults.map(function (scopedResult) {\n          // We need to escape the hits because highlighting\n          // exposes HTML tags to the end-user.\n          scopedResult.results.hits = escapeHTML ? escapeHits(scopedResult.results.hits) : scopedResult.results.hits;\n          var sendEvent = createSendEventForHits({\n            instantSearchInstance: instantSearchInstance,\n            index: scopedResult.results.index,\n            widgetType: _this.$$type\n          });\n          return {\n            indexId: scopedResult.indexId,\n            indexName: scopedResult.results.index,\n            hits: scopedResult.results.hits,\n            results: scopedResult.results,\n            sendEvent: sendEvent\n          };\n        });\n        return {\n          currentRefinement: helper.state.query || '',\n          indices: indices,\n          refine: connectorState.refine,\n          widgetParams: widgetParams\n        };\n      },\n      getWidgetUiState: function getWidgetUiState(uiState, _ref5) {\n        var searchParameters = _ref5.searchParameters;\n        var query = searchParameters.query || '';\n\n        if (query === '' || uiState && uiState.query === query) {\n          return uiState;\n        }\n\n        return _objectSpread(_objectSpread({}, uiState), {}, {\n          query: query\n        });\n      },\n      getWidgetSearchParameters: function getWidgetSearchParameters(searchParameters, _ref6) {\n        var uiState = _ref6.uiState;\n        var parameters = {\n          query: uiState.query || ''\n        };\n\n        if (!escapeHTML) {\n          return searchParameters.setQueryParameters(parameters);\n        }\n\n        return searchParameters.setQueryParameters(_objectSpread(_objectSpread({}, parameters), TAG_PLACEHOLDER));\n      },\n      dispose: function dispose(_ref7) {\n        var state = _ref7.state;\n        unmountFn();\n        var stateWithoutQuery = state.setQueryParameter('query', undefined);\n\n        if (!escapeHTML) {\n          return stateWithoutQuery;\n        }\n\n        return stateWithoutQuery.setQueryParameters(Object.keys(TAG_PLACEHOLDER).reduce(function (acc, key) {\n          return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, key, undefined));\n        }, {}));\n      }\n    };\n  };\n};\n\nexport default connectAutocomplete;","map":{"version":3,"sources":["/Users/adil/Documents/GitHub/furniture-front/node_modules/instantsearch.js/es/connectors/autocomplete/connectAutocomplete.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","escapeHits","TAG_PLACEHOLDER","checkRendering","createDocumentationMessageGenerator","createSendEventForHits","noop","warning","withUsage","name","connector","connectAutocomplete","renderFn","unmountFn","undefined","widgetParams","_ref","_ref$escapeHTML","escapeHTML","process","env","NODE_ENV","indices","concat","Array","isArray","map","_ref2","join","connectorState","$$type","init","initOptions","instantSearchInstance","getWidgetRenderState","render","renderOptions","renderState","_ref3","sendEvent","hits","getRenderState","autocomplete","_ref4","_this","helper","scopedResults","refine","query","setQuery","search","scopedResult","results","index","widgetType","indexId","indexName","currentRefinement","state","getWidgetUiState","uiState","_ref5","searchParameters","getWidgetSearchParameters","_ref6","parameters","setQueryParameters","dispose","_ref7","stateWithoutQuery","setQueryParameter","reduce","acc"],"mappings":"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","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { escapeHits, TAG_PLACEHOLDER, checkRendering, createDocumentationMessageGenerator, createSendEventForHits, noop, warning } from '../../lib/utils';\nvar withUsage = createDocumentationMessageGenerator({\n  name: 'autocomplete',\n  connector: true\n});\n\nvar connectAutocomplete = function connectAutocomplete(renderFn) {\n  var unmountFn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n  checkRendering(renderFn, withUsage());\n  return function (widgetParams) {\n    var _ref = widgetParams || {},\n        _ref$escapeHTML = _ref.escapeHTML,\n        escapeHTML = _ref$escapeHTML === void 0 ? true : _ref$escapeHTML;\n\n    process.env.NODE_ENV === 'development' ? warning(!widgetParams.indices, \"\\nThe option `indices` has been removed from the Autocomplete connector.\\n\\nThe indices to target are now inferred from the widgets tree.\\n\".concat(Array.isArray(widgetParams.indices) ? \"\\nAn alternative would be:\\n\\nconst autocomplete = connectAutocomplete(renderer);\\n\\nsearch.addWidgets([\\n  \".concat(widgetParams.indices.map(function (_ref2) {\n      var value = _ref2.value;\n      return \"index({ indexName: '\".concat(value, \"' }),\");\n    }).join('\\n  '), \"\\n  autocomplete()\\n]);\\n\") : '', \"\\n      \")) : void 0;\n    var connectorState = {};\n    return {\n      $$type: 'ais.autocomplete',\n      init: function init(initOptions) {\n        var instantSearchInstance = initOptions.instantSearchInstance;\n        renderFn(_objectSpread(_objectSpread({}, this.getWidgetRenderState(initOptions)), {}, {\n          instantSearchInstance: instantSearchInstance\n        }), true);\n      },\n      render: function render(renderOptions) {\n        var instantSearchInstance = renderOptions.instantSearchInstance;\n        var renderState = this.getWidgetRenderState(renderOptions);\n        renderState.indices.forEach(function (_ref3) {\n          var sendEvent = _ref3.sendEvent,\n              hits = _ref3.hits;\n          sendEvent('view', hits);\n        });\n        renderFn(_objectSpread(_objectSpread({}, renderState), {}, {\n          instantSearchInstance: instantSearchInstance\n        }), false);\n      },\n      getRenderState: function getRenderState(renderState, renderOptions) {\n        return _objectSpread(_objectSpread({}, renderState), {}, {\n          autocomplete: this.getWidgetRenderState(renderOptions)\n        });\n      },\n      getWidgetRenderState: function getWidgetRenderState(_ref4) {\n        var _this = this;\n\n        var helper = _ref4.helper,\n            scopedResults = _ref4.scopedResults,\n            instantSearchInstance = _ref4.instantSearchInstance;\n\n        if (!connectorState.refine) {\n          connectorState.refine = function (query) {\n            helper.setQuery(query).search();\n          };\n        }\n\n        var indices = scopedResults.map(function (scopedResult) {\n          // We need to escape the hits because highlighting\n          // exposes HTML tags to the end-user.\n          scopedResult.results.hits = escapeHTML ? escapeHits(scopedResult.results.hits) : scopedResult.results.hits;\n          var sendEvent = createSendEventForHits({\n            instantSearchInstance: instantSearchInstance,\n            index: scopedResult.results.index,\n            widgetType: _this.$$type\n          });\n          return {\n            indexId: scopedResult.indexId,\n            indexName: scopedResult.results.index,\n            hits: scopedResult.results.hits,\n            results: scopedResult.results,\n            sendEvent: sendEvent\n          };\n        });\n        return {\n          currentRefinement: helper.state.query || '',\n          indices: indices,\n          refine: connectorState.refine,\n          widgetParams: widgetParams\n        };\n      },\n      getWidgetUiState: function getWidgetUiState(uiState, _ref5) {\n        var searchParameters = _ref5.searchParameters;\n        var query = searchParameters.query || '';\n\n        if (query === '' || uiState && uiState.query === query) {\n          return uiState;\n        }\n\n        return _objectSpread(_objectSpread({}, uiState), {}, {\n          query: query\n        });\n      },\n      getWidgetSearchParameters: function getWidgetSearchParameters(searchParameters, _ref6) {\n        var uiState = _ref6.uiState;\n        var parameters = {\n          query: uiState.query || ''\n        };\n\n        if (!escapeHTML) {\n          return searchParameters.setQueryParameters(parameters);\n        }\n\n        return searchParameters.setQueryParameters(_objectSpread(_objectSpread({}, parameters), TAG_PLACEHOLDER));\n      },\n      dispose: function dispose(_ref7) {\n        var state = _ref7.state;\n        unmountFn();\n        var stateWithoutQuery = state.setQueryParameter('query', undefined);\n\n        if (!escapeHTML) {\n          return stateWithoutQuery;\n        }\n\n        return stateWithoutQuery.setQueryParameters(Object.keys(TAG_PLACEHOLDER).reduce(function (acc, key) {\n          return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, key, undefined));\n        }, {}));\n      }\n    };\n  };\n};\n\nexport default connectAutocomplete;"]},"metadata":{},"sourceType":"module"}