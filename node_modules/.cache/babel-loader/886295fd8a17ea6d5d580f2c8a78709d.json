{"ast":null,"code":"import { createSuitMixin as t } from \"../mixins/suit.js\";\nimport { createWidgetMixin as e } from \"../mixins/widget.js\";\nimport { connectRelevantSort as s } from \"instantsearch.js/es/connectors\";\nexport default {\n  render: function () {\n    var t = this,\n        e = t.$createElement,\n        s = t._self._c || e;\n    return t.state && t.state.isVirtualReplica ? s(\"div\", {\n      class: t.suit()\n    }, [t._t(\"default\", [s(\"div\", {\n      class: t.suit(\"text\")\n    }, [t._t(\"text\", null, {\n      isRelevantSorted: t.state.isRelevantSorted\n    })], 2), t._v(\" \"), s(\"button\", {\n      class: t.suit(\"button\"),\n      attrs: {\n        type: \"button\"\n      },\n      on: {\n        click: function (e) {\n          return t.refine();\n        }\n      }\n    }, [t._t(\"button\", [t._v(t._s(t.state.isRelevantSorted ? \"See all results\" : \"See relevant results\"))], {\n      isRelevantSorted: t.state.isRelevantSorted\n    })], 2)], {\n      isRelevantSorted: t.state.isRelevantSorted,\n      refine: t.state.refine\n    })], 2) : t._e();\n  },\n  staticRenderFns: [],\n  name: \"AisRelevantSort\",\n  mixins: [t({\n    name: \"RelevantSort\"\n  }), e({\n    connector: s\n  })],\n  methods: {\n    refine: function () {\n      this.state.isRelevantSorted ? this.state.refine(0) : this.state.refine(void 0);\n    }\n  }\n};","map":{"version":3,"sources":["../../../../src/components/RelevantSort.vue"],"names":["render","name","mixins","createSuitMixin","createWidgetMixin","connector","connectRelevantSort","methods","refine","this","state","isRelevantSorted","undefined"],"mappings":";;;eAkCe;AAACA,EAAAA,MAAAA,EAAAA,YAAAA;AAAAA,QAAAA,CAAAA,GAAAA,IAAAA;AAAAA,QAAAA,CAAAA,GAAAA,CAAAA,CAAAA,cAAAA;AAAAA,QAAAA,CAAAA,GAAAA,CAAAA,CAAAA,KAAAA,CAAAA,EAAAA,IAAAA,CAAAA;AAAAA,WAAAA,CAAAA,CAAAA,KAAAA,IAAAA,CAAAA,CAAAA,KAAAA,CAAAA,gBAAAA,GAAAA,CAAAA,CAAAA,KAAAA,EAAAA;AAAAA,MAAAA,KAAAA,EAAAA,CAAAA,CAAAA,IAAAA;AAAAA,KAAAA,EAAAA,CAAAA,CAAAA,CAAAA,EAAAA,CAAAA,SAAAA,EAAAA,CAAAA,CAAAA,CAAAA,KAAAA,EAAAA;AAAAA,MAAAA,KAAAA,EAAAA,CAAAA,CAAAA,IAAAA,CAAAA,MAAAA;AAAAA,KAAAA,EAAAA,CAAAA,CAAAA,CAAAA,EAAAA,CAAAA,MAAAA,EAAAA,IAAAA,EAAAA;AAAAA,MAAAA,gBAAAA,EAAAA,CAAAA,CAAAA,KAAAA,CAAAA;AAAAA,KAAAA,CAAAA,CAAAA,EAAAA,CAAAA,CAAAA,EAAAA,CAAAA,CAAAA,EAAAA,CAAAA,GAAAA,CAAAA,EAAAA,CAAAA,CAAAA,QAAAA,EAAAA;AAAAA,MAAAA,KAAAA,EAAAA,CAAAA,CAAAA,IAAAA,CAAAA,QAAAA,CAAAA;AAAAA,MAAAA,KAAAA,EAAAA;AAAAA,QAAAA,IAAAA,EAAAA;AAAAA,OAAAA;AAAAA,MAAAA,EAAAA,EAAAA;AAAAA,QAAAA,KAAAA,EAAAA,UAAAA,CAAAA,EAAAA;AAAAA,iBAAAA,CAAAA,CAAAA,MAAAA,EAAAA;AAAAA;AAAAA;AAAAA,KAAAA,EAAAA,CAAAA,CAAAA,CAAAA,EAAAA,CAAAA,QAAAA,EAAAA,CAAAA,CAAAA,CAAAA,EAAAA,CAAAA,CAAAA,CAAAA,EAAAA,CAAAA,CAAAA,CAAAA,KAAAA,CAAAA,gBAAAA,GAAAA,iBAAAA,GAAAA,sBAAAA,CAAAA,CAAAA,CAAAA,EAAAA;AAAAA,MAAAA,gBAAAA,EAAAA,CAAAA,CAAAA,KAAAA,CAAAA;AAAAA,KAAAA,CAAAA,CAAAA,EAAAA,CAAAA,CAAAA,CAAAA,EAAAA;AAAAA,MAAAA,gBAAAA,EAAAA,CAAAA,CAAAA,KAAAA,CAAAA,gBAAAA;AAAAA,MAAAA,MAAAA,EAAAA,CAAAA,CAAAA,KAAAA,CAAAA;AAAAA,KAAAA,CAAAA,CAAAA,EAAAA,CAAAA,CAAAA,GAAAA,CAAAA,CAAAA,EAAAA,EAAAA;AAAAA,GAAD;AAACA,EAAAA,eAAAA,EAAAA,EAAD;AACbC,EAAAA,IAAAA,EAAM,iBADO;AAEbC,EAAAA,MAAAA,EAAQ,CACNC,CAAAA,CAAgB;AAAEF,IAAAA,IAAAA,EAAM;AAAR,GAAhBE,CADM,EAENC,CAAAA,CAAkB;AAAEC,IAAAA,SAAAA,EAAWC;AAAb,GAAlBF,CAFM,CAFK;AAMbG,EAAAA,OAAAA,EAAS;AACPC,IAAAA,MAAAA,EAAAA,YAAAA;AACMC,WAAKC,KAALD,CAAWE,gBAAXF,GACFA,KAAKC,KAALD,CAAWD,MAAXC,CAAkB,CAAlBA,CADEA,GAGFA,KAAKC,KAALD,CAAWD,MAAXC,CAAWD,KAAOI,CAAlBH,CAHEA;AAGgBG;AALf;AANI,C","sourcesContent":["<template>\n  <div\n    v-if=\"state && state.isVirtualReplica\"\n    :class=\"suit()\"\n  >\n    <slot\n      :is-relevant-sorted=\"state.isRelevantSorted\"\n      :refine=\"state.refine\"\n    >\n      <div :class=\"suit('text')\">\n        <slot\n          name=\"text\"\n          :is-relevant-sorted=\"state.isRelevantSorted\"\n        />\n      </div>\n      <button\n        type=\"button\"\n        :class=\"suit('button')\"\n        @click=\"refine()\"\n      >\n        <slot\n          name=\"button\"\n          :is-relevant-sorted=\"state.isRelevantSorted\"\n        >{{ state.isRelevantSorted ? 'See all results' : 'See relevant results' }}</slot>\n      </button>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectRelevantSort } from 'instantsearch.js/es/connectors';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisRelevantSort',\n  mixins: [\n    createSuitMixin({ name: 'RelevantSort' }),\n    createWidgetMixin({ connector: connectRelevantSort }),\n  ],\n  methods: {\n    refine() {\n      if (this.state.isRelevantSorted) {\n        this.state.refine(0);\n      } else {\n        this.state.refine(undefined);\n      }\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}