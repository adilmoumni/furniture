{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport createConnector from '../core/createConnector';\nimport { refineValue, getCurrentRefinementValue, getResults } from '../core/indexUtils';\n\nfunction getId() {\n  return 'relevancyStrictness';\n}\n\nfunction getCurrentRefinement(props, searchState, context) {\n  var id = getId();\n  var currentRefinement = getCurrentRefinementValue(props, searchState, context, id);\n  return currentRefinement;\n}\n\nexport default createConnector({\n  displayName: 'AlgoliaRelevantSort',\n  getProvidedProps: function getProvidedProps(props, _searchState, searchResults) {\n    var results = getResults(searchResults, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n\n    if (!results) {\n      return {\n        isVirtualReplica: false,\n        isRelevantSorted: false\n      };\n    }\n\n    return {\n      isVirtualReplica: results.appliedRelevancyStrictness !== undefined,\n      isRelevantSorted: results.appliedRelevancyStrictness !== undefined && results.appliedRelevancyStrictness > 0\n    };\n  },\n  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {\n    return searchParameters.setQueryParameter('relevancyStrictness', getCurrentRefinement(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    }));\n  },\n  refine: function refine(props, searchState, nextRefinement) {\n    var nextValue = _defineProperty({}, getId(), nextRefinement);\n\n    var resetPage = true;\n    return refineValue(searchState, nextValue, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    }, resetPage);\n  }\n});","map":{"version":3,"sources":["/Users/adil/Documents/GitHub/furniture-front/node_modules/react-instantsearch-core/dist/es/connectors/connectRelevantSort.js"],"names":["_defineProperty","createConnector","refineValue","getCurrentRefinementValue","getResults","getId","getCurrentRefinement","props","searchState","context","id","currentRefinement","displayName","getProvidedProps","_searchState","searchResults","results","ais","contextValue","multiIndexContext","indexContextValue","isVirtualReplica","isRelevantSorted","appliedRelevancyStrictness","undefined","getSearchParameters","searchParameters","setQueryParameter","refine","nextRefinement","nextValue","resetPage"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,2CAA5B;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,SAASC,WAAT,EAAsBC,yBAAtB,EAAiDC,UAAjD,QAAmE,oBAAnE;;AAEA,SAASC,KAAT,GAAiB;AACf,SAAO,qBAAP;AACD;;AAED,SAASC,oBAAT,CAA8BC,KAA9B,EAAqCC,WAArC,EAAkDC,OAAlD,EAA2D;AACzD,MAAIC,EAAE,GAAGL,KAAK,EAAd;AACA,MAAIM,iBAAiB,GAAGR,yBAAyB,CAACI,KAAD,EAAQC,WAAR,EAAqBC,OAArB,EAA8BC,EAA9B,CAAjD;AACA,SAAOC,iBAAP;AACD;;AAED,eAAeV,eAAe,CAAC;AAC7BW,EAAAA,WAAW,EAAE,qBADgB;AAE7BC,EAAAA,gBAAgB,EAAE,SAASA,gBAAT,CAA0BN,KAA1B,EAAiCO,YAAjC,EAA+CC,aAA/C,EAA8D;AAC9E,QAAIC,OAAO,GAAGZ,UAAU,CAACW,aAAD,EAAgB;AACtCE,MAAAA,GAAG,EAAEV,KAAK,CAACW,YAD2B;AAEtCC,MAAAA,iBAAiB,EAAEZ,KAAK,CAACa;AAFa,KAAhB,CAAxB;;AAKA,QAAI,CAACJ,OAAL,EAAc;AACZ,aAAO;AACLK,QAAAA,gBAAgB,EAAE,KADb;AAELC,QAAAA,gBAAgB,EAAE;AAFb,OAAP;AAID;;AAED,WAAO;AACLD,MAAAA,gBAAgB,EAAEL,OAAO,CAACO,0BAAR,KAAuCC,SADpD;AAELF,MAAAA,gBAAgB,EAAEN,OAAO,CAACO,0BAAR,KAAuCC,SAAvC,IAAoDR,OAAO,CAACO,0BAAR,GAAqC;AAFtG,KAAP;AAID,GAnB4B;AAoB7BE,EAAAA,mBAAmB,EAAE,SAASA,mBAAT,CAA6BC,gBAA7B,EAA+CnB,KAA/C,EAAsDC,WAAtD,EAAmE;AACtF,WAAOkB,gBAAgB,CAACC,iBAAjB,CAAmC,qBAAnC,EAA0DrB,oBAAoB,CAACC,KAAD,EAAQC,WAAR,EAAqB;AACxGS,MAAAA,GAAG,EAAEV,KAAK,CAACW,YAD6F;AAExGC,MAAAA,iBAAiB,EAAEZ,KAAK,CAACa;AAF+E,KAArB,CAA9E,CAAP;AAID,GAzB4B;AA0B7BQ,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBrB,KAAhB,EAAuBC,WAAvB,EAAoCqB,cAApC,EAAoD;AAC1D,QAAIC,SAAS,GAAG9B,eAAe,CAAC,EAAD,EAAKK,KAAK,EAAV,EAAcwB,cAAd,CAA/B;;AAEA,QAAIE,SAAS,GAAG,IAAhB;AACA,WAAO7B,WAAW,CAACM,WAAD,EAAcsB,SAAd,EAAyB;AACzCb,MAAAA,GAAG,EAAEV,KAAK,CAACW,YAD8B;AAEzCC,MAAAA,iBAAiB,EAAEZ,KAAK,CAACa;AAFgB,KAAzB,EAGfW,SAHe,CAAlB;AAID;AAlC4B,CAAD,CAA9B","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport createConnector from '../core/createConnector';\nimport { refineValue, getCurrentRefinementValue, getResults } from '../core/indexUtils';\n\nfunction getId() {\n  return 'relevancyStrictness';\n}\n\nfunction getCurrentRefinement(props, searchState, context) {\n  var id = getId();\n  var currentRefinement = getCurrentRefinementValue(props, searchState, context, id);\n  return currentRefinement;\n}\n\nexport default createConnector({\n  displayName: 'AlgoliaRelevantSort',\n  getProvidedProps: function getProvidedProps(props, _searchState, searchResults) {\n    var results = getResults(searchResults, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n\n    if (!results) {\n      return {\n        isVirtualReplica: false,\n        isRelevantSorted: false\n      };\n    }\n\n    return {\n      isVirtualReplica: results.appliedRelevancyStrictness !== undefined,\n      isRelevantSorted: results.appliedRelevancyStrictness !== undefined && results.appliedRelevancyStrictness > 0\n    };\n  },\n  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {\n    return searchParameters.setQueryParameter('relevancyStrictness', getCurrentRefinement(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    }));\n  },\n  refine: function refine(props, searchState, nextRefinement) {\n    var nextValue = _defineProperty({}, getId(), nextRefinement);\n\n    var resetPage = true;\n    return refineValue(searchState, nextValue, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    }, resetPage);\n  }\n});"]},"metadata":{},"sourceType":"module"}