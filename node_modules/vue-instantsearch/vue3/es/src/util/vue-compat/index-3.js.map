{"version":3,"file":"index-3.js","sources":["../../../../../src/util/vue-compat/index-3.js"],"sourcesContent":["import * as Vue from 'vue';\n\nconst isVue2 = false;\nconst isVue3 = true;\nconst Vue2 = undefined;\n\nexport { createApp, createSSRApp, h, version, nextTick } from 'vue';\nexport { Vue, Vue2, isVue2, isVue3 };\n\nexport function renderCompat(fn) {\n  function h(tag, props, children) {\n    if (typeof props === 'object' && (props.attrs || props.props)) {\n      // In vue 3, we no longer wrap with `attrs` or `props` key.\n      const flatProps = Object.assign({}, props, props.attrs, props.props);\n      delete flatProps.attrs;\n      delete flatProps.props;\n\n      return Vue.h(tag, flatProps, children);\n    }\n\n    return Vue.h(tag, props, children);\n  }\n\n  return function() {\n    return fn.call(this, h);\n  };\n}\n\nexport function getDefaultSlot(component) {\n  return component.$slots.default && component.$slots.default();\n}\n"],"names":["isVue2","isVue3","renderCompat","fn","h","tag","props","children","attrs","const","flatProps","Object","assign","Vue.h","call","this","getDefaultSlot","component","$slots","default"],"mappings":"0HAEK,IAACA,GAAS,EACTC,GAAS,EAMR,SAASC,EAAaC,GAC3B,SAASC,EAAEC,EAAKC,EAAOC,GACrB,GAAqB,iBAAVD,IAAuBA,EAAME,OAASF,EAAMA,OAAQ,CAE7DG,IAAMC,EAAYC,OAAOC,OAAO,GAAIN,EAAOA,EAAME,MAAOF,EAAMA,OAI9D,cAHOI,EAAUF,aACVE,EAAUJ,MAEVO,EAAMR,EAAKK,EAAWH,GAG/B,OAAOM,EAAMR,EAAKC,EAAOC,GAG3B,OAAO,WACL,OAAOJ,EAAGW,KAAKC,KAAMX,IAIlB,SAASY,EAAeC,GAC7B,OAAOA,EAAUC,OAAOC,SAAWF,EAAUC,OAAOC"}