{"version":3,"file":"index.js","sources":["../../src/util/suit.js","../../src/mixins/suit.js","../../src/util/vue-compat/index-3.js","../../src/util/warn.js","../../src/mixins/widget.js","../../src/components/Autocomplete.vue","../../src/components/Autocomplete.vue?vue&type=template&id=e7c95fd0&lang.js","../../src/mixins/panel.js","../../src/components/Breadcrumb.vue","../../src/components/Breadcrumb.vue?vue&type=template&id=6f46de9a&lang.js","../../src/components/ClearRefinements.vue","../../src/components/ClearRefinements.vue?vue&type=template&id=410a3aaa&lang.js","../../src/components/Configure.js","../../src/components/ConfigureRelatedItems.js","../../src/components/CurrentRefinements.vue","../../src/components/CurrentRefinements.vue?vue&type=template&id=4f1917ff&lang.js","../../src/components/HierarchicalMenuList.vue","../../src/components/HierarchicalMenuList.vue?vue&type=template&id=0435b314&lang.js","../../src/components/HierarchicalMenu.vue","../../src/components/HierarchicalMenu.vue?vue&type=template&id=4361a0b8&lang.js","../../src/util/unescape.js","../../src/util/parseAlgoliaHit.js","../../src/components/Highlighter.vue","../../src/components/Highlighter.vue?vue&type=template&id=92153c3e&lang.js","../../src/components/Highlight.vue","../../src/components/Highlight.vue?vue&type=template&id=300b0ab4&lang.js","../../src/components/Hits.vue","../../src/components/Hits.vue?vue&type=template&id=ef242920&lang.js","../../src/components/HitsPerPage.vue","../../src/components/HitsPerPage.vue?vue&type=template&id=74f3ac28&lang.js","../../src/components/Index.js","../../src/util/polyfills.js","../../src/util/createInstantSearchComponent.js","../../src/components/InstantSearch.js","../../src/components/InstantSearchSsr.js","../../src/components/InfiniteHits.vue","../../src/components/InfiniteHits.vue?vue&type=template&id=dcfb64b8&lang.js","../../src/components/Menu.vue","../../src/components/Menu.vue?vue&type=template&id=9bcc0be2&lang.js","../../src/components/MenuSelect.vue","../../src/components/MenuSelect.vue?vue&type=template&id=694477eb&lang.js","../../src/components/NumericMenu.vue","../../src/components/NumericMenu.vue?vue&type=template&id=160fae0c&lang.js","../../src/components/Pagination.vue","../../src/components/Pagination.vue?vue&type=template&id=849a166c&lang.js","../../src/components/Panel.vue","../../src/components/Panel.vue?vue&type=template&id=d32d57f8&lang.js","../../src/components/PoweredBy.vue","../../src/components/PoweredBy.vue?vue&type=template&id=3e8d7a5b&lang.js","../../src/components/QueryRuleContext.js","../../src/components/QueryRuleCustomData.vue","../../src/components/QueryRuleCustomData.vue?vue&type=template&id=e4da0782&lang.js","../../src/components/RangeInput.vue","../../src/components/RangeInput.vue?vue&type=template&id=1e17783d&lang.js","../../src/components/RatingMenu.vue","../../src/components/RatingMenu.vue?vue&type=template&id=9254de68&lang.js","../../src/components/SearchInput.vue","../../src/components/SearchInput.vue?vue&type=template&id=2eed8ffc&lang.js","../../src/components/RefinementList.vue","../../src/components/RefinementList.vue?vue&type=template&id=28927239&lang.js","../../src/connectors/connectStateResults.js","../../src/components/StateResults.vue","../../src/components/StateResults.vue?vue&type=template&id=5992f3d5&lang.js","../../src/components/SearchBox.vue","../../src/components/SearchBox.vue?vue&type=template&id=27029d83&lang.js","../../src/components/Snippet.vue","../../src/components/Snippet.vue?vue&type=template&id=eb4966c6&lang.js","../../src/components/SortBy.vue","../../src/components/SortBy.vue?vue&type=template&id=b69b3b76&lang.js","../../src/components/Stats.vue","../../src/components/Stats.vue?vue&type=template&id=7337491f&lang.js","../../src/components/ToggleRefinement.vue","../../src/components/ToggleRefinement.vue?vue&type=template&id=14e4586f&lang.js","../../src/components/VoiceSearch.vue","../../src/components/VoiceSearch.vue?vue&type=template&id=24b0f67a&lang.js","../../src/components/RelevantSort.vue","../../src/components/RelevantSort.vue?vue&type=template&id=257b248b&lang.js","../../src/components/DynamicWidgets.js","../../src/plugin.js","../../src/util/createServerRootMixin.js"],"sourcesContent":["/**\n * Create class names like ais-widgetName-element--modifier\n *\n * @param {string} widgetName first part\n * @param {string} element part separated by -\n * @param {string} modifier final part, separated by --\n *\n * @returns {string} the composed class name\n */\nexport default function suit(widgetName, element, modifier) {\n  if (!widgetName) {\n    throw new Error('You need to provide `widgetName` in your data');\n  }\n\n  const elements = [`ais-${widgetName}`];\n\n  if (element) {\n    elements.push(`-${element}`);\n  }\n\n  if (modifier) {\n    elements.push(`--${modifier}`);\n  }\n\n  return elements.join('');\n}\n","import suit from '../util/suit';\n\nexport const createSuitMixin = ({ name }) => ({\n  props: {\n    classNames: {\n      type: Object,\n      default: undefined,\n    },\n  },\n  methods: {\n    suit(element, modifier) {\n      const className = suit(name, element, modifier);\n      const userClassName = this.classNames && this.classNames[className];\n      if (userClassName) {\n        return [className, userClassName].join(' ');\n      }\n      return className;\n    },\n  },\n});\n","import * as Vue from 'vue';\n\nconst isVue2 = false;\nconst isVue3 = true;\nconst Vue2 = undefined;\n\nexport { createApp, createSSRApp, h, version, nextTick } from 'vue';\nexport { Vue, Vue2, isVue2, isVue3 };\n\nexport function renderCompat(fn) {\n  function h(tag, props, children) {\n    if (typeof props === 'object' && (props.attrs || props.props)) {\n      // In vue 3, we no longer wrap with `attrs` or `props` key.\n      const flatProps = Object.assign({}, props, props.attrs, props.props);\n      delete flatProps.attrs;\n      delete flatProps.props;\n\n      return Vue.h(tag, flatProps, children);\n    }\n\n    return Vue.h(tag, props, children);\n  }\n\n  return function() {\n    return fn.call(this, h);\n  };\n}\n\nexport function getDefaultSlot(component) {\n  return component.$slots.default && component.$slots.default();\n}\n","const cache = new Set();\n\nexport function warn(message) {\n  if (cache.has(message)) return;\n  cache.add(message);\n  // eslint-disable-next-line no-console\n  console.warn(message);\n}\n","import { isVue3 } from '../util/vue-compat';\nimport { warn } from '../util/warn';\n\nexport const createWidgetMixin = ({ connector } = {}) => ({\n  inject: {\n    instantSearchInstance: {\n      from: '$_ais_instantSearchInstance',\n      default() {\n        const tag = this.$options._componentTag;\n        throw new TypeError(\n          `It looks like you forgot to wrap your Algolia search component \"<${tag}>\" inside of an \"<ais-instant-search>\" component.`\n        );\n      },\n    },\n    getParentIndex: {\n      from: '$_ais_getParentIndex',\n      default() {\n        return () => this.instantSearchInstance.mainIndex;\n      },\n    },\n  },\n  data() {\n    return {\n      state: null,\n    };\n  },\n  created() {\n    if (typeof connector === 'function') {\n      this.factory = connector(this.updateState, () => {});\n      this.widget = this.factory(this.widgetParams);\n      this.getParentIndex().addWidgets([this.widget]);\n\n      if (\n        this.instantSearchInstance.__initialSearchResults &&\n        !this.instantSearchInstance.started\n      ) {\n        if (typeof this.instantSearchInstance.__forceRender !== 'function') {\n          throw new Error(\n            'You are using server side rendering with <ais-instant-search> instead of <ais-instant-search-ssr>.'\n          );\n        }\n        this.instantSearchInstance.__forceRender(\n          this.widget,\n          this.getParentIndex()\n        );\n      }\n    } else if (connector !== true) {\n      warn(\n        `You are using the InstantSearch widget mixin, but didn't provide a connector.\nWhile this is technically possible, and will give you access to the Helper,\nit's not the recommended way of making custom components.\n\nIf you want to disable this message, pass { connector: true } to the mixin.\n\nRead more on using connectors: https://alg.li/vue-custom`\n      );\n    }\n  },\n  [isVue3 ? 'beforeUnmount' : 'beforeDestroy']() {\n    if (this.widget) {\n      this.getParentIndex().removeWidgets([this.widget]);\n    }\n  },\n  watch: {\n    widgetParams: {\n      handler(nextWidgetParams) {\n        this.state = null;\n        this.getParentIndex().removeWidgets([this.widget]);\n        this.widget = this.factory(nextWidgetParams);\n        this.getParentIndex().addWidgets([this.widget]);\n      },\n      deep: true,\n    },\n  },\n  methods: {\n    updateState(state = {}, isFirstRender) {\n      if (!isFirstRender) {\n        // Avoid updating the state on first render\n        // otherwise there will be a flash of placeholder data\n        this.state = state;\n      }\n    },\n  },\n});\n","<template>\n  <div\n    :class=\"suit()\"\n    v-if=\"state\"\n  >\n    <slot\n      :refine=\"state.refine\"\n      :current-refinement=\"state.currentRefinement\"\n      :indices=\"state.indices\"\n    >\n      <p>This widget doesn't render anything without a filled in default slot.</p>\n      <p>query, function to refine and results are provided.</p>\n      <pre>refine: Function</pre>\n      <pre>currentRefinement: \"{{ state.currentRefinement }}\"</pre>\n      <details>\n        <summary><code>indices</code>:</summary>\n        <pre>{{ state.indices }}</pre>\n      </details>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { createWidgetMixin } from '../mixins/widget';\nimport { connectAutocomplete } from 'instantsearch.js/es/connectors';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisAutocomplete',\n  mixins: [\n    createWidgetMixin({ connector: connectAutocomplete }),\n    createSuitMixin({ name: 'Autocomplete' }),\n  ],\n  props: {\n    escapeHTML: {\n      type: Boolean,\n      required: false,\n      default: true,\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        escapeHTML: this.escapeHTML,\n      };\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    :class=\"suit()\"\n    v-if=\"state\"\n  >\n    <slot\n      :refine=\"state.refine\"\n      :current-refinement=\"state.currentRefinement\"\n      :indices=\"state.indices\"\n    >\n      <p>This widget doesn't render anything without a filled in default slot.</p>\n      <p>query, function to refine and results are provided.</p>\n      <pre>refine: Function</pre>\n      <pre>currentRefinement: \"{{ state.currentRefinement }}\"</pre>\n      <details>\n        <summary><code>indices</code>:</summary>\n        <pre>{{ state.indices }}</pre>\n      </details>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { createWidgetMixin } from '../mixins/widget';\nimport { connectAutocomplete } from 'instantsearch.js/es/connectors';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisAutocomplete',\n  mixins: [\n    createWidgetMixin({ connector: connectAutocomplete }),\n    createSuitMixin({ name: 'Autocomplete' }),\n  ],\n  props: {\n    escapeHTML: {\n      type: Boolean,\n      required: false,\n      default: true,\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        escapeHTML: this.escapeHTML,\n      };\n    },\n  },\n};\n</script>\n","import { isVue3 } from '../util/vue-compat';\nimport mitt from 'mitt';\n\nexport const PANEL_EMITTER_NAMESPACE = 'instantSearchPanelEmitter';\nexport const PANEL_CHANGE_EVENT = 'PANEL_CHANGE_EVENT';\n\nexport const createPanelProviderMixin = () => ({\n  props: {\n    emitter: {\n      type: Object,\n      required: false,\n      default() {\n        return mitt();\n      },\n    },\n  },\n  provide() {\n    return {\n      [PANEL_EMITTER_NAMESPACE]: this.emitter,\n    };\n  },\n  data() {\n    return {\n      canRefine: true,\n    };\n  },\n  created() {\n    this.emitter.on(PANEL_CHANGE_EVENT, value => {\n      this.updateCanRefine(value);\n    });\n  },\n  [isVue3 ? 'beforeUnmount' : 'beforeDestroy']() {\n    this.emitter.all.clear();\n  },\n  methods: {\n    updateCanRefine(value) {\n      this.canRefine = value;\n    },\n  },\n});\n\nexport const createPanelConsumerMixin = ({ mapStateToCanRefine }) => ({\n  inject: {\n    emitter: {\n      from: PANEL_EMITTER_NAMESPACE,\n      default() {\n        return {\n          emit: () => {},\n        };\n      },\n    },\n  },\n  data() {\n    return {\n      state: null,\n      hasAlreadyEmitted: false,\n    };\n  },\n  watch: {\n    state: {\n      immediate: true,\n      handler(nextState, previousState) {\n        if (!nextState) {\n          return;\n        }\n\n        const previousCanRefine = mapStateToCanRefine(previousState || {});\n        const nextCanRefine = mapStateToCanRefine(nextState);\n\n        if (!this.hasAlreadyEmitted || previousCanRefine !== nextCanRefine) {\n          this.emitter.emit(PANEL_CHANGE_EVENT, nextCanRefine);\n          this.hasAlreadyEmitted = true;\n        }\n      },\n    },\n  },\n});\n","<template>\n  <div\n    v-if=\"state\"\n    :class=\"[suit(), !state.canRefine && suit('', 'noRefinement')]\"\n  >\n    <slot\n      :items=\"state.items\"\n      :can-refine=\"state.canRefine\"\n      :refine=\"state.refine\"\n      :createURL=\"state.createURL\"\n    >\n      <ul :class=\"suit('list')\">\n        <li :class=\"[suit('item'), !state.items.length && suit('item', 'selected')]\">\n          <a\n            v-if=\"Boolean(state.items.length)\"\n            :href=\"state.createURL()\"\n            :class=\"suit('link')\"\n            @click.prevent=\"state.refine()\"\n          >\n            <slot name=\"rootLabel\">Home</slot>\n          </a>\n          <span v-else>\n            <slot name=\"rootLabel\">Home</slot>\n          </span>\n        </li>\n        <li\n          v-for=\"(item, index) in state.items\"\n          :key=\"item.label\"\n          :class=\"[suit('item'), isLastItem(index) && suit('item', 'selected')]\"\n        >\n          <span\n            :class=\"suit('separator')\"\n            aria-hidden=\"true\"\n          >\n            <slot name=\"separator\">></slot>\n          </span>\n          <a\n            v-if=\"!isLastItem(index)\"\n            :href=\"state.createURL(item.value)\"\n            :class=\"suit('link')\"\n            @click.prevent=\"state.refine(item.value)\"\n          >{{ item.label }}</a>\n          <span v-else>{{ item.label }}</span>\n        </li>\n      </ul>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectBreadcrumb } from 'instantsearch.js/es/connectors';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createSuitMixin } from '../mixins/suit';\nimport { createWidgetMixin } from '../mixins/widget';\n\nexport default {\n  name: 'AisBreadcrumb',\n  mixins: [\n    createWidgetMixin({ connector: connectBreadcrumb }),\n    createPanelConsumerMixin({\n      mapStateToCanRefine: state => Boolean(state.canRefine),\n    }),\n    createSuitMixin({ name: 'Breadcrumb' }),\n  ],\n  props: {\n    attributes: {\n      type: Array,\n      required: true,\n    },\n    separator: {\n      type: String,\n      default: undefined,\n    },\n    rootPath: {\n      type: String,\n      default: undefined,\n    },\n    transformItems: {\n      type: Function,\n      default: undefined,\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        attributes: this.attributes,\n        separator: this.separator,\n        rootPath: this.rootPath,\n        transformItems: this.transformItems,\n      };\n    },\n  },\n  methods: {\n    isLastItem(index) {\n      return this.state.items.length - 1 === index;\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    v-if=\"state\"\n    :class=\"[suit(), !state.canRefine && suit('', 'noRefinement')]\"\n  >\n    <slot\n      :items=\"state.items\"\n      :can-refine=\"state.canRefine\"\n      :refine=\"state.refine\"\n      :createURL=\"state.createURL\"\n    >\n      <ul :class=\"suit('list')\">\n        <li :class=\"[suit('item'), !state.items.length && suit('item', 'selected')]\">\n          <a\n            v-if=\"Boolean(state.items.length)\"\n            :href=\"state.createURL()\"\n            :class=\"suit('link')\"\n            @click.prevent=\"state.refine()\"\n          >\n            <slot name=\"rootLabel\">Home</slot>\n          </a>\n          <span v-else>\n            <slot name=\"rootLabel\">Home</slot>\n          </span>\n        </li>\n        <li\n          v-for=\"(item, index) in state.items\"\n          :key=\"item.label\"\n          :class=\"[suit('item'), isLastItem(index) && suit('item', 'selected')]\"\n        >\n          <span\n            :class=\"suit('separator')\"\n            aria-hidden=\"true\"\n          >\n            <slot name=\"separator\">></slot>\n          </span>\n          <a\n            v-if=\"!isLastItem(index)\"\n            :href=\"state.createURL(item.value)\"\n            :class=\"suit('link')\"\n            @click.prevent=\"state.refine(item.value)\"\n          >{{ item.label }}</a>\n          <span v-else>{{ item.label }}</span>\n        </li>\n      </ul>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectBreadcrumb } from 'instantsearch.js/es/connectors';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createSuitMixin } from '../mixins/suit';\nimport { createWidgetMixin } from '../mixins/widget';\n\nexport default {\n  name: 'AisBreadcrumb',\n  mixins: [\n    createWidgetMixin({ connector: connectBreadcrumb }),\n    createPanelConsumerMixin({\n      mapStateToCanRefine: state => Boolean(state.canRefine),\n    }),\n    createSuitMixin({ name: 'Breadcrumb' }),\n  ],\n  props: {\n    attributes: {\n      type: Array,\n      required: true,\n    },\n    separator: {\n      type: String,\n      default: undefined,\n    },\n    rootPath: {\n      type: String,\n      default: undefined,\n    },\n    transformItems: {\n      type: Function,\n      default: undefined,\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        attributes: this.attributes,\n        separator: this.separator,\n        rootPath: this.rootPath,\n        transformItems: this.transformItems,\n      };\n    },\n  },\n  methods: {\n    isLastItem(index) {\n      return this.state.items.length - 1 === index;\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    v-if=\"state\"\n    :class=\"suit()\"\n  >\n    <slot\n      :can-refine=\"canRefine\"\n      :refine=\"state.refine\"\n      :createURL=\"state.createURL\"\n    >\n      <button\n        type=\"reset\"\n        :class=\"[suit('button'), !canRefine && suit('button', 'disabled')]\"\n        :disabled=\"!canRefine\"\n        @click.prevent=\"state.refine\"\n      >\n        <slot name=\"resetLabel\">Clear refinements</slot>\n      </button>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectClearRefinements } from 'instantsearch.js/es/connectors';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createSuitMixin } from '../mixins/suit';\nimport { createWidgetMixin } from '../mixins/widget';\n\nexport default {\n  name: 'AisClearRefinements',\n  mixins: [\n    createWidgetMixin({ connector: connectClearRefinements }),\n    createPanelConsumerMixin({\n      mapStateToCanRefine: state => Boolean(state.hasRefinements),\n    }),\n    createSuitMixin({ name: 'ClearRefinements' }),\n  ],\n  props: {\n    excludedAttributes: {\n      type: Array,\n      default: undefined,\n    },\n    includedAttributes: {\n      type: Array,\n      default: undefined,\n    },\n    transformItems: {\n      type: Function,\n      default: undefined,\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        includedAttributes: this.includedAttributes,\n        excludedAttributes: this.excludedAttributes,\n        transformItems: this.transformItems,\n      };\n    },\n    canRefine() {\n      return this.state.hasRefinements;\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    v-if=\"state\"\n    :class=\"suit()\"\n  >\n    <slot\n      :can-refine=\"canRefine\"\n      :refine=\"state.refine\"\n      :createURL=\"state.createURL\"\n    >\n      <button\n        type=\"reset\"\n        :class=\"[suit('button'), !canRefine && suit('button', 'disabled')]\"\n        :disabled=\"!canRefine\"\n        @click.prevent=\"state.refine\"\n      >\n        <slot name=\"resetLabel\">Clear refinements</slot>\n      </button>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectClearRefinements } from 'instantsearch.js/es/connectors';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createSuitMixin } from '../mixins/suit';\nimport { createWidgetMixin } from '../mixins/widget';\n\nexport default {\n  name: 'AisClearRefinements',\n  mixins: [\n    createWidgetMixin({ connector: connectClearRefinements }),\n    createPanelConsumerMixin({\n      mapStateToCanRefine: state => Boolean(state.hasRefinements),\n    }),\n    createSuitMixin({ name: 'ClearRefinements' }),\n  ],\n  props: {\n    excludedAttributes: {\n      type: Array,\n      default: undefined,\n    },\n    includedAttributes: {\n      type: Array,\n      default: undefined,\n    },\n    transformItems: {\n      type: Function,\n      default: undefined,\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        includedAttributes: this.includedAttributes,\n        excludedAttributes: this.excludedAttributes,\n        transformItems: this.transformItems,\n      };\n    },\n    canRefine() {\n      return this.state.hasRefinements;\n    },\n  },\n};\n</script>\n","import { createWidgetMixin } from '../mixins/widget';\nimport { createSuitMixin } from '../mixins/suit';\nimport { connectConfigure } from 'instantsearch.js/es/connectors';\nimport { isVue3, renderCompat } from '../util/vue-compat';\n\nexport default {\n  inheritAttrs: false,\n  name: 'AisConfigure',\n  mixins: [\n    createSuitMixin({ name: 'Configure' }),\n    createWidgetMixin({ connector: connectConfigure }),\n  ],\n  computed: {\n    widgetParams() {\n      return {\n        searchParameters: this.$attrs,\n      };\n    },\n  },\n  render: renderCompat(function(h) {\n    const slot = isVue3 ? this.$slots.default : this.$scopedSlots.default;\n\n    if (!this.state || !slot) {\n      return null;\n    }\n\n    return h(\n      'div',\n      {\n        class: this.suit(),\n      },\n      [\n        slot({\n          refine: this.state.refine,\n          searchParameters: this.state.widgetParams.searchParameters,\n        }),\n      ]\n    );\n  }),\n};\n","import { createWidgetMixin } from '../mixins/widget';\nimport { EXPERIMENTAL_connectConfigureRelatedItems } from 'instantsearch.js/es/connectors';\n\nexport default {\n  inheritAttrs: false,\n  name: 'AisExperimentalConfigureRelatedItems',\n  mixins: [\n    createWidgetMixin({ connector: EXPERIMENTAL_connectConfigureRelatedItems }),\n  ],\n  props: {\n    hit: {\n      type: Object,\n      required: true,\n    },\n    matchingPatterns: {\n      type: Object,\n      required: true,\n    },\n    transformSearchParameters: {\n      type: Function,\n      required: false,\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        hit: this.hit,\n        matchingPatterns: this.matchingPatterns,\n        transformSearchParameters: this.transformSearchParameters,\n      };\n    },\n  },\n  render() {\n    return null;\n  },\n};\n","<template>\n  <div\n    :class=\"[suit(), noRefinement && suit('','noRefinement')]\"\n    v-if=\"state\"\n  >\n    <slot\n      :refine=\"state.refine\"\n      :items=\"state.items\"\n      :createURL=\"state.createURL\"\n    >\n      <ul :class=\"suit('list')\">\n        <li\n          v-for=\"item in state.items\"\n          :key=\"item.attribute\"\n          :class=\"suit('item')\"\n        >\n          <slot\n            name=\"item\"\n            :refine=\"item.refine\"\n            :item=\"item\"\n            :createURL=\"state.createURL\"\n          >\n            <span :class=\"suit('label')\">{{ capitalize(item.label) }}: </span>\n            <span\n              v-for=\"refinement in item.refinements\"\n              :key=\"createItemKey(refinement)\"\n              :class=\"suit('category')\"\n            >\n              <slot\n                name=\"refinement\"\n                :refine=\"item.refine\"\n                :refinement=\"refinement\"\n                :createURL=\"state.createURL\"\n              >\n                <span :class=\"suit('categoryLabel')\">\n                  <q v-if=\"refinement.attribute === 'query'\">{{ refinement.label }}</q>\n                  <template v-else>\n                    {{ refinement.label }}\n                  </template>\n                </span>\n                <button\n                  :class=\"suit('delete')\"\n                  @click=\"item.refine(refinement)\"\n                >\n                  ✕\n                </button>\n              </slot>\n            </span>\n          </slot>\n        </li>\n      </ul>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { createWidgetMixin } from '../mixins/widget';\nimport { connectCurrentRefinements } from 'instantsearch.js/es/connectors';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisCurrentRefinements',\n  mixins: [\n    createSuitMixin({ name: 'CurrentRefinements' }),\n    createWidgetMixin({ connector: connectCurrentRefinements }),\n    createPanelConsumerMixin({\n      mapStateToCanRefine: state =>\n        Boolean(state.items) && state.items.length > 0,\n    }),\n  ],\n  props: {\n    includedAttributes: {\n      type: Array,\n      default: undefined,\n    },\n    excludedAttributes: {\n      type: Array,\n      default: undefined,\n    },\n    transformItems: {\n      type: Function,\n      default: undefined,\n    },\n  },\n  computed: {\n    noRefinement() {\n      return this.state && this.state.items.length === 0;\n    },\n    widgetParams() {\n      return {\n        includedAttributes: this.includedAttributes,\n        excludedAttributes: this.excludedAttributes,\n        transformItems: this.transformItems,\n      };\n    },\n  },\n  methods: {\n    createItemKey({ attribute, value, type, operator }) {\n      return [attribute, type, value, operator].join(':');\n    },\n    capitalize(value) {\n      if (!value) return '';\n      return (\n        value\n          .toString()\n          .charAt(0)\n          .toLocaleUpperCase() + value.toString().slice(1)\n      );\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    :class=\"[suit(), noRefinement && suit('','noRefinement')]\"\n    v-if=\"state\"\n  >\n    <slot\n      :refine=\"state.refine\"\n      :items=\"state.items\"\n      :createURL=\"state.createURL\"\n    >\n      <ul :class=\"suit('list')\">\n        <li\n          v-for=\"item in state.items\"\n          :key=\"item.attribute\"\n          :class=\"suit('item')\"\n        >\n          <slot\n            name=\"item\"\n            :refine=\"item.refine\"\n            :item=\"item\"\n            :createURL=\"state.createURL\"\n          >\n            <span :class=\"suit('label')\">{{ capitalize(item.label) }}: </span>\n            <span\n              v-for=\"refinement in item.refinements\"\n              :key=\"createItemKey(refinement)\"\n              :class=\"suit('category')\"\n            >\n              <slot\n                name=\"refinement\"\n                :refine=\"item.refine\"\n                :refinement=\"refinement\"\n                :createURL=\"state.createURL\"\n              >\n                <span :class=\"suit('categoryLabel')\">\n                  <q v-if=\"refinement.attribute === 'query'\">{{ refinement.label }}</q>\n                  <template v-else>\n                    {{ refinement.label }}\n                  </template>\n                </span>\n                <button\n                  :class=\"suit('delete')\"\n                  @click=\"item.refine(refinement)\"\n                >\n                  ✕\n                </button>\n              </slot>\n            </span>\n          </slot>\n        </li>\n      </ul>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { createWidgetMixin } from '../mixins/widget';\nimport { connectCurrentRefinements } from 'instantsearch.js/es/connectors';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisCurrentRefinements',\n  mixins: [\n    createSuitMixin({ name: 'CurrentRefinements' }),\n    createWidgetMixin({ connector: connectCurrentRefinements }),\n    createPanelConsumerMixin({\n      mapStateToCanRefine: state =>\n        Boolean(state.items) && state.items.length > 0,\n    }),\n  ],\n  props: {\n    includedAttributes: {\n      type: Array,\n      default: undefined,\n    },\n    excludedAttributes: {\n      type: Array,\n      default: undefined,\n    },\n    transformItems: {\n      type: Function,\n      default: undefined,\n    },\n  },\n  computed: {\n    noRefinement() {\n      return this.state && this.state.items.length === 0;\n    },\n    widgetParams() {\n      return {\n        includedAttributes: this.includedAttributes,\n        excludedAttributes: this.excludedAttributes,\n        transformItems: this.transformItems,\n      };\n    },\n  },\n  methods: {\n    createItemKey({ attribute, value, type, operator }) {\n      return [attribute, type, value, operator].join(':');\n    },\n    capitalize(value) {\n      if (!value) return '';\n      return (\n        value\n          .toString()\n          .charAt(0)\n          .toLocaleUpperCase() + value.toString().slice(1)\n      );\n    },\n  },\n};\n</script>\n","<template>\n  <ul\n    :class=\"[\n      suit('list'),\n      level > 0 && suit('list', 'child'),\n      suit('list', `lvl${level}`)\n    ]\"\n  >\n    <li\n      v-for=\"item in items\"\n      :key=\"item.value\"\n      :class=\"[\n        suit('item'),\n        item.data && suit('item', 'parent'),\n        item.isRefined && suit('item', 'selected')\n      ]\"\n    >\n      <a\n        :href=\"createURL(item.value)\"\n        :class=\"suit('link')\"\n        @click.prevent=\"refine(item.value)\"\n      >\n        <span :class=\"suit('label')\">{{ item.label }}</span>\n        <span :class=\"suit('count')\">{{ item.count }}</span>\n      </a>\n\n      <hierarchical-menu-list\n        v-if=\"item.data\"\n        :items=\"item.data\"\n        :level=\"level + 1\"\n        :refine=\"refine\"\n        :createURL=\"createURL\"\n        :suit=\"suit\"\n      />\n    </li>\n  </ul>\n</template>\n\n<script>\nexport default {\n  name: 'HierarchicalMenuList',\n  props: {\n    items: {\n      type: Array,\n      required: true,\n    },\n    level: {\n      type: Number,\n      required: true,\n    },\n    refine: {\n      type: Function,\n      required: true,\n    },\n    createURL: {\n      type: Function,\n      required: true,\n    },\n    suit: {\n      type: Function,\n      required: true,\n    },\n  },\n};\n</script>\n","<template>\n  <ul\n    :class=\"[\n      suit('list'),\n      level > 0 && suit('list', 'child'),\n      suit('list', `lvl${level}`)\n    ]\"\n  >\n    <li\n      v-for=\"item in items\"\n      :key=\"item.value\"\n      :class=\"[\n        suit('item'),\n        item.data && suit('item', 'parent'),\n        item.isRefined && suit('item', 'selected')\n      ]\"\n    >\n      <a\n        :href=\"createURL(item.value)\"\n        :class=\"suit('link')\"\n        @click.prevent=\"refine(item.value)\"\n      >\n        <span :class=\"suit('label')\">{{ item.label }}</span>\n        <span :class=\"suit('count')\">{{ item.count }}</span>\n      </a>\n\n      <hierarchical-menu-list\n        v-if=\"item.data\"\n        :items=\"item.data\"\n        :level=\"level + 1\"\n        :refine=\"refine\"\n        :createURL=\"createURL\"\n        :suit=\"suit\"\n      />\n    </li>\n  </ul>\n</template>\n\n<script>\nexport default {\n  name: 'HierarchicalMenuList',\n  props: {\n    items: {\n      type: Array,\n      required: true,\n    },\n    level: {\n      type: Number,\n      required: true,\n    },\n    refine: {\n      type: Function,\n      required: true,\n    },\n    createURL: {\n      type: Function,\n      required: true,\n    },\n    suit: {\n      type: Function,\n      required: true,\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    v-if=\"state\"\n    :class=\"[suit(), !canRefine && suit('', 'noRefinement')]\"\n  >\n    <slot\n      :items=\"state.items\"\n      :can-refine=\"canRefine\"\n      :can-toggle-show-more=\"state.canToggleShowMore\"\n      :is-showing-more=\"state.isShowingMore\"\n      :refine=\"state.refine\"\n      :createURL=\"state.createURL\"\n      :toggle-show-more=\"state.toggleShowMore\"\n      :send-event=\"state.sendEvent\"\n    >\n      <hierarchical-menu-list\n        :items=\"state.items\"\n        :level=\"0\"\n        :refine=\"state.refine\"\n        :createURL=\"state.createURL\"\n        :suit=\"suit\"\n      />\n\n      <button\n        v-if=\"showMore\"\n        :class=\"[\n          suit('showMore'),\n          !state.canToggleShowMore && suit('showMore', 'disabled')\n        ]\"\n        :disabled=\"!state.canToggleShowMore\"\n        @click.prevent=\"state.toggleShowMore\"\n      >\n        <slot\n          name=\"showMoreLabel\"\n          :is-showing-more=\"state.isShowingMore\"\n        >{{ state.isShowingMore ? 'Show less' : 'Show more' }}</slot>\n      </button>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectHierarchicalMenu } from 'instantsearch.js/es/connectors';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport HierarchicalMenuList from './HierarchicalMenuList.vue';\nimport { createSuitMixin } from '../mixins/suit';\n\nconst mapStateToCanRefine = state =>\n  Boolean(state.items) && state.items.length > 0;\n\nexport default {\n  name: 'AisHierarchicalMenu',\n  mixins: [\n    createSuitMixin({ name: 'HierarchicalMenu' }),\n    createWidgetMixin({ connector: connectHierarchicalMenu }),\n    createPanelConsumerMixin({\n      mapStateToCanRefine,\n    }),\n  ],\n  components: {\n    HierarchicalMenuList,\n  },\n  props: {\n    attributes: {\n      type: Array,\n      required: true,\n    },\n    limit: {\n      type: Number,\n      default: undefined,\n    },\n    showMoreLimit: {\n      type: Number,\n      default: undefined,\n    },\n    showMore: {\n      type: Boolean,\n      default: false,\n    },\n    sortBy: {\n      type: [Array, Function],\n      default: undefined,\n    },\n    separator: {\n      type: String,\n      default: undefined,\n    },\n    rootPath: {\n      type: String,\n      default: undefined,\n    },\n    showParentLevel: {\n      type: Boolean,\n      default: undefined,\n    },\n    transformItems: {\n      type: Function,\n      default: undefined,\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        attributes: this.attributes,\n        limit: this.limit,\n        showMore: this.showMore,\n        showMoreLimit: this.showMoreLimit,\n        separator: this.separator,\n        rootPath: this.rootPath,\n        showParentLevel: this.showParentLevel,\n        sortBy: this.sortBy,\n        transformItems: this.transformItems,\n      };\n    },\n    canRefine() {\n      return mapStateToCanRefine(this.state);\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    v-if=\"state\"\n    :class=\"[suit(), !canRefine && suit('', 'noRefinement')]\"\n  >\n    <slot\n      :items=\"state.items\"\n      :can-refine=\"canRefine\"\n      :can-toggle-show-more=\"state.canToggleShowMore\"\n      :is-showing-more=\"state.isShowingMore\"\n      :refine=\"state.refine\"\n      :createURL=\"state.createURL\"\n      :toggle-show-more=\"state.toggleShowMore\"\n      :send-event=\"state.sendEvent\"\n    >\n      <hierarchical-menu-list\n        :items=\"state.items\"\n        :level=\"0\"\n        :refine=\"state.refine\"\n        :createURL=\"state.createURL\"\n        :suit=\"suit\"\n      />\n\n      <button\n        v-if=\"showMore\"\n        :class=\"[\n          suit('showMore'),\n          !state.canToggleShowMore && suit('showMore', 'disabled')\n        ]\"\n        :disabled=\"!state.canToggleShowMore\"\n        @click.prevent=\"state.toggleShowMore\"\n      >\n        <slot\n          name=\"showMoreLabel\"\n          :is-showing-more=\"state.isShowingMore\"\n        >{{ state.isShowingMore ? 'Show less' : 'Show more' }}</slot>\n      </button>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectHierarchicalMenu } from 'instantsearch.js/es/connectors';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport HierarchicalMenuList from './HierarchicalMenuList.vue';\nimport { createSuitMixin } from '../mixins/suit';\n\nconst mapStateToCanRefine = state =>\n  Boolean(state.items) && state.items.length > 0;\n\nexport default {\n  name: 'AisHierarchicalMenu',\n  mixins: [\n    createSuitMixin({ name: 'HierarchicalMenu' }),\n    createWidgetMixin({ connector: connectHierarchicalMenu }),\n    createPanelConsumerMixin({\n      mapStateToCanRefine,\n    }),\n  ],\n  components: {\n    HierarchicalMenuList,\n  },\n  props: {\n    attributes: {\n      type: Array,\n      required: true,\n    },\n    limit: {\n      type: Number,\n      default: undefined,\n    },\n    showMoreLimit: {\n      type: Number,\n      default: undefined,\n    },\n    showMore: {\n      type: Boolean,\n      default: false,\n    },\n    sortBy: {\n      type: [Array, Function],\n      default: undefined,\n    },\n    separator: {\n      type: String,\n      default: undefined,\n    },\n    rootPath: {\n      type: String,\n      default: undefined,\n    },\n    showParentLevel: {\n      type: Boolean,\n      default: undefined,\n    },\n    transformItems: {\n      type: Function,\n      default: undefined,\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        attributes: this.attributes,\n        limit: this.limit,\n        showMore: this.showMore,\n        showMoreLimit: this.showMoreLimit,\n        separator: this.separator,\n        rootPath: this.rootPath,\n        showParentLevel: this.showParentLevel,\n        sortBy: this.sortBy,\n        transformItems: this.transformItems,\n      };\n    },\n    canRefine() {\n      return mapStateToCanRefine(this.state);\n    },\n  },\n};\n</script>\n","/**\n * This implementation is taken from Lodash implementation.\n * See: https://github.com/lodash/lodash/blob/4.17.11-npm/unescape.js\n */\n\n/** Used to map HTML entities to characters. */\nconst htmlUnescapes = {\n  '&amp;': '&',\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&#39;': \"'\",\n};\n\n/** Used to match HTML entities and HTML characters. */\nconst reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g;\nconst reHasEscapedHtml = RegExp(reEscapedHtml.source);\n\n/**\n * The inverse of `_.escape`; this method converts the HTML entities\n * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n * their corresponding characters.\n *\n * **Note:** No other HTML entities are unescaped. To unescape additional\n * HTML entities use a third-party library like [_he_](https://mths.be/he).\n *\n * @static\n * @memberOf _\n * @since 0.6.0\n * @category String\n * @param {string} [string=''] The string to unescape.\n * @returns {string} Returns the unescaped string.\n * @example\n *\n * _.unescape('fred, barney, &amp; pebbles');\n * // => 'fred, barney, & pebbles'\n */\nexport function unescape(string) {\n  return string && reHasEscapedHtml.test(string)\n    ? string.replace(reEscapedHtml, character => htmlUnescapes[character])\n    : string;\n}\n","// copied from React InstantSearch\nimport { getPropertyByPath } from 'instantsearch.js/es/lib/utils';\nimport { unescape } from '../util/unescape';\n\nconst TAG_PLACEHOLDER = {\n  highlightPreTag: '__ais-highlight__',\n  highlightPostTag: '__/ais-highlight__',\n};\n\n/**\n * Parses an highlighted attribute into an array of objects with the string value, and\n * a boolean that indicated if this part is highlighted.\n *\n * @param {string} preTag - string used to identify the start of an highlighted value\n * @param {string} postTag - string used to identify the end of an highlighted value\n * @param {string} highlightedValue - highlighted attribute as returned by Algolia highlight feature\n * @return {object[]} - An array of {value: string, isHighlighted: boolean}.\n */\nfunction parseHighlightedAttribute({ preTag, postTag, highlightedValue = '' }) {\n  const splitByPreTag = highlightedValue.split(preTag);\n  const firstValue = splitByPreTag.shift();\n  const elements =\n    firstValue === '' ? [] : [{ value: firstValue, isHighlighted: false }];\n\n  if (postTag === preTag) {\n    let isHighlighted = true;\n    splitByPreTag.forEach(split => {\n      elements.push({ value: split, isHighlighted });\n      isHighlighted = !isHighlighted;\n    });\n  } else {\n    splitByPreTag.forEach(split => {\n      const splitByPostTag = split.split(postTag);\n\n      elements.push({\n        value: splitByPostTag[0],\n        isHighlighted: true,\n      });\n\n      if (splitByPostTag[1] !== '') {\n        elements.push({\n          // Vue removes nodes which are just a single space (vuejs/vue#9208),\n          // we replace this by two spaces, which does not have an impact,\n          // unless someone would have `white-space: pre` on the highlights\n          value: splitByPostTag[1] === ' ' ? '  ' : splitByPostTag[1],\n          isHighlighted: false,\n        });\n      }\n    });\n  }\n\n  return elements;\n}\n\n/**\n * Find an highlighted attribute given an `attribute` and an `highlightProperty`, parses it,\n * and provided an array of objects with the string value and a boolean if this\n * value is highlighted.\n *\n * In order to use this feature, highlight must be activated in the configuration of\n * the index. The `preTag` and `postTag` attributes are respectively highlightPreTag and\n * highlightPostTag in Algolia configuration.\n *\n * @param {string} preTag - string used to identify the start of an highlighted value\n * @param {string} postTag - string used to identify the end of an highlighted value\n * @param {string} highlightProperty - the property that contains the highlight structure in the results\n * @param {string} attribute - the highlighted attribute to look for\n * @param {object} hit - the actual hit returned by Algolia.\n * @return {object[]} - An array of {value: string, isHighlighted: boolean}.\n */\nexport function parseAlgoliaHit({\n  preTag = TAG_PLACEHOLDER.highlightPreTag,\n  postTag = TAG_PLACEHOLDER.highlightPostTag,\n  highlightProperty,\n  attribute,\n  hit,\n}) {\n  if (!hit) throw new Error('`hit`, the matching record, must be provided');\n\n  const highlightObject =\n    getPropertyByPath(hit[highlightProperty], attribute) || {};\n\n  if (Array.isArray(highlightObject)) {\n    return highlightObject.map(item =>\n      parseHighlightedAttribute({\n        preTag,\n        postTag,\n        highlightedValue: unescape(item.value),\n      })\n    );\n  }\n\n  return parseHighlightedAttribute({\n    preTag,\n    postTag,\n    highlightedValue: unescape(highlightObject.value),\n  });\n}\n","<template>\n  <span :class=\"suit()\">\n    <component\n      v-for=\"({ value, isHighlighted }, index) in parsedHighlights\"\n      :class=\"[isHighlighted && suit('highlighted')]\"\n      :key=\"index\"\n      :is=\"isHighlighted ? highlightedTagName : TextNode\"\n    >{{ value }}</component>\n  </span>\n</template>\n\n<script>\nimport { isVue3 } from '../util/vue-compat';\nimport { parseAlgoliaHit } from '../util/parseAlgoliaHit';\n\nconst TextNode = isVue3\n  ? (props, context) => context.slots.default()\n  : {\n      functional: true,\n      render(createElement, context) {\n        const slots = context.slots();\n        return slots.default;\n      },\n    };\n\nexport default {\n  name: 'AisHighlighter',\n  props: {\n    hit: {\n      type: Object,\n      required: true,\n    },\n    attribute: {\n      type: String,\n      required: true,\n    },\n    highlightedTagName: {\n      type: String,\n      default: 'mark',\n    },\n    suit: {\n      type: Function,\n      required: true,\n    },\n    highlightProperty: {\n      type: String,\n      required: true,\n    },\n    preTag: {\n      type: String,\n      required: true,\n    },\n    postTag: {\n      type: String,\n      required: true,\n    },\n  },\n  data() {\n    return { TextNode };\n  },\n  computed: {\n    parsedHighlights() {\n      return parseAlgoliaHit({\n        attribute: this.attribute,\n        hit: this.hit,\n        highlightProperty: this.highlightProperty,\n        preTag: this.preTag,\n        postTag: this.postTag,\n      });\n    },\n  },\n};\n</script>\n","<template>\n  <span :class=\"suit()\">\n    <component\n      v-for=\"({ value, isHighlighted }, index) in parsedHighlights\"\n      :class=\"[isHighlighted && suit('highlighted')]\"\n      :key=\"index\"\n      :is=\"isHighlighted ? highlightedTagName : TextNode\"\n    >{{ value }}</component>\n  </span>\n</template>\n\n<script>\nimport { isVue3 } from '../util/vue-compat';\nimport { parseAlgoliaHit } from '../util/parseAlgoliaHit';\n\nconst TextNode = isVue3\n  ? (props, context) => context.slots.default()\n  : {\n      functional: true,\n      render(createElement, context) {\n        const slots = context.slots();\n        return slots.default;\n      },\n    };\n\nexport default {\n  name: 'AisHighlighter',\n  props: {\n    hit: {\n      type: Object,\n      required: true,\n    },\n    attribute: {\n      type: String,\n      required: true,\n    },\n    highlightedTagName: {\n      type: String,\n      default: 'mark',\n    },\n    suit: {\n      type: Function,\n      required: true,\n    },\n    highlightProperty: {\n      type: String,\n      required: true,\n    },\n    preTag: {\n      type: String,\n      required: true,\n    },\n    postTag: {\n      type: String,\n      required: true,\n    },\n  },\n  data() {\n    return { TextNode };\n  },\n  computed: {\n    parsedHighlights() {\n      return parseAlgoliaHit({\n        attribute: this.attribute,\n        hit: this.hit,\n        highlightProperty: this.highlightProperty,\n        preTag: this.preTag,\n        postTag: this.postTag,\n      });\n    },\n  },\n};\n</script>\n","<template>\n  <ais-highlighter\n    :hit=\"hit\"\n    :attribute=\"attribute\"\n    :highlighted-tag-name=\"highlightedTagName\"\n    :suit=\"suit\"\n    highlight-property=\"_highlightResult\"\n    pre-tag=\"<mark>\"\n    post-tag=\"</mark>\"\n  />\n</template>\n\n<script>\nimport { createSuitMixin } from '../mixins/suit';\nimport AisHighlighter from './Highlighter.vue';\n\nexport default {\n  name: 'AisHighlight',\n  mixins: [createSuitMixin({ name: 'Highlight' })],\n  components: { AisHighlighter },\n  props: {\n    hit: {\n      type: Object,\n      required: true,\n    },\n    attribute: {\n      type: String,\n      required: true,\n    },\n    highlightedTagName: {\n      type: String,\n      default: 'mark',\n    },\n  },\n};\n</script>\n","<template>\n  <ais-highlighter\n    :hit=\"hit\"\n    :attribute=\"attribute\"\n    :highlighted-tag-name=\"highlightedTagName\"\n    :suit=\"suit\"\n    highlight-property=\"_highlightResult\"\n    pre-tag=\"<mark>\"\n    post-tag=\"</mark>\"\n  />\n</template>\n\n<script>\nimport { createSuitMixin } from '../mixins/suit';\nimport AisHighlighter from './Highlighter.vue';\n\nexport default {\n  name: 'AisHighlight',\n  mixins: [createSuitMixin({ name: 'Highlight' })],\n  components: { AisHighlighter },\n  props: {\n    hit: {\n      type: Object,\n      required: true,\n    },\n    attribute: {\n      type: String,\n      required: true,\n    },\n    highlightedTagName: {\n      type: String,\n      default: 'mark',\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    v-if=\"state\"\n    :class=\"suit()\"\n  >\n    <slot\n      :items=\"items\"\n      :insights=\"state.insights\"\n      :send-event=\"state.sendEvent\"\n    >\n      <ol :class=\"suit('list')\">\n        <li\n          v-for=\"(item, itemIndex) in items\"\n          :key=\"item.objectID\"\n          :class=\"suit('item')\"\n        >\n          <slot\n            name=\"item\"\n            :item=\"item\"\n            :index=\"itemIndex\"\n            :insights=\"state.insights\"\n          >objectID: {{ item.objectID }}, index: {{ itemIndex }}</slot>\n        </li>\n      </ol>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectHitsWithInsights } from 'instantsearch.js/es/connectors';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisHits',\n  mixins: [\n    createWidgetMixin({ connector: connectHitsWithInsights }),\n    createSuitMixin({ name: 'Hits' }),\n  ],\n  props: {\n    escapeHTML: {\n      type: Boolean,\n      default: true,\n    },\n    transformItems: {\n      type: Function,\n      default: undefined,\n    },\n  },\n  computed: {\n    items() {\n      return this.state.hits;\n    },\n    widgetParams() {\n      return {\n        escapeHTML: this.escapeHTML,\n        transformItems: this.transformItems,\n      };\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    v-if=\"state\"\n    :class=\"suit()\"\n  >\n    <slot\n      :items=\"items\"\n      :insights=\"state.insights\"\n      :send-event=\"state.sendEvent\"\n    >\n      <ol :class=\"suit('list')\">\n        <li\n          v-for=\"(item, itemIndex) in items\"\n          :key=\"item.objectID\"\n          :class=\"suit('item')\"\n        >\n          <slot\n            name=\"item\"\n            :item=\"item\"\n            :index=\"itemIndex\"\n            :insights=\"state.insights\"\n          >objectID: {{ item.objectID }}, index: {{ itemIndex }}</slot>\n        </li>\n      </ol>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectHitsWithInsights } from 'instantsearch.js/es/connectors';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisHits',\n  mixins: [\n    createWidgetMixin({ connector: connectHitsWithInsights }),\n    createSuitMixin({ name: 'Hits' }),\n  ],\n  props: {\n    escapeHTML: {\n      type: Boolean,\n      default: true,\n    },\n    transformItems: {\n      type: Function,\n      default: undefined,\n    },\n  },\n  computed: {\n    items() {\n      return this.state.hits;\n    },\n    widgetParams() {\n      return {\n        escapeHTML: this.escapeHTML,\n        transformItems: this.transformItems,\n      };\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    v-if=\"state\"\n    :class=\"suit()\"\n  >\n    <slot\n      :items=\"state.items\"\n      :refine=\"state.refine\"\n      :hasNoResults=\"state.hasNoResults\"\n    >\n      <select\n        :class=\"suit('select')\"\n        v-model=\"selected\"\n        @change=\"handleChange\"\n      >\n        <option\n          v-for=\"item in state.items\"\n          :key=\"item.value\"\n          :class=\"suit('option')\"\n          :value=\"item.value\"\n        >{{ item.label }}</option>\n      </select>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectHitsPerPage } from 'instantsearch.js/es/connectors';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisHitsPerPage',\n  mixins: [\n    createSuitMixin({ name: 'HitsPerPage' }),\n    createWidgetMixin({ connector: connectHitsPerPage }),\n    createPanelConsumerMixin({\n      mapStateToCanRefine: state => state.hasNoResults === false,\n    }),\n  ],\n  props: {\n    items: {\n      type: Array,\n      required: true,\n    },\n    transformItems: {\n      type: Function,\n      default: undefined,\n    },\n  },\n  data() {\n    return {\n      selected: this.items.find(item => item.default === true).value,\n    };\n  },\n  computed: {\n    widgetParams() {\n      return {\n        items: this.items,\n        transformItems: this.transformItems,\n      };\n    },\n  },\n  methods: {\n    handleChange() {\n      this.state.refine(this.selected);\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    v-if=\"state\"\n    :class=\"suit()\"\n  >\n    <slot\n      :items=\"state.items\"\n      :refine=\"state.refine\"\n      :hasNoResults=\"state.hasNoResults\"\n    >\n      <select\n        :class=\"suit('select')\"\n        v-model=\"selected\"\n        @change=\"handleChange\"\n      >\n        <option\n          v-for=\"item in state.items\"\n          :key=\"item.value\"\n          :class=\"suit('option')\"\n          :value=\"item.value\"\n        >{{ item.label }}</option>\n      </select>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectHitsPerPage } from 'instantsearch.js/es/connectors';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisHitsPerPage',\n  mixins: [\n    createSuitMixin({ name: 'HitsPerPage' }),\n    createWidgetMixin({ connector: connectHitsPerPage }),\n    createPanelConsumerMixin({\n      mapStateToCanRefine: state => state.hasNoResults === false,\n    }),\n  ],\n  props: {\n    items: {\n      type: Array,\n      required: true,\n    },\n    transformItems: {\n      type: Function,\n      default: undefined,\n    },\n  },\n  data() {\n    return {\n      selected: this.items.find(item => item.default === true).value,\n    };\n  },\n  computed: {\n    widgetParams() {\n      return {\n        items: this.items,\n        transformItems: this.transformItems,\n      };\n    },\n  },\n  methods: {\n    handleChange() {\n      this.state.refine(this.selected);\n    },\n  },\n};\n</script>\n","import { createSuitMixin } from '../mixins/suit';\nimport { createWidgetMixin } from '../mixins/widget';\nimport indexWidget from 'instantsearch.js/es/widgets/index/index';\nimport { renderCompat, getDefaultSlot } from '../util/vue-compat';\n\n// wrapped in a dummy function, since indexWidget doesn't render\nconst connectIndex = () => indexWidget;\n\nexport default {\n  name: 'AisIndex',\n  mixins: [\n    createSuitMixin({ name: 'Index' }),\n    createWidgetMixin({ connector: connectIndex }),\n  ],\n  provide() {\n    return {\n      // The widget is created & registered by widgetMixin, accessor is needed\n      // because provide is not reactive.\n      $_ais_getParentIndex: () => this.widget,\n    };\n  },\n  props: {\n    indexName: {\n      type: String,\n      required: true,\n    },\n    indexId: {\n      type: String,\n      required: false,\n    },\n  },\n  render: renderCompat(function(h) {\n    return h('div', {}, getDefaultSlot(this));\n  }),\n  computed: {\n    widgetParams() {\n      return {\n        indexName: this.indexName,\n        indexId: this.indexId,\n      };\n    },\n  },\n};\n","/* eslint-disable */\n\n// source: @babel/plugin-proposal-object-rest-spread@7.2.0\n// prettier-ignore\nexport function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\n// source: @babel/plugin-proposal-object-rest-spread@7.2.0\n// prettier-ignore\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n","import { createSuitMixin } from '../mixins/suit';\nimport { version } from '../../package.json'; // rollup does pick only what needed from json\nimport { _objectSpread } from './polyfills';\nimport { isVue3, version as vueVersion } from '../util/vue-compat';\n\nexport const createInstantSearchComponent = component =>\n  _objectSpread(\n    {\n      mixins: [createSuitMixin({ name: 'InstantSearch' })],\n      provide() {\n        return {\n          $_ais_instantSearchInstance: this.instantSearchInstance,\n        };\n      },\n      watch: {\n        searchClient(searchClient) {\n          this.instantSearchInstance.helper.setClient(searchClient).search();\n        },\n        indexName(indexName) {\n          this.instantSearchInstance.helper.setIndex(indexName).search();\n        },\n        stalledSearchDelay(stalledSearchDelay) {\n          // private InstantSearch.js API:\n          this.instantSearchInstance._stalledSearchDelay = stalledSearchDelay;\n        },\n        routing() {\n          throw new Error(\n            'routing configuration can not be changed dynamically at this point.' +\n              '\\n\\n' +\n              'Please open a new issue: https://github.com/algolia/vue-instantsearch/issues/new?template=feature.md'\n          );\n        },\n        searchFunction(searchFunction) {\n          // private InstantSearch.js API:\n          this.instantSearchInstance._searchFunction = searchFunction;\n        },\n        middlewares: {\n          immediate: true,\n          handler(next, prev) {\n            (prev || [])\n              .filter(middleware => (next || []).indexOf(middleware) === -1)\n              .forEach(middlewareToRemove => {\n                this.instantSearchInstance.unuse(middlewareToRemove);\n              });\n\n            (next || [])\n              .filter(middleware => (prev || []).indexOf(middleware) === -1)\n              .forEach(middlewareToAdd => {\n                this.instantSearchInstance.use(middlewareToAdd);\n              });\n          },\n        },\n      },\n      created() {\n        const searchClient = this.instantSearchInstance.client;\n        if (typeof searchClient.addAlgoliaAgent === 'function') {\n          searchClient.addAlgoliaAgent(`Vue (${vueVersion})`);\n          searchClient.addAlgoliaAgent(`Vue InstantSearch (${version})`);\n        }\n      },\n      mounted() {\n        // from the documentation: https://vuejs.org/v2/api/#mounted\n        // \"Note that mounted does not guarantee that all child components have also been mounted. If you want to\n        // wait until the entire view has been rendered, you can use vm.$nextTick inside of mounted\"\n        this.$nextTick(() => {\n          if (!this.instantSearchInstance.started) {\n            this.instantSearchInstance.start();\n          }\n        });\n      },\n      [isVue3 ? 'beforeUnmount' : 'beforeDestroy']() {\n        if (this.instantSearchInstance.started) {\n          this.instantSearchInstance.dispose();\n        }\n\n        // a hydrated instance will no longer be hydrated once disposed, and starts from scratch\n        this.instantSearchInstance.__initialSearchResults = undefined;\n      },\n    },\n    component\n  );\n","import instantsearch from 'instantsearch.js/es';\nimport { createInstantSearchComponent } from '../util/createInstantSearchComponent';\nimport { warn } from '../util/warn';\nimport { renderCompat, getDefaultSlot } from '../util/vue-compat';\n\nconst oldApiWarning = `Vue InstantSearch: You used the prop api-key or app-id.\nThese have been replaced by search-client.\n\nSee more info here: https://www.algolia.com/doc/api-reference/widgets/instantsearch/vue/#widget-param-search-client`;\n\nexport default createInstantSearchComponent({\n  name: 'AisInstantSearch',\n  props: {\n    searchClient: {\n      type: Object,\n      required: true,\n    },\n    insightsClient: {\n      type: Function,\n      default: undefined,\n    },\n    indexName: {\n      type: String,\n      required: true,\n    },\n    routing: {\n      default: undefined,\n      validator(value) {\n        if (\n          typeof value === 'boolean' ||\n          (!value.router && !value.stateMapping)\n        ) {\n          warn(\n            'The `routing` option expects an object with `router` and/or `stateMapping`.\\n\\nSee https://www.algolia.com/doc/api-reference/widgets/instantsearch/vue/#widget-param-routing'\n          );\n          return false;\n        }\n        return true;\n      },\n    },\n    stalledSearchDelay: {\n      type: Number,\n      default: undefined,\n    },\n    searchFunction: {\n      type: Function,\n      default: undefined,\n    },\n    initialUiState: {\n      type: Object,\n      default: undefined,\n    },\n    apiKey: {\n      type: String,\n      default: undefined,\n      validator(value) {\n        if (value) {\n          warn(oldApiWarning);\n        }\n        return false;\n      },\n    },\n    appId: {\n      type: String,\n      default: undefined,\n      validator(value) {\n        if (value) {\n          warn(oldApiWarning);\n        }\n        return false;\n      },\n    },\n    middlewares: {\n      type: Array,\n      default: null,\n    },\n  },\n  data() {\n    return {\n      instantSearchInstance: instantsearch({\n        searchClient: this.searchClient,\n        insightsClient: this.insightsClient,\n        indexName: this.indexName,\n        routing: this.routing,\n        stalledSearchDelay: this.stalledSearchDelay,\n        searchFunction: this.searchFunction,\n        initialUiState: this.initialUiState,\n      }),\n    };\n  },\n  render: renderCompat(function(h) {\n    return h(\n      'div',\n      {\n        class: {\n          [this.suit()]: true,\n          [this.suit('', 'ssr')]: false,\n        },\n      },\n      getDefaultSlot(this)\n    );\n  }),\n});\n","import { createInstantSearchComponent } from '../util/createInstantSearchComponent';\nimport { renderCompat, getDefaultSlot } from '../util/vue-compat';\n\nexport default createInstantSearchComponent({\n  name: 'AisInstantSearchSsr',\n  inject: {\n    $_ais_ssrInstantSearchInstance: {\n      default() {\n        throw new Error('`createServerRootMixin` is required when using SSR.');\n      },\n    },\n  },\n  data() {\n    return {\n      instantSearchInstance: this.$_ais_ssrInstantSearchInstance,\n    };\n  },\n  render: renderCompat(function(h) {\n    return h(\n      'div',\n      {\n        class: {\n          [this.suit()]: true,\n          [this.suit('', 'ssr')]: true,\n        },\n      },\n      getDefaultSlot(this)\n    );\n  }),\n});\n","<template>\n  <div\n    v-if=\"state\"\n    :class=\"suit()\"\n  >\n\n    <slot\n      v-if=\"showPrevious\"\n      name=\"loadPrevious\"\n      :refine-previous=\"refinePrevious\"\n      :page=\"state.results.page\"\n      :is-first-page=\"state.isFirstPage\"\n    >\n      <button\n        :class=\"[suit('loadPrevious'), state.isFirstPage && suit('loadPrevious', 'disabled')]\"\n        :disabled=\"state.isFirstPage\"\n        @click=\"refinePrevious()\"\n      >Show previous results</button>\n    </slot>\n\n    <slot\n      :items=\"items\"\n      :results=\"state.results\"\n      :is-last-page=\"state.isLastPage\"\n      :refine-previous=\"refinePrevious\"\n      :refine-next=\"refineNext\"\n      :refine=\"refineNext\"\n      :insights=\"state.insights\"\n      :send-event=\"state.sendEvent\"\n    >\n      <ol :class=\"suit('list')\">\n        <li\n          v-for=\"(item, index) in items\"\n          :class=\"suit('item')\"\n          :key=\"item.objectID\"\n        >\n          <slot\n            name=\"item\"\n            :item=\"item\"\n            :index=\"index\"\n            :insights=\"state.insights\"\n          >objectID: {{ item.objectID }}, index: {{ index }}</slot>\n        </li>\n      </ol>\n\n      <slot\n        name=\"loadMore\"\n        :refine-next=\"refineNext\"\n        :refine=\"refineNext\"\n        :page=\"state.results.page\"\n        :is-last-page=\"state.isLastPage\"\n      >\n        <button\n          :class=\"[suit('loadMore'), state.isLastPage && suit('loadMore', 'disabled')]\"\n          :disabled=\"state.isLastPage\"\n          @click=\"refineNext()\"\n        >Show more results</button>\n      </slot>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { createWidgetMixin } from '../mixins/widget';\nimport { connectInfiniteHitsWithInsights } from 'instantsearch.js/es/connectors';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisInfiniteHits',\n  mixins: [\n    createWidgetMixin({ connector: connectInfiniteHitsWithInsights }),\n    createSuitMixin({ name: 'InfiniteHits' }),\n  ],\n  props: {\n    showPrevious: {\n      type: Boolean,\n      default: false,\n    },\n    escapeHTML: {\n      type: Boolean,\n      default: true,\n    },\n    transformItems: {\n      type: Function,\n      default: undefined,\n    },\n    cache: {\n      type: Object,\n      default: undefined,\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        showPrevious: this.showPrevious,\n        escapeHTML: this.escapeHTML,\n        transformItems: this.transformItems,\n        cache: this.cache,\n      };\n    },\n    items() {\n      // Fixes InstantSearch.js connectors API: every list\n      // of things must be called `items`\n      return this.state.hits;\n    },\n  },\n  methods: {\n    refinePrevious() {\n      this.state.showPrevious();\n    },\n    refineNext() {\n      this.state.showMore();\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    v-if=\"state\"\n    :class=\"suit()\"\n  >\n\n    <slot\n      v-if=\"showPrevious\"\n      name=\"loadPrevious\"\n      :refine-previous=\"refinePrevious\"\n      :page=\"state.results.page\"\n      :is-first-page=\"state.isFirstPage\"\n    >\n      <button\n        :class=\"[suit('loadPrevious'), state.isFirstPage && suit('loadPrevious', 'disabled')]\"\n        :disabled=\"state.isFirstPage\"\n        @click=\"refinePrevious()\"\n      >Show previous results</button>\n    </slot>\n\n    <slot\n      :items=\"items\"\n      :results=\"state.results\"\n      :is-last-page=\"state.isLastPage\"\n      :refine-previous=\"refinePrevious\"\n      :refine-next=\"refineNext\"\n      :refine=\"refineNext\"\n      :insights=\"state.insights\"\n      :send-event=\"state.sendEvent\"\n    >\n      <ol :class=\"suit('list')\">\n        <li\n          v-for=\"(item, index) in items\"\n          :class=\"suit('item')\"\n          :key=\"item.objectID\"\n        >\n          <slot\n            name=\"item\"\n            :item=\"item\"\n            :index=\"index\"\n            :insights=\"state.insights\"\n          >objectID: {{ item.objectID }}, index: {{ index }}</slot>\n        </li>\n      </ol>\n\n      <slot\n        name=\"loadMore\"\n        :refine-next=\"refineNext\"\n        :refine=\"refineNext\"\n        :page=\"state.results.page\"\n        :is-last-page=\"state.isLastPage\"\n      >\n        <button\n          :class=\"[suit('loadMore'), state.isLastPage && suit('loadMore', 'disabled')]\"\n          :disabled=\"state.isLastPage\"\n          @click=\"refineNext()\"\n        >Show more results</button>\n      </slot>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { createWidgetMixin } from '../mixins/widget';\nimport { connectInfiniteHitsWithInsights } from 'instantsearch.js/es/connectors';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisInfiniteHits',\n  mixins: [\n    createWidgetMixin({ connector: connectInfiniteHitsWithInsights }),\n    createSuitMixin({ name: 'InfiniteHits' }),\n  ],\n  props: {\n    showPrevious: {\n      type: Boolean,\n      default: false,\n    },\n    escapeHTML: {\n      type: Boolean,\n      default: true,\n    },\n    transformItems: {\n      type: Function,\n      default: undefined,\n    },\n    cache: {\n      type: Object,\n      default: undefined,\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        showPrevious: this.showPrevious,\n        escapeHTML: this.escapeHTML,\n        transformItems: this.transformItems,\n        cache: this.cache,\n      };\n    },\n    items() {\n      // Fixes InstantSearch.js connectors API: every list\n      // of things must be called `items`\n      return this.state.hits;\n    },\n  },\n  methods: {\n    refinePrevious() {\n      this.state.showPrevious();\n    },\n    refineNext() {\n      this.state.showMore();\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    v-if=\"state\"\n    :class=\"[suit(), !state.canRefine && suit('', 'noRefinement')]\"\n  >\n    <slot\n      :items=\"state.items\"\n      :can-refine=\"state.canRefine\"\n      :can-toggle-show-more=\"state.canToggleShowMore\"\n      :is-showing-more=\"state.isShowingMore\"\n      :refine=\"state.refine\"\n      :createURL=\"state.createURL\"\n      :toggle-show-more=\"state.toggleShowMore\"\n      :send-event=\"state.sendEvent\"\n    >\n      <ul :class=\"suit('list')\">\n        <li\n          v-for=\"item in state.items\"\n          :key=\"item.value\"\n          :class=\"[suit('item'), item.isRefined && suit('item', 'selected')]\"\n        >\n          <a\n            :href=\"state.createURL(item.value)\"\n            :class=\"suit('link')\"\n            @click.prevent=\"state.refine(item.value)\"\n          >\n            <span :class=\"suit('label')\">{{ item.label }}</span>\n            <span :class=\"suit('count')\">{{ item.count }}</span>\n          </a>\n        </li>\n      </ul>\n\n      <button\n        v-if=\"showShowMoreButton\"\n        :class=\"[suit('showMore'), !state.canToggleShowMore && suit('showMore', 'disabled')]\"\n        :disabled=\"!state.canToggleShowMore\"\n        @click.prevent=\"state.toggleShowMore()\"\n      >\n        <slot\n          name=\"showMoreLabel\"\n          :is-showing-more=\"state.isShowingMore\"\n        >{{ state.isShowingMore ? 'Show less' : 'Show more' }}</slot>\n      </button>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectMenu } from 'instantsearch.js/es/connectors';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisMenu',\n  mixins: [\n    createSuitMixin({ name: 'Menu' }),\n    createWidgetMixin({ connector: connectMenu }),\n    createPanelConsumerMixin({\n      mapStateToCanRefine: state => Boolean(state.canRefine),\n    }),\n  ],\n  props: {\n    attribute: {\n      type: String,\n      required: true,\n    },\n    // TODO: implement searchable in connector\n    // searchable: {\n    //   type: Boolean,\n    //   default: false,\n    // },\n    limit: {\n      type: Number,\n      default: undefined,\n    },\n    showMoreLimit: {\n      type: Number,\n      default: undefined,\n    },\n    showMore: {\n      type: Boolean,\n      default: false,\n    },\n    sortBy: {\n      type: [Array, Function],\n      default: undefined,\n    },\n    transformItems: {\n      type: Function,\n      default: undefined,\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        attribute: this.attribute,\n        limit: this.limit,\n        showMore: this.showMore,\n        showMoreLimit: this.showMoreLimit,\n        sortBy: this.sortBy,\n        transformItems: this.transformItems,\n      };\n    },\n    showShowMoreButton() {\n      return this.state.canRefine && this.showMore;\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    v-if=\"state\"\n    :class=\"[suit(), !state.canRefine && suit('', 'noRefinement')]\"\n  >\n    <slot\n      :items=\"state.items\"\n      :can-refine=\"state.canRefine\"\n      :can-toggle-show-more=\"state.canToggleShowMore\"\n      :is-showing-more=\"state.isShowingMore\"\n      :refine=\"state.refine\"\n      :createURL=\"state.createURL\"\n      :toggle-show-more=\"state.toggleShowMore\"\n      :send-event=\"state.sendEvent\"\n    >\n      <ul :class=\"suit('list')\">\n        <li\n          v-for=\"item in state.items\"\n          :key=\"item.value\"\n          :class=\"[suit('item'), item.isRefined && suit('item', 'selected')]\"\n        >\n          <a\n            :href=\"state.createURL(item.value)\"\n            :class=\"suit('link')\"\n            @click.prevent=\"state.refine(item.value)\"\n          >\n            <span :class=\"suit('label')\">{{ item.label }}</span>\n            <span :class=\"suit('count')\">{{ item.count }}</span>\n          </a>\n        </li>\n      </ul>\n\n      <button\n        v-if=\"showShowMoreButton\"\n        :class=\"[suit('showMore'), !state.canToggleShowMore && suit('showMore', 'disabled')]\"\n        :disabled=\"!state.canToggleShowMore\"\n        @click.prevent=\"state.toggleShowMore()\"\n      >\n        <slot\n          name=\"showMoreLabel\"\n          :is-showing-more=\"state.isShowingMore\"\n        >{{ state.isShowingMore ? 'Show less' : 'Show more' }}</slot>\n      </button>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectMenu } from 'instantsearch.js/es/connectors';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisMenu',\n  mixins: [\n    createSuitMixin({ name: 'Menu' }),\n    createWidgetMixin({ connector: connectMenu }),\n    createPanelConsumerMixin({\n      mapStateToCanRefine: state => Boolean(state.canRefine),\n    }),\n  ],\n  props: {\n    attribute: {\n      type: String,\n      required: true,\n    },\n    // TODO: implement searchable in connector\n    // searchable: {\n    //   type: Boolean,\n    //   default: false,\n    // },\n    limit: {\n      type: Number,\n      default: undefined,\n    },\n    showMoreLimit: {\n      type: Number,\n      default: undefined,\n    },\n    showMore: {\n      type: Boolean,\n      default: false,\n    },\n    sortBy: {\n      type: [Array, Function],\n      default: undefined,\n    },\n    transformItems: {\n      type: Function,\n      default: undefined,\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        attribute: this.attribute,\n        limit: this.limit,\n        showMore: this.showMore,\n        showMoreLimit: this.showMoreLimit,\n        sortBy: this.sortBy,\n        transformItems: this.transformItems,\n      };\n    },\n    showShowMoreButton() {\n      return this.state.canRefine && this.showMore;\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    :class=\"[suit(), !state.canRefine && suit('', 'noRefinement')]\"\n    v-if=\"state\"\n  >\n    <slot\n      :items=\"state.items\"\n      :can-refine=\"state.canRefine\"\n      :refine=\"refine\"\n      :createURL=\"state.createURL\"\n      :send-event=\"state.sendEvent\"\n    >\n      <select\n        :class=\"suit('select')\"\n        @change=\"refine($event.currentTarget.value)\"\n      >\n        <option\n          :class=\"suit('option')\"\n          value=\"\"\n        >\n          <slot name=\"defaultOption\">See all</slot>\n        </option>\n        <option\n          v-for=\"item in state.items\"\n          :key=\"item.value\"\n          :class=\"suit('option')\"\n          :value=\"item.value\"\n          :selected=\"item.isRefined\"\n        >\n          <slot\n            name=\"item\"\n            :item=\"item\"\n          >{{ item.label }} ({{ item.count }})</slot>\n        </option>\n      </select>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectMenu } from 'instantsearch.js/es/connectors';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisMenuSelect',\n  mixins: [\n    createSuitMixin({ name: 'MenuSelect' }),\n    createWidgetMixin({ connector: connectMenu }),\n    createPanelConsumerMixin({\n      mapStateToCanRefine: state => Boolean(state.canRefine),\n    }),\n  ],\n  props: {\n    attribute: {\n      type: String,\n      required: true,\n    },\n    limit: {\n      type: Number,\n      default: 10,\n    },\n    sortBy: {\n      type: [Array, Function],\n      default: undefined,\n    },\n    transformItems: {\n      type: Function,\n      default(items) {\n        return items;\n      },\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        attribute: this.attribute,\n        limit: this.limit,\n        sortBy: this.sortBy,\n        transformItems: this.transformItems,\n      };\n    },\n  },\n  methods: {\n    refine(value) {\n      this.state.refine(value);\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    :class=\"[suit(), !state.canRefine && suit('', 'noRefinement')]\"\n    v-if=\"state\"\n  >\n    <slot\n      :items=\"state.items\"\n      :can-refine=\"state.canRefine\"\n      :refine=\"refine\"\n      :createURL=\"state.createURL\"\n      :send-event=\"state.sendEvent\"\n    >\n      <select\n        :class=\"suit('select')\"\n        @change=\"refine($event.currentTarget.value)\"\n      >\n        <option\n          :class=\"suit('option')\"\n          value=\"\"\n        >\n          <slot name=\"defaultOption\">See all</slot>\n        </option>\n        <option\n          v-for=\"item in state.items\"\n          :key=\"item.value\"\n          :class=\"suit('option')\"\n          :value=\"item.value\"\n          :selected=\"item.isRefined\"\n        >\n          <slot\n            name=\"item\"\n            :item=\"item\"\n          >{{ item.label }} ({{ item.count }})</slot>\n        </option>\n      </select>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectMenu } from 'instantsearch.js/es/connectors';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisMenuSelect',\n  mixins: [\n    createSuitMixin({ name: 'MenuSelect' }),\n    createWidgetMixin({ connector: connectMenu }),\n    createPanelConsumerMixin({\n      mapStateToCanRefine: state => Boolean(state.canRefine),\n    }),\n  ],\n  props: {\n    attribute: {\n      type: String,\n      required: true,\n    },\n    limit: {\n      type: Number,\n      default: 10,\n    },\n    sortBy: {\n      type: [Array, Function],\n      default: undefined,\n    },\n    transformItems: {\n      type: Function,\n      default(items) {\n        return items;\n      },\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        attribute: this.attribute,\n        limit: this.limit,\n        sortBy: this.sortBy,\n        transformItems: this.transformItems,\n      };\n    },\n  },\n  methods: {\n    refine(value) {\n      this.state.refine(value);\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    v-if=\"state\"\n    :class=\"[suit(), !canRefine && suit('', 'noRefinement')]\"\n  >\n    <slot\n      :items=\"state.items\"\n      :can-refine=\"canRefine\"\n      :refine=\"state.refine\"\n      :createURL=\"state.createURL\"\n      :send-event=\"state.sendEvent\"\n    >\n      <ul :class=\"[suit('list')]\">\n        <li\n          v-for=\"item in state.items\"\n          :key=\"item.label\"\n          :class=\"[suit('item'), item.isRefined && suit('item', 'selected')]\"\n        >\n          <label :class=\"suit('label')\">\n            <input\n              type=\"radio\"\n              :class=\"suit('radio')\"\n              :name=\"attribute\"\n              :value=\"item.value\"\n              :checked=\"item.isRefined\"\n              @change=\"state.refine($event.target.value)\"\n            >\n            <span :class=\"suit('labelText')\">{{ item.label }}</span>\n          </label>\n        </li>\n      </ul>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectNumericMenu } from 'instantsearch.js/es/connectors';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisNumericMenu',\n  mixins: [\n    createWidgetMixin({ connector: connectNumericMenu }),\n    createSuitMixin({ name: 'NumericMenu' }),\n    createPanelConsumerMixin({\n      mapStateToCanRefine: state => state.hasNoResults === false,\n    }),\n  ],\n  props: {\n    attribute: {\n      type: String,\n      required: true,\n    },\n    items: {\n      type: Array,\n      required: true,\n    },\n    transformItems: {\n      type: Function,\n      default: undefined,\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        attribute: this.attribute,\n        transformItems: this.transformItems,\n        items: this.items,\n      };\n    },\n    canRefine() {\n      return !this.state.hasNoResults;\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    v-if=\"state\"\n    :class=\"[suit(), !canRefine && suit('', 'noRefinement')]\"\n  >\n    <slot\n      :items=\"state.items\"\n      :can-refine=\"canRefine\"\n      :refine=\"state.refine\"\n      :createURL=\"state.createURL\"\n      :send-event=\"state.sendEvent\"\n    >\n      <ul :class=\"[suit('list')]\">\n        <li\n          v-for=\"item in state.items\"\n          :key=\"item.label\"\n          :class=\"[suit('item'), item.isRefined && suit('item', 'selected')]\"\n        >\n          <label :class=\"suit('label')\">\n            <input\n              type=\"radio\"\n              :class=\"suit('radio')\"\n              :name=\"attribute\"\n              :value=\"item.value\"\n              :checked=\"item.isRefined\"\n              @change=\"state.refine($event.target.value)\"\n            >\n            <span :class=\"suit('labelText')\">{{ item.label }}</span>\n          </label>\n        </li>\n      </ul>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectNumericMenu } from 'instantsearch.js/es/connectors';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisNumericMenu',\n  mixins: [\n    createWidgetMixin({ connector: connectNumericMenu }),\n    createSuitMixin({ name: 'NumericMenu' }),\n    createPanelConsumerMixin({\n      mapStateToCanRefine: state => state.hasNoResults === false,\n    }),\n  ],\n  props: {\n    attribute: {\n      type: String,\n      required: true,\n    },\n    items: {\n      type: Array,\n      required: true,\n    },\n    transformItems: {\n      type: Function,\n      default: undefined,\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        attribute: this.attribute,\n        transformItems: this.transformItems,\n        items: this.items,\n      };\n    },\n    canRefine() {\n      return !this.state.hasNoResults;\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    v-if=\"state\"\n    :class=\"suit()\"\n  >\n    <slot\n      :refine=\"refine\"\n      :createURL=\"state.createURL\"\n      :current-refinement=\"state.currentRefinement\"\n      :nb-hits=\"state.nbHits\"\n      :nb-pages=\"state.nbPages\"\n      :pages=\"state.pages\"\n      :is-first-page=\"state.isFirstPage\"\n      :is-last-page=\"state.isLastPage\"\n    >\n      <ul :class=\"suit('list')\">\n        <li\n          :class=\"{\n            [suit('item')]: true,\n            [suit('item', 'firstPage')]: true,\n            [suit('item', 'disabled')]: state.isFirstPage,\n          }\"\n          v-if=\"showFirst\"\n        >\n          <slot\n            name=\"first\"\n            :createURL=\"() => state.createURL(0)\"\n            :is-first-page=\"state.isFirstPage\"\n            :refine=\"() => refine(0)\"\n          >\n            <template v-if=\"!state.isFirstPage\">\n              <a\n                :class=\"suit('link')\"\n                aria-label=\"First\"\n                :href=\"state.createURL(0)\"\n                @click.prevent=\"refine(0)\"\n              >‹‹</a>\n            </template>\n            <template v-else>\n              <span\n                :class=\"suit('link')\"\n                aria-label=\"First\"\n              >‹‹</span>\n            </template>\n          </slot>\n        </li>\n        <li\n          :class=\"{\n            [suit('item')]: true,\n            [suit('item', 'previousPage')]: true,\n            [suit('item', 'disabled')]: state.isFirstPage,\n          }\"\n          v-if=\"showPrevious\"\n        >\n          <slot\n            name=\"previous\"\n            :createURL=\"() => state.createURL(state.currentRefinement - 1)\"\n            :is-first-page=\"state.isFirstPage\"\n            :refine=\"() => refine(state.currentRefinement - 1)\"\n          >\n            <template v-if=\"!state.isFirstPage\">\n              <a\n                :class=\"suit('link')\"\n                aria-label=\"Previous\"\n                :href=\"state.createURL(state.currentRefinement - 1)\"\n                @click.prevent=\"refine(state.currentRefinement - 1)\"\n              >‹</a>\n            </template>\n            <template v-else>\n              <span\n                :class=\"suit('link')\"\n                aria-label=\"Previous\"\n              >‹</span>\n            </template>\n          </slot>\n        </li>\n\n        <li\n          :class=\"{\n            [suit('item')]: true,\n            [suit('item', 'selected')]: state.currentRefinement === page\n          }\"\n          v-for=\"page in state.pages\"\n          :key=\"page\"\n        >\n          <slot\n            name=\"item\"\n            :page=\"page\"\n            :createURL=\"() => state.createURL(page)\"\n            :is-first-page=\"state.isFirstPage\"\n            :is-last-page=\"state.isLastPage\"\n            :refine=\"() => refine(page)\"\n          >\n            <a\n              :class=\"suit('link')\"\n              :href=\"state.createURL(page)\"\n              @click.prevent=\"refine(page)\"\n            >{{ page + 1 }}</a>\n          </slot>\n        </li>\n\n        <li\n          :class=\"{\n            [suit('item')]: true,\n            [suit('item','nextPage')]: true,\n            [suit('item','disabled')]: state.isLastPage\n          }\"\n          v-if=\"showNext\"\n        >\n          <slot\n            name=\"next\"\n            :createURL=\"() => state.createURL(state.currentRefinement + 1)\"\n            :is-last-page=\"state.isLastPage\"\n            :refine=\"() => refine(state.currentRefinement + 1)\"\n          >\n            <template v-if=\"!state.isLastPage\">\n              <a\n                :class=\"suit('link')\"\n                aria-label=\"Next\"\n                :href=\"state.createURL(state.currentRefinement + 1)\"\n                @click.prevent=\"refine(state.currentRefinement + 1)\"\n              >›</a>\n            </template>\n            <template v-else>\n              <span\n                :class=\"suit('link')\"\n                aria-label=\"Next\"\n              >›</span>\n            </template>\n          </slot>\n        </li>\n        <li\n          :class=\"{\n            [suit('item')]: true,\n            [suit('item','lastPage')]: true,\n            [suit('item','disabled')]: state.isLastPage,\n          }\"\n          v-if=\"showLast\"\n        >\n          <slot\n            name=\"last\"\n            :createURL=\"() => state.createURL(state.nbPages - 1)\"\n            :is-last-page=\"state.isLastPage\"\n            :refine=\"() => refine(state.nbPages - 1)\"\n          >\n            <template v-if=\"!state.isLastPage\">\n              <a\n                :class=\"suit('link')\"\n                aria-label=\"Last\"\n                :href=\"state.createURL(state.nbPages - 1)\"\n                @click.prevent=\"refine(state.nbPages - 1)\"\n              >››</a>\n            </template>\n            <template v-else>\n              <span\n                :class=\"suit('link')\"\n                aria-label=\"Last\"\n              >››</span>\n            </template>\n          </slot>\n        </li>\n      </ul>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectPagination } from 'instantsearch.js/es/connectors';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisPagination',\n  mixins: [\n    createSuitMixin({ name: 'Pagination' }),\n    createWidgetMixin({ connector: connectPagination }),\n    createPanelConsumerMixin({\n      mapStateToCanRefine: state => state.nbPages > 1,\n    }),\n  ],\n  props: {\n    padding: {\n      type: Number,\n      default: undefined,\n      validator(value) {\n        return value > 0;\n      },\n    },\n    totalPages: {\n      type: Number,\n      default: undefined,\n      validator(value) {\n        return value > 0;\n      },\n    },\n    showFirst: {\n      type: Boolean,\n      default: true,\n    },\n    showLast: {\n      type: Boolean,\n      default: true,\n    },\n    showNext: {\n      type: Boolean,\n      default: true,\n    },\n    showPrevious: {\n      type: Boolean,\n      default: true,\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        padding: this.padding,\n        totalPages: this.totalPages,\n      };\n    },\n  },\n  emits: ['page-change'],\n  methods: {\n    refine(page) {\n      const p = Math.min(Math.max(page, 0), this.state.nbPages - 1);\n      this.state.refine(p);\n      // TODO: do this in a general way\n      this.$emit('page-change', p);\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    v-if=\"state\"\n    :class=\"suit()\"\n  >\n    <slot\n      :refine=\"refine\"\n      :createURL=\"state.createURL\"\n      :current-refinement=\"state.currentRefinement\"\n      :nb-hits=\"state.nbHits\"\n      :nb-pages=\"state.nbPages\"\n      :pages=\"state.pages\"\n      :is-first-page=\"state.isFirstPage\"\n      :is-last-page=\"state.isLastPage\"\n    >\n      <ul :class=\"suit('list')\">\n        <li\n          :class=\"{\n            [suit('item')]: true,\n            [suit('item', 'firstPage')]: true,\n            [suit('item', 'disabled')]: state.isFirstPage,\n          }\"\n          v-if=\"showFirst\"\n        >\n          <slot\n            name=\"first\"\n            :createURL=\"() => state.createURL(0)\"\n            :is-first-page=\"state.isFirstPage\"\n            :refine=\"() => refine(0)\"\n          >\n            <template v-if=\"!state.isFirstPage\">\n              <a\n                :class=\"suit('link')\"\n                aria-label=\"First\"\n                :href=\"state.createURL(0)\"\n                @click.prevent=\"refine(0)\"\n              >‹‹</a>\n            </template>\n            <template v-else>\n              <span\n                :class=\"suit('link')\"\n                aria-label=\"First\"\n              >‹‹</span>\n            </template>\n          </slot>\n        </li>\n        <li\n          :class=\"{\n            [suit('item')]: true,\n            [suit('item', 'previousPage')]: true,\n            [suit('item', 'disabled')]: state.isFirstPage,\n          }\"\n          v-if=\"showPrevious\"\n        >\n          <slot\n            name=\"previous\"\n            :createURL=\"() => state.createURL(state.currentRefinement - 1)\"\n            :is-first-page=\"state.isFirstPage\"\n            :refine=\"() => refine(state.currentRefinement - 1)\"\n          >\n            <template v-if=\"!state.isFirstPage\">\n              <a\n                :class=\"suit('link')\"\n                aria-label=\"Previous\"\n                :href=\"state.createURL(state.currentRefinement - 1)\"\n                @click.prevent=\"refine(state.currentRefinement - 1)\"\n              >‹</a>\n            </template>\n            <template v-else>\n              <span\n                :class=\"suit('link')\"\n                aria-label=\"Previous\"\n              >‹</span>\n            </template>\n          </slot>\n        </li>\n\n        <li\n          :class=\"{\n            [suit('item')]: true,\n            [suit('item', 'selected')]: state.currentRefinement === page\n          }\"\n          v-for=\"page in state.pages\"\n          :key=\"page\"\n        >\n          <slot\n            name=\"item\"\n            :page=\"page\"\n            :createURL=\"() => state.createURL(page)\"\n            :is-first-page=\"state.isFirstPage\"\n            :is-last-page=\"state.isLastPage\"\n            :refine=\"() => refine(page)\"\n          >\n            <a\n              :class=\"suit('link')\"\n              :href=\"state.createURL(page)\"\n              @click.prevent=\"refine(page)\"\n            >{{ page + 1 }}</a>\n          </slot>\n        </li>\n\n        <li\n          :class=\"{\n            [suit('item')]: true,\n            [suit('item','nextPage')]: true,\n            [suit('item','disabled')]: state.isLastPage\n          }\"\n          v-if=\"showNext\"\n        >\n          <slot\n            name=\"next\"\n            :createURL=\"() => state.createURL(state.currentRefinement + 1)\"\n            :is-last-page=\"state.isLastPage\"\n            :refine=\"() => refine(state.currentRefinement + 1)\"\n          >\n            <template v-if=\"!state.isLastPage\">\n              <a\n                :class=\"suit('link')\"\n                aria-label=\"Next\"\n                :href=\"state.createURL(state.currentRefinement + 1)\"\n                @click.prevent=\"refine(state.currentRefinement + 1)\"\n              >›</a>\n            </template>\n            <template v-else>\n              <span\n                :class=\"suit('link')\"\n                aria-label=\"Next\"\n              >›</span>\n            </template>\n          </slot>\n        </li>\n        <li\n          :class=\"{\n            [suit('item')]: true,\n            [suit('item','lastPage')]: true,\n            [suit('item','disabled')]: state.isLastPage,\n          }\"\n          v-if=\"showLast\"\n        >\n          <slot\n            name=\"last\"\n            :createURL=\"() => state.createURL(state.nbPages - 1)\"\n            :is-last-page=\"state.isLastPage\"\n            :refine=\"() => refine(state.nbPages - 1)\"\n          >\n            <template v-if=\"!state.isLastPage\">\n              <a\n                :class=\"suit('link')\"\n                aria-label=\"Last\"\n                :href=\"state.createURL(state.nbPages - 1)\"\n                @click.prevent=\"refine(state.nbPages - 1)\"\n              >››</a>\n            </template>\n            <template v-else>\n              <span\n                :class=\"suit('link')\"\n                aria-label=\"Last\"\n              >››</span>\n            </template>\n          </slot>\n        </li>\n      </ul>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectPagination } from 'instantsearch.js/es/connectors';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisPagination',\n  mixins: [\n    createSuitMixin({ name: 'Pagination' }),\n    createWidgetMixin({ connector: connectPagination }),\n    createPanelConsumerMixin({\n      mapStateToCanRefine: state => state.nbPages > 1,\n    }),\n  ],\n  props: {\n    padding: {\n      type: Number,\n      default: undefined,\n      validator(value) {\n        return value > 0;\n      },\n    },\n    totalPages: {\n      type: Number,\n      default: undefined,\n      validator(value) {\n        return value > 0;\n      },\n    },\n    showFirst: {\n      type: Boolean,\n      default: true,\n    },\n    showLast: {\n      type: Boolean,\n      default: true,\n    },\n    showNext: {\n      type: Boolean,\n      default: true,\n    },\n    showPrevious: {\n      type: Boolean,\n      default: true,\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        padding: this.padding,\n        totalPages: this.totalPages,\n      };\n    },\n  },\n  emits: ['page-change'],\n  methods: {\n    refine(page) {\n      const p = Math.min(Math.max(page, 0), this.state.nbPages - 1);\n      this.state.refine(p);\n      // TODO: do this in a general way\n      this.$emit('page-change', p);\n    },\n  },\n};\n</script>\n","<template>\n  <div :class=\"[suit(), !canRefine && suit('', 'noRefinement')]\">\n    <div\n      v-if=\"getSlot('header')\"\n      :class=\"suit('header')\"\n    >\n      <slot\n        name=\"header\"\n        :has-refinements=\"canRefine\"\n      />\n    </div>\n    <div :class=\"suit('body')\">\n      <slot :has-refinements=\"canRefine\" />\n    </div>\n    <div\n      v-if=\"getSlot('footer')\"\n      :class=\"suit('footer')\"\n    >\n      <slot\n        name=\"footer\"\n        :has-refinements=\"canRefine\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { isVue3 } from '../util/vue-compat';\nimport { createPanelProviderMixin } from '../mixins/panel';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisPanel',\n  mixins: [createSuitMixin({ name: 'Panel' }), createPanelProviderMixin()],\n  methods: {\n    getSlot(name) {\n      return isVue3\n        ? this.$slots[name]\n        : this.$slots[name] || this.$scopedSlots[name];\n    },\n  },\n};\n</script>\n","<template>\n  <div :class=\"[suit(), !canRefine && suit('', 'noRefinement')]\">\n    <div\n      v-if=\"getSlot('header')\"\n      :class=\"suit('header')\"\n    >\n      <slot\n        name=\"header\"\n        :has-refinements=\"canRefine\"\n      />\n    </div>\n    <div :class=\"suit('body')\">\n      <slot :has-refinements=\"canRefine\" />\n    </div>\n    <div\n      v-if=\"getSlot('footer')\"\n      :class=\"suit('footer')\"\n    >\n      <slot\n        name=\"footer\"\n        :has-refinements=\"canRefine\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { isVue3 } from '../util/vue-compat';\nimport { createPanelProviderMixin } from '../mixins/panel';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisPanel',\n  mixins: [createSuitMixin({ name: 'Panel' }), createPanelProviderMixin()],\n  methods: {\n    getSlot(name) {\n      return isVue3\n        ? this.$slots[name]\n        : this.$slots[name] || this.$scopedSlots[name];\n    },\n  },\n};\n</script>\n","<template>\n  <div :class=\"suit()\">\n    <a\n      :class=\"suit('link')\"\n      :href=\"algoliaUrl\"\n      target=\"_blank\"\n      rel=\"noopener\"\n      aria-label=\"search by Algolia\"\n    >\n      <svg\n        style=\"height: 1.2em; width: auto\"\n        :class=\"[suit('logo'), suit('', theme)]\"\n        viewBox=\"0 0 168 24\"\n      >\n        <path\n          :fill=\"theme === 'dark' ? '#FFF': '#5D6494'\"\n          d=\"M6.97 6.68V8.3a4.47 4.47 0 0 0-2.42-.67 2.2 2.2 0 0 0-1.38.4c-.34.26-.5.6-.5 1.02 0 .43.16.77.49 1.03.33.25.83.53 1.51.83a7.04 7.04 0 0 1 1.9 1.08c.34.24.58.54.73.89.15.34.23.74.23 1.18 0 .95-.33 1.7-1 2.24a4 4 0 0 1-2.6.81 5.71 5.71 0 0 1-2.94-.68v-1.71c.84.63 1.81.94 2.92.94.58 0 1.05-.14 1.39-.4.34-.28.5-.65.5-1.13 0-.29-.1-.55-.3-.8a2.2 2.2 0 0 0-.65-.53 23.03 23.03 0 0 0-1.64-.78 13.67 13.67 0 0 1-1.11-.64c-.12-.1-.28-.22-.46-.4a1.72 1.72 0 0 1-.39-.5 4.46 4.46 0 0 1-.22-.6c-.07-.23-.1-.48-.1-.75 0-.91.33-1.63 1-2.17a4 4 0 0 1 2.57-.8c.97 0 1.8.18 2.47.52zm7.47 5.7v-.3a2.26 2.26 0 0 0-.5-1.44c-.3-.35-.74-.53-1.32-.53-.53 0-.99.2-1.37.58-.38.39-.62.95-.72 1.68h3.91zm1 2.79v1.4c-.6.34-1.38.51-2.36.51a4.02 4.02 0 0 1-3-1.13 4.04 4.04 0 0 1-1.11-2.97c0-1.3.34-2.32 1.02-3.06a3.38 3.38 0 0 1 2.6-1.1c1.03 0 1.85.32 2.46.96.6.64.9 1.57.9 2.78 0 .33-.03.68-.09 1.04h-5.31c.1.7.4 1.24.89 1.61.49.38 1.1.56 1.85.56.86 0 1.58-.2 2.15-.6zm6.61-1.78h-1.21c-.6 0-1.05.12-1.35.36-.3.23-.46.53-.46.89 0 .37.12.66.36.88.23.2.57.32 1.02.32.5 0 .9-.15 1.2-.43.3-.28.44-.65.44-1.1v-.92zm-4.07-2.55V9.33a4.96 4.96 0 0 1 2.5-.55c2.1 0 3.17 1.03 3.17 3.08V17H22.1v-.96c-.42.68-1.15 1.02-2.19 1.02-.76 0-1.38-.22-1.84-.66-.46-.44-.7-1-.7-1.68 0-.78.3-1.38.88-1.81.59-.43 1.4-.65 2.46-.65h1.34v-.46c0-.55-.13-.97-.4-1.25-.26-.29-.7-.43-1.32-.43-.86 0-1.65.24-2.35.72zm9.34-1.93v1.42c.39-1 1.1-1.5 2.12-1.5.15 0 .31.02.5.05v1.53c-.23-.1-.48-.14-.76-.14-.54 0-.99.24-1.34.71a2.8 2.8 0 0 0-.52 1.71V17h-1.57V8.91h1.57zm5 4.09a3 3 0 0 0 .76 2.01c.47.53 1.14.8 2 .8.64 0 1.24-.18 1.8-.53v1.4c-.53.32-1.2.48-2 .48a3.98 3.98 0 0 1-4.17-4.18c0-1.16.38-2.15 1.14-2.98a4 4 0 0 1 3.1-1.23c.7 0 1.34.15 1.92.44v1.44a3.24 3.24 0 0 0-1.77-.5A2.65 2.65 0 0 0 32.33 13zm7.92-7.28v4.58c.46-1 1.3-1.5 2.5-1.5.8 0 1.42.24 1.9.73.48.5.72 1.17.72 2.05V17H43.8v-5.1c0-.56-.14-.99-.43-1.29-.28-.3-.65-.45-1.1-.45-.54 0-1 .2-1.42.6-.4.4-.61 1.02-.61 1.85V17h-1.56V5.72h1.56zM55.2 15.74c.6 0 1.1-.25 1.5-.76.4-.5.6-1.16.6-1.95 0-.92-.2-1.62-.6-2.12-.4-.5-.92-.74-1.55-.74-.56 0-1.05.22-1.5.67-.44.45-.66 1.13-.66 2.06 0 .96.22 1.67.64 2.14.43.47.95.7 1.57.7zM53 5.72v4.42a2.74 2.74 0 0 1 2.43-1.34c1.03 0 1.86.38 2.51 1.15.65.76.97 1.78.97 3.05 0 1.13-.3 2.1-.92 2.9-.62.81-1.47 1.21-2.54 1.21s-1.9-.45-2.46-1.34V17h-1.58V5.72H53zm9.9 11.1l-3.22-7.9h1.74l1 2.62 1.26 3.42c.1-.32.48-1.46 1.15-3.42l.91-2.63h1.66l-2.92 7.87c-.78 2.07-1.96 3.1-3.56 3.1-.28 0-.53-.02-.73-.07v-1.34c.17.04.35.06.54.06 1.03 0 1.76-.57 2.17-1.7z\"\n        />\n        <path\n          fill=\"#5468FF\"\n          d=\"M78.99.94h16.6a2.97 2.97 0 0 1 2.96 2.96v16.6a2.97 2.97 0 0 1-2.97 2.96h-16.6a2.97 2.97 0 0 1-2.96-2.96V3.9A2.96 2.96 0 0 1 79 .94\"\n        />\n        <path\n          fill=\"#FFF\"\n          d=\"M89.63 5.97v-.78a.98.98 0 0 0-.98-.97h-2.28a.98.98 0 0 0-.97.97V6c0 .09.08.15.17.13a7.13 7.13 0 0 1 3.9-.02c.08.02.16-.04.16-.13m-6.25 1L83 6.6a.98.98 0 0 0-1.38 0l-.46.46a.97.97 0 0 0 0 1.38l.38.39c.06.06.15.04.2-.02a7.49 7.49 0 0 1 1.63-1.62c.07-.04.08-.14.02-.2m4.16 2.45v3.34c0 .1.1.17.2.12l2.97-1.54c.06-.03.08-.12.05-.18a3.7 3.7 0 0 0-3.08-1.87c-.07 0-.14.06-.14.13m0 8.05a4.49 4.49 0 1 1 0-8.98 4.49 4.49 0 0 1 0 8.98m0-10.85a6.37 6.37 0 1 0 0 12.74 6.37 6.37 0 0 0 0-12.74\"\n        />\n        <path\n          :fill=\"theme === 'dark' ? '#FFF': '#5468FF'\"\n          d=\"M120.92 18.8c-4.38.02-4.38-3.54-4.38-4.1V1.36l2.67-.42v13.25c0 .32 0 2.36 1.71 2.37v2.24zm-10.84-2.18c.82 0 1.43-.04 1.85-.12v-2.72a5.48 5.48 0 0 0-1.57-.2c-.3 0-.6.02-.9.07-.3.04-.57.12-.81.24-.24.11-.44.28-.58.49a.93.93 0 0 0-.22.65c0 .63.22 1 .61 1.23.4.24.94.36 1.62.36zm-.23-9.7c.88 0 1.62.11 2.23.33.6.22 1.09.53 1.44.92.36.4.61.92.76 1.48.16.56.23 1.17.23 1.85v6.87c-.4.1-1.03.2-1.86.32-.84.12-1.78.18-2.82.18-.69 0-1.32-.07-1.9-.2a4 4 0 0 1-1.46-.63c-.4-.3-.72-.67-.96-1.13a4.3 4.3 0 0 1-.34-1.8c0-.66.13-1.08.39-1.53.26-.45.6-.82 1.04-1.1.45-.3.95-.5 1.54-.62a8.8 8.8 0 0 1 3.79.05v-.44c0-.3-.04-.6-.11-.87a1.78 1.78 0 0 0-1.1-1.22c-.31-.12-.7-.2-1.15-.2a9.75 9.75 0 0 0-2.95.46l-.33-2.19c.34-.12.84-.23 1.48-.35.65-.12 1.34-.18 2.08-.18zm52.84 9.63c.82 0 1.43-.05 1.85-.13V13.7a5.42 5.42 0 0 0-1.57-.2c-.3 0-.6.02-.9.07-.3.04-.57.12-.81.24-.24.12-.44.28-.58.5a.93.93 0 0 0-.22.65c0 .63.22.99.61 1.23.4.24.94.36 1.62.36zm-.23-9.7c.88 0 1.63.11 2.23.33.6.22 1.1.53 1.45.92.35.39.6.92.76 1.48.15.56.23 1.18.23 1.85v6.88c-.41.08-1.03.19-1.87.31-.83.12-1.77.18-2.81.18-.7 0-1.33-.06-1.9-.2a4 4 0 0 1-1.47-.63c-.4-.3-.72-.67-.95-1.13a4.3 4.3 0 0 1-.34-1.8c0-.66.13-1.08.38-1.53.26-.45.61-.82 1.05-1.1.44-.3.95-.5 1.53-.62a8.8 8.8 0 0 1 3.8.05v-.43c0-.31-.04-.6-.12-.88-.07-.28-.2-.52-.38-.73a1.78 1.78 0 0 0-.73-.5c-.3-.1-.68-.2-1.14-.2a9.85 9.85 0 0 0-2.95.47l-.32-2.19a11.63 11.63 0 0 1 3.55-.53zm-8.03-1.27a1.62 1.62 0 0 0 0-3.24 1.62 1.62 0 1 0 0 3.24zm1.35 13.22h-2.7V7.27l2.7-.42V18.8zm-4.72 0c-4.38.02-4.38-3.54-4.38-4.1l-.01-13.34 2.67-.42v13.25c0 .32 0 2.36 1.72 2.37v2.24zm-8.7-5.9a4.7 4.7 0 0 0-.74-2.79 2.4 2.4 0 0 0-2.07-1 2.4 2.4 0 0 0-2.06 1 4.7 4.7 0 0 0-.74 2.8c0 1.16.25 1.94.74 2.62a2.4 2.4 0 0 0 2.07 1.02c.88 0 1.57-.34 2.07-1.02.49-.68.73-1.46.73-2.63zm2.74 0a6.46 6.46 0 0 1-1.52 4.23c-.49.53-1.07.94-1.76 1.22-.68.29-1.73.45-2.26.45-.53 0-1.58-.15-2.25-.45a5.1 5.1 0 0 1-2.88-3.13 7.3 7.3 0 0 1-.01-4.84 5.13 5.13 0 0 1 2.9-3.1 5.67 5.67 0 0 1 2.22-.42c.81 0 1.56.14 2.24.42.69.29 1.28.69 1.75 1.22.49.52.87 1.15 1.14 1.89a7 7 0 0 1 .43 2.5zm-20.14 0c0 1.11.25 2.36.74 2.88.5.52 1.13.78 1.91.78a4.07 4.07 0 0 0 2.12-.6V9.33c-.19-.04-.99-.2-1.76-.23a2.67 2.67 0 0 0-2.23 1 4.73 4.73 0 0 0-.78 2.8zm7.44 5.27c0 1.82-.46 3.16-1.4 4-.94.85-2.37 1.27-4.3 1.27-.7 0-2.17-.13-3.34-.4l.43-2.11c.98.2 2.27.26 2.95.26 1.08 0 1.84-.22 2.3-.66.46-.43.68-1.08.68-1.94v-.44a5.2 5.2 0 0 1-2.54.6 5.6 5.6 0 0 1-2.01-.36 4.2 4.2 0 0 1-2.58-2.71 9.88 9.88 0 0 1 .02-5.35 4.92 4.92 0 0 1 2.93-2.96 6.6 6.6 0 0 1 2.43-.46 19.64 19.64 0 0 1 4.43.66v10.6z\"\n        />\n      </svg>\n    </a>\n  </div>\n</template>\n\n<script>\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisPoweredBy',\n  mixins: [createSuitMixin({ name: 'PoweredBy' })],\n  props: {\n    theme: {\n      default: 'light',\n      validator(value) {\n        return ['light', 'dark'].indexOf(value) !== -1;\n      },\n    },\n  },\n  computed: {\n    algoliaUrl() {\n      return (\n        'https://www.algolia.com/?' +\n        'utm_source=vue-instantsearch&' +\n        'utm_medium=website&' +\n        `utm_content=${location ? location.hostname : ''}&` +\n        'utm_campaign=poweredby'\n      );\n    },\n  },\n};\n</script>\n","<template>\n  <div :class=\"suit()\">\n    <a\n      :class=\"suit('link')\"\n      :href=\"algoliaUrl\"\n      target=\"_blank\"\n      rel=\"noopener\"\n      aria-label=\"search by Algolia\"\n    >\n      <svg\n        style=\"height: 1.2em; width: auto\"\n        :class=\"[suit('logo'), suit('', theme)]\"\n        viewBox=\"0 0 168 24\"\n      >\n        <path\n          :fill=\"theme === 'dark' ? '#FFF': '#5D6494'\"\n          d=\"M6.97 6.68V8.3a4.47 4.47 0 0 0-2.42-.67 2.2 2.2 0 0 0-1.38.4c-.34.26-.5.6-.5 1.02 0 .43.16.77.49 1.03.33.25.83.53 1.51.83a7.04 7.04 0 0 1 1.9 1.08c.34.24.58.54.73.89.15.34.23.74.23 1.18 0 .95-.33 1.7-1 2.24a4 4 0 0 1-2.6.81 5.71 5.71 0 0 1-2.94-.68v-1.71c.84.63 1.81.94 2.92.94.58 0 1.05-.14 1.39-.4.34-.28.5-.65.5-1.13 0-.29-.1-.55-.3-.8a2.2 2.2 0 0 0-.65-.53 23.03 23.03 0 0 0-1.64-.78 13.67 13.67 0 0 1-1.11-.64c-.12-.1-.28-.22-.46-.4a1.72 1.72 0 0 1-.39-.5 4.46 4.46 0 0 1-.22-.6c-.07-.23-.1-.48-.1-.75 0-.91.33-1.63 1-2.17a4 4 0 0 1 2.57-.8c.97 0 1.8.18 2.47.52zm7.47 5.7v-.3a2.26 2.26 0 0 0-.5-1.44c-.3-.35-.74-.53-1.32-.53-.53 0-.99.2-1.37.58-.38.39-.62.95-.72 1.68h3.91zm1 2.79v1.4c-.6.34-1.38.51-2.36.51a4.02 4.02 0 0 1-3-1.13 4.04 4.04 0 0 1-1.11-2.97c0-1.3.34-2.32 1.02-3.06a3.38 3.38 0 0 1 2.6-1.1c1.03 0 1.85.32 2.46.96.6.64.9 1.57.9 2.78 0 .33-.03.68-.09 1.04h-5.31c.1.7.4 1.24.89 1.61.49.38 1.1.56 1.85.56.86 0 1.58-.2 2.15-.6zm6.61-1.78h-1.21c-.6 0-1.05.12-1.35.36-.3.23-.46.53-.46.89 0 .37.12.66.36.88.23.2.57.32 1.02.32.5 0 .9-.15 1.2-.43.3-.28.44-.65.44-1.1v-.92zm-4.07-2.55V9.33a4.96 4.96 0 0 1 2.5-.55c2.1 0 3.17 1.03 3.17 3.08V17H22.1v-.96c-.42.68-1.15 1.02-2.19 1.02-.76 0-1.38-.22-1.84-.66-.46-.44-.7-1-.7-1.68 0-.78.3-1.38.88-1.81.59-.43 1.4-.65 2.46-.65h1.34v-.46c0-.55-.13-.97-.4-1.25-.26-.29-.7-.43-1.32-.43-.86 0-1.65.24-2.35.72zm9.34-1.93v1.42c.39-1 1.1-1.5 2.12-1.5.15 0 .31.02.5.05v1.53c-.23-.1-.48-.14-.76-.14-.54 0-.99.24-1.34.71a2.8 2.8 0 0 0-.52 1.71V17h-1.57V8.91h1.57zm5 4.09a3 3 0 0 0 .76 2.01c.47.53 1.14.8 2 .8.64 0 1.24-.18 1.8-.53v1.4c-.53.32-1.2.48-2 .48a3.98 3.98 0 0 1-4.17-4.18c0-1.16.38-2.15 1.14-2.98a4 4 0 0 1 3.1-1.23c.7 0 1.34.15 1.92.44v1.44a3.24 3.24 0 0 0-1.77-.5A2.65 2.65 0 0 0 32.33 13zm7.92-7.28v4.58c.46-1 1.3-1.5 2.5-1.5.8 0 1.42.24 1.9.73.48.5.72 1.17.72 2.05V17H43.8v-5.1c0-.56-.14-.99-.43-1.29-.28-.3-.65-.45-1.1-.45-.54 0-1 .2-1.42.6-.4.4-.61 1.02-.61 1.85V17h-1.56V5.72h1.56zM55.2 15.74c.6 0 1.1-.25 1.5-.76.4-.5.6-1.16.6-1.95 0-.92-.2-1.62-.6-2.12-.4-.5-.92-.74-1.55-.74-.56 0-1.05.22-1.5.67-.44.45-.66 1.13-.66 2.06 0 .96.22 1.67.64 2.14.43.47.95.7 1.57.7zM53 5.72v4.42a2.74 2.74 0 0 1 2.43-1.34c1.03 0 1.86.38 2.51 1.15.65.76.97 1.78.97 3.05 0 1.13-.3 2.1-.92 2.9-.62.81-1.47 1.21-2.54 1.21s-1.9-.45-2.46-1.34V17h-1.58V5.72H53zm9.9 11.1l-3.22-7.9h1.74l1 2.62 1.26 3.42c.1-.32.48-1.46 1.15-3.42l.91-2.63h1.66l-2.92 7.87c-.78 2.07-1.96 3.1-3.56 3.1-.28 0-.53-.02-.73-.07v-1.34c.17.04.35.06.54.06 1.03 0 1.76-.57 2.17-1.7z\"\n        />\n        <path\n          fill=\"#5468FF\"\n          d=\"M78.99.94h16.6a2.97 2.97 0 0 1 2.96 2.96v16.6a2.97 2.97 0 0 1-2.97 2.96h-16.6a2.97 2.97 0 0 1-2.96-2.96V3.9A2.96 2.96 0 0 1 79 .94\"\n        />\n        <path\n          fill=\"#FFF\"\n          d=\"M89.63 5.97v-.78a.98.98 0 0 0-.98-.97h-2.28a.98.98 0 0 0-.97.97V6c0 .09.08.15.17.13a7.13 7.13 0 0 1 3.9-.02c.08.02.16-.04.16-.13m-6.25 1L83 6.6a.98.98 0 0 0-1.38 0l-.46.46a.97.97 0 0 0 0 1.38l.38.39c.06.06.15.04.2-.02a7.49 7.49 0 0 1 1.63-1.62c.07-.04.08-.14.02-.2m4.16 2.45v3.34c0 .1.1.17.2.12l2.97-1.54c.06-.03.08-.12.05-.18a3.7 3.7 0 0 0-3.08-1.87c-.07 0-.14.06-.14.13m0 8.05a4.49 4.49 0 1 1 0-8.98 4.49 4.49 0 0 1 0 8.98m0-10.85a6.37 6.37 0 1 0 0 12.74 6.37 6.37 0 0 0 0-12.74\"\n        />\n        <path\n          :fill=\"theme === 'dark' ? '#FFF': '#5468FF'\"\n          d=\"M120.92 18.8c-4.38.02-4.38-3.54-4.38-4.1V1.36l2.67-.42v13.25c0 .32 0 2.36 1.71 2.37v2.24zm-10.84-2.18c.82 0 1.43-.04 1.85-.12v-2.72a5.48 5.48 0 0 0-1.57-.2c-.3 0-.6.02-.9.07-.3.04-.57.12-.81.24-.24.11-.44.28-.58.49a.93.93 0 0 0-.22.65c0 .63.22 1 .61 1.23.4.24.94.36 1.62.36zm-.23-9.7c.88 0 1.62.11 2.23.33.6.22 1.09.53 1.44.92.36.4.61.92.76 1.48.16.56.23 1.17.23 1.85v6.87c-.4.1-1.03.2-1.86.32-.84.12-1.78.18-2.82.18-.69 0-1.32-.07-1.9-.2a4 4 0 0 1-1.46-.63c-.4-.3-.72-.67-.96-1.13a4.3 4.3 0 0 1-.34-1.8c0-.66.13-1.08.39-1.53.26-.45.6-.82 1.04-1.1.45-.3.95-.5 1.54-.62a8.8 8.8 0 0 1 3.79.05v-.44c0-.3-.04-.6-.11-.87a1.78 1.78 0 0 0-1.1-1.22c-.31-.12-.7-.2-1.15-.2a9.75 9.75 0 0 0-2.95.46l-.33-2.19c.34-.12.84-.23 1.48-.35.65-.12 1.34-.18 2.08-.18zm52.84 9.63c.82 0 1.43-.05 1.85-.13V13.7a5.42 5.42 0 0 0-1.57-.2c-.3 0-.6.02-.9.07-.3.04-.57.12-.81.24-.24.12-.44.28-.58.5a.93.93 0 0 0-.22.65c0 .63.22.99.61 1.23.4.24.94.36 1.62.36zm-.23-9.7c.88 0 1.63.11 2.23.33.6.22 1.1.53 1.45.92.35.39.6.92.76 1.48.15.56.23 1.18.23 1.85v6.88c-.41.08-1.03.19-1.87.31-.83.12-1.77.18-2.81.18-.7 0-1.33-.06-1.9-.2a4 4 0 0 1-1.47-.63c-.4-.3-.72-.67-.95-1.13a4.3 4.3 0 0 1-.34-1.8c0-.66.13-1.08.38-1.53.26-.45.61-.82 1.05-1.1.44-.3.95-.5 1.53-.62a8.8 8.8 0 0 1 3.8.05v-.43c0-.31-.04-.6-.12-.88-.07-.28-.2-.52-.38-.73a1.78 1.78 0 0 0-.73-.5c-.3-.1-.68-.2-1.14-.2a9.85 9.85 0 0 0-2.95.47l-.32-2.19a11.63 11.63 0 0 1 3.55-.53zm-8.03-1.27a1.62 1.62 0 0 0 0-3.24 1.62 1.62 0 1 0 0 3.24zm1.35 13.22h-2.7V7.27l2.7-.42V18.8zm-4.72 0c-4.38.02-4.38-3.54-4.38-4.1l-.01-13.34 2.67-.42v13.25c0 .32 0 2.36 1.72 2.37v2.24zm-8.7-5.9a4.7 4.7 0 0 0-.74-2.79 2.4 2.4 0 0 0-2.07-1 2.4 2.4 0 0 0-2.06 1 4.7 4.7 0 0 0-.74 2.8c0 1.16.25 1.94.74 2.62a2.4 2.4 0 0 0 2.07 1.02c.88 0 1.57-.34 2.07-1.02.49-.68.73-1.46.73-2.63zm2.74 0a6.46 6.46 0 0 1-1.52 4.23c-.49.53-1.07.94-1.76 1.22-.68.29-1.73.45-2.26.45-.53 0-1.58-.15-2.25-.45a5.1 5.1 0 0 1-2.88-3.13 7.3 7.3 0 0 1-.01-4.84 5.13 5.13 0 0 1 2.9-3.1 5.67 5.67 0 0 1 2.22-.42c.81 0 1.56.14 2.24.42.69.29 1.28.69 1.75 1.22.49.52.87 1.15 1.14 1.89a7 7 0 0 1 .43 2.5zm-20.14 0c0 1.11.25 2.36.74 2.88.5.52 1.13.78 1.91.78a4.07 4.07 0 0 0 2.12-.6V9.33c-.19-.04-.99-.2-1.76-.23a2.67 2.67 0 0 0-2.23 1 4.73 4.73 0 0 0-.78 2.8zm7.44 5.27c0 1.82-.46 3.16-1.4 4-.94.85-2.37 1.27-4.3 1.27-.7 0-2.17-.13-3.34-.4l.43-2.11c.98.2 2.27.26 2.95.26 1.08 0 1.84-.22 2.3-.66.46-.43.68-1.08.68-1.94v-.44a5.2 5.2 0 0 1-2.54.6 5.6 5.6 0 0 1-2.01-.36 4.2 4.2 0 0 1-2.58-2.71 9.88 9.88 0 0 1 .02-5.35 4.92 4.92 0 0 1 2.93-2.96 6.6 6.6 0 0 1 2.43-.46 19.64 19.64 0 0 1 4.43.66v10.6z\"\n        />\n      </svg>\n    </a>\n  </div>\n</template>\n\n<script>\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisPoweredBy',\n  mixins: [createSuitMixin({ name: 'PoweredBy' })],\n  props: {\n    theme: {\n      default: 'light',\n      validator(value) {\n        return ['light', 'dark'].indexOf(value) !== -1;\n      },\n    },\n  },\n  computed: {\n    algoliaUrl() {\n      return (\n        'https://www.algolia.com/?' +\n        'utm_source=vue-instantsearch&' +\n        'utm_medium=website&' +\n        `utm_content=${location ? location.hostname : ''}&` +\n        'utm_campaign=poweredby'\n      );\n    },\n  },\n};\n</script>\n","import { createSuitMixin } from '../mixins/suit';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { connectQueryRules } from 'instantsearch.js/es/connectors';\n\nexport default {\n  name: 'AisQueryRuleContext',\n  mixins: [\n    createSuitMixin({ name: 'QueryRuleContext' }),\n    createWidgetMixin({\n      connector: connectQueryRules,\n    }),\n  ],\n  props: {\n    trackedFilters: {\n      type: Object,\n      required: true,\n    },\n    transformRuleContexts: {\n      type: Function,\n      required: false,\n      default: undefined,\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        trackedFilters: this.trackedFilters,\n        transformRuleContexts: this.transformRuleContexts,\n      };\n    },\n  },\n  render() {\n    return null;\n  },\n};\n","<template>\n  <div\n    v-if=\"state\"\n    :class=\"suit()\"\n  >\n    <slot :items=\"state.items\">\n      <div\n        v-for=\"(item, key) in state.items\"\n        :key=\"key\"\n      >\n        <slot\n          name=\"item\"\n          :item=\"item\"\n        >\n          <pre>{{ item }}</pre>\n        </slot>\n      </div>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { createSuitMixin } from '../mixins/suit';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { connectQueryRules } from 'instantsearch.js/es/connectors';\n\nexport default {\n  name: 'AisQueryRuleCustomData',\n  mixins: [\n    createSuitMixin({ name: 'QueryRuleCustomData' }),\n    createWidgetMixin({\n      connector: connectQueryRules,\n    }),\n  ],\n  props: {\n    transformItems: {\n      type: Function,\n      required: false,\n      default: undefined,\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        transformItems: this.transformItems,\n      };\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    v-if=\"state\"\n    :class=\"suit()\"\n  >\n    <slot :items=\"state.items\">\n      <div\n        v-for=\"(item, key) in state.items\"\n        :key=\"key\"\n      >\n        <slot\n          name=\"item\"\n          :item=\"item\"\n        >\n          <pre>{{ item }}</pre>\n        </slot>\n      </div>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { createSuitMixin } from '../mixins/suit';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { connectQueryRules } from 'instantsearch.js/es/connectors';\n\nexport default {\n  name: 'AisQueryRuleCustomData',\n  mixins: [\n    createSuitMixin({ name: 'QueryRuleCustomData' }),\n    createWidgetMixin({\n      connector: connectQueryRules,\n    }),\n  ],\n  props: {\n    transformItems: {\n      type: Function,\n      required: false,\n      default: undefined,\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        transformItems: this.transformItems,\n      };\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    v-if=\"state\"\n    :class=\"[suit(), !canRefine && suit('', 'noRefinement')]\"\n  >\n    <slot\n      :current-refinement=\"values\"\n      :refine=\"refine\"\n      :can-refine=\"canRefine\"\n      :range=\"state.range\"\n      :send-event=\"state.sendEvent\"\n    >\n      <form\n        :class=\"suit('form')\"\n        @submit.prevent=\"refine({ min: pick(minInput, values.min), max: pick(maxInput, values.max) })\"\n      >\n        <label :class=\"suit('label')\">\n          <slot name=\"minLabel\" />\n          <input\n            type=\"number\"\n            :class=\"[suit('input'), suit('input', 'min')]\"\n            :step=\"step\"\n            :min=\"state.range.min\"\n            :max=\"state.range.max\"\n            :placeholder=\"state.range.min\"\n            :value=\"values.min\"\n            @change=\"minInput = $event.currentTarget.value\"\n          >\n        </label>\n        <span :class=\"suit('separator')\">\n          <slot name=\"separator\">to</slot>\n        </span>\n        <label :class=\"suit('label')\">\n          <slot name=\"maxLabel\" />\n          <input\n            :class=\"[suit('input'), suit('input', 'max')]\"\n            type=\"number\"\n            :step=\"step\"\n            :min=\"state.range.min\"\n            :max=\"state.range.max\"\n            :placeholder=\"state.range.max\"\n            :value=\"values.max\"\n            @change=\"maxInput = $event.currentTarget.value\"\n          >\n        </label>\n        <button\n          :class=\"suit('submit')\"\n          type=\"submit\"\n        >\n          <slot name=\"submitLabel\">Go</slot>\n        </button>\n      </form>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectRange } from 'instantsearch.js/es/connectors';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createSuitMixin } from '../mixins/suit';\n\nconst mapStateToCanRefine = state =>\n  state && Boolean(state.range) && state.range.min !== state.range.max;\n\nexport default {\n  name: 'AisRangeInput',\n  mixins: [\n    createSuitMixin({ name: 'RangeInput' }),\n    createWidgetMixin({ connector: connectRange }),\n    createPanelConsumerMixin({\n      mapStateToCanRefine,\n    }),\n  ],\n  props: {\n    attribute: {\n      type: String,\n      required: true,\n    },\n    min: {\n      type: Number,\n      required: false,\n      default: undefined,\n    },\n    max: {\n      type: Number,\n      required: false,\n      default: undefined,\n    },\n    precision: {\n      type: Number,\n      required: false,\n      default: 0,\n    },\n  },\n  data() {\n    return {\n      minInput: undefined,\n      maxInput: undefined,\n    };\n  },\n  updated() {\n    this.minInput = undefined;\n    this.maxInput = undefined;\n  },\n  computed: {\n    widgetParams() {\n      return {\n        attribute: this.attribute,\n        min: this.min,\n        max: this.max,\n        precision: this.precision,\n      };\n    },\n    canRefine() {\n      return mapStateToCanRefine(this.state);\n    },\n    step() {\n      return 1 / Math.pow(10, this.precision);\n    },\n    values() {\n      const [minValue, maxValue] = this.state.start;\n      const { min: minRange, max: maxRange } = this.state.range;\n\n      return {\n        min:\n          minValue !== -Infinity && minValue !== minRange\n            ? minValue\n            : undefined,\n        max:\n          maxValue !== Infinity && maxValue !== maxRange ? maxValue : undefined,\n      };\n    },\n  },\n  methods: {\n    pick(first, second) {\n      if (first !== null && first !== undefined) {\n        return first;\n      } else {\n        return second;\n      }\n    },\n    refine({ min, max }) {\n      this.state.refine([min, max]);\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    v-if=\"state\"\n    :class=\"[suit(), !canRefine && suit('', 'noRefinement')]\"\n  >\n    <slot\n      :current-refinement=\"values\"\n      :refine=\"refine\"\n      :can-refine=\"canRefine\"\n      :range=\"state.range\"\n      :send-event=\"state.sendEvent\"\n    >\n      <form\n        :class=\"suit('form')\"\n        @submit.prevent=\"refine({ min: pick(minInput, values.min), max: pick(maxInput, values.max) })\"\n      >\n        <label :class=\"suit('label')\">\n          <slot name=\"minLabel\" />\n          <input\n            type=\"number\"\n            :class=\"[suit('input'), suit('input', 'min')]\"\n            :step=\"step\"\n            :min=\"state.range.min\"\n            :max=\"state.range.max\"\n            :placeholder=\"state.range.min\"\n            :value=\"values.min\"\n            @change=\"minInput = $event.currentTarget.value\"\n          >\n        </label>\n        <span :class=\"suit('separator')\">\n          <slot name=\"separator\">to</slot>\n        </span>\n        <label :class=\"suit('label')\">\n          <slot name=\"maxLabel\" />\n          <input\n            :class=\"[suit('input'), suit('input', 'max')]\"\n            type=\"number\"\n            :step=\"step\"\n            :min=\"state.range.min\"\n            :max=\"state.range.max\"\n            :placeholder=\"state.range.max\"\n            :value=\"values.max\"\n            @change=\"maxInput = $event.currentTarget.value\"\n          >\n        </label>\n        <button\n          :class=\"suit('submit')\"\n          type=\"submit\"\n        >\n          <slot name=\"submitLabel\">Go</slot>\n        </button>\n      </form>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectRange } from 'instantsearch.js/es/connectors';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createSuitMixin } from '../mixins/suit';\n\nconst mapStateToCanRefine = state =>\n  state && Boolean(state.range) && state.range.min !== state.range.max;\n\nexport default {\n  name: 'AisRangeInput',\n  mixins: [\n    createSuitMixin({ name: 'RangeInput' }),\n    createWidgetMixin({ connector: connectRange }),\n    createPanelConsumerMixin({\n      mapStateToCanRefine,\n    }),\n  ],\n  props: {\n    attribute: {\n      type: String,\n      required: true,\n    },\n    min: {\n      type: Number,\n      required: false,\n      default: undefined,\n    },\n    max: {\n      type: Number,\n      required: false,\n      default: undefined,\n    },\n    precision: {\n      type: Number,\n      required: false,\n      default: 0,\n    },\n  },\n  data() {\n    return {\n      minInput: undefined,\n      maxInput: undefined,\n    };\n  },\n  updated() {\n    this.minInput = undefined;\n    this.maxInput = undefined;\n  },\n  computed: {\n    widgetParams() {\n      return {\n        attribute: this.attribute,\n        min: this.min,\n        max: this.max,\n        precision: this.precision,\n      };\n    },\n    canRefine() {\n      return mapStateToCanRefine(this.state);\n    },\n    step() {\n      return 1 / Math.pow(10, this.precision);\n    },\n    values() {\n      const [minValue, maxValue] = this.state.start;\n      const { min: minRange, max: maxRange } = this.state.range;\n\n      return {\n        min:\n          minValue !== -Infinity && minValue !== minRange\n            ? minValue\n            : undefined,\n        max:\n          maxValue !== Infinity && maxValue !== maxRange ? maxValue : undefined,\n      };\n    },\n  },\n  methods: {\n    pick(first, second) {\n      if (first !== null && first !== undefined) {\n        return first;\n      } else {\n        return second;\n      }\n    },\n    refine({ min, max }) {\n      this.state.refine([min, max]);\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    v-if=\"state\"\n    :class=\"suit()\"\n  >\n    <slot\n      :items=\"state.items\"\n      :refine=\"state.refine\"\n      :createURL=\"state.createURL\"\n      :send-event=\"state.sendEvent\"\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        style=\"display: none;\"\n      >\n        <symbol\n          id=\"ais-RatingMenu-starSymbol\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path d=\"M12 .288l2.833 8.718h9.167l-7.417 5.389 2.833 8.718-7.416-5.388-7.417 5.388 2.833-8.718-7.416-5.389h9.167z\" />\n        </symbol>\n        <symbol\n          id=\"ais-RatingMenu-starEmptySymbol\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path d=\"M12 6.76l1.379 4.246h4.465l-3.612 2.625 1.379 4.246-3.611-2.625-3.612 2.625 1.379-4.246-3.612-2.625h4.465l1.38-4.246zm0-6.472l-2.833 8.718h-9.167l7.416 5.389-2.833 8.718 7.417-5.388 7.416 5.388-2.833-8.718 7.417-5.389h-9.167l-2.833-8.718z\" />\n        </symbol>\n      </svg>\n\n      <ul :class=\"suit('list')\">\n        <li\n          v-for=\"(item, key) in state.items\"\n          :key=\"key\"\n          :class=\"[suit('item'), item.isRefined && suit('item', 'selected')]\"\n        >\n          <a\n            :href=\"state.createURL(item.value)\"\n            :aria-label=\"`${item.value} & Up`\"\n            :class=\"suit('link')\"\n            @click.prevent=\"state.refine(item.value)\"\n          >\n            <template v-for=\"(full, n) in item.stars\">\n              <svg\n                v-if=\"full\"\n                aria-hidden=\"true\"\n                width=\"24\"\n                height=\"24\"\n                :class=\"[suit('starIcon'), suit('starIcon--full')]\"\n                :key=\"n + '-full'\"\n              >\n                <use xlink:href=\"#ais-RatingMenu-starSymbol\" />\n              </svg>\n\n              <svg\n                v-else\n                :class=\"[suit('starIcon'), suit('starIcon--empty')]\"\n                aria-hidden=\"true\"\n                width=\"24\"\n                height=\"24\"\n                :key=\"n + '-empty'\"\n              >\n                <use xlink:href=\"#ais-RatingMenu-starEmptySymbol\" />\n              </svg>\n            </template>\n\n            <span\n              :class=\"suit('label')\"\n              aria-hidden=\"true\"\n            >\n              <slot name=\"andUp\">&amp; Up</slot>\n            </span>\n            <span :class=\"suit('count')\">{{ item.count }}</span>\n          </a>\n        </li>\n      </ul>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectRatingMenu } from 'instantsearch.js/es/connectors';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisRatingMenu',\n  mixins: [\n    createSuitMixin({ name: 'RatingMenu' }),\n    createWidgetMixin({ connector: connectRatingMenu }),\n    createPanelConsumerMixin({\n      mapStateToCanRefine: state => state.hasNoResults === false,\n    }),\n  ],\n  props: {\n    attribute: {\n      type: String,\n      required: true,\n    },\n    max: {\n      type: Number,\n      default: undefined,\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        attribute: this.attribute,\n        max: this.max,\n      };\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    v-if=\"state\"\n    :class=\"suit()\"\n  >\n    <slot\n      :items=\"state.items\"\n      :refine=\"state.refine\"\n      :createURL=\"state.createURL\"\n      :send-event=\"state.sendEvent\"\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        style=\"display: none;\"\n      >\n        <symbol\n          id=\"ais-RatingMenu-starSymbol\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path d=\"M12 .288l2.833 8.718h9.167l-7.417 5.389 2.833 8.718-7.416-5.388-7.417 5.388 2.833-8.718-7.416-5.389h9.167z\" />\n        </symbol>\n        <symbol\n          id=\"ais-RatingMenu-starEmptySymbol\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path d=\"M12 6.76l1.379 4.246h4.465l-3.612 2.625 1.379 4.246-3.611-2.625-3.612 2.625 1.379-4.246-3.612-2.625h4.465l1.38-4.246zm0-6.472l-2.833 8.718h-9.167l7.416 5.389-2.833 8.718 7.417-5.388 7.416 5.388-2.833-8.718 7.417-5.389h-9.167l-2.833-8.718z\" />\n        </symbol>\n      </svg>\n\n      <ul :class=\"suit('list')\">\n        <li\n          v-for=\"(item, key) in state.items\"\n          :key=\"key\"\n          :class=\"[suit('item'), item.isRefined && suit('item', 'selected')]\"\n        >\n          <a\n            :href=\"state.createURL(item.value)\"\n            :aria-label=\"`${item.value} & Up`\"\n            :class=\"suit('link')\"\n            @click.prevent=\"state.refine(item.value)\"\n          >\n            <template v-for=\"(full, n) in item.stars\">\n              <svg\n                v-if=\"full\"\n                aria-hidden=\"true\"\n                width=\"24\"\n                height=\"24\"\n                :class=\"[suit('starIcon'), suit('starIcon--full')]\"\n                :key=\"n + '-full'\"\n              >\n                <use xlink:href=\"#ais-RatingMenu-starSymbol\" />\n              </svg>\n\n              <svg\n                v-else\n                :class=\"[suit('starIcon'), suit('starIcon--empty')]\"\n                aria-hidden=\"true\"\n                width=\"24\"\n                height=\"24\"\n                :key=\"n + '-empty'\"\n              >\n                <use xlink:href=\"#ais-RatingMenu-starEmptySymbol\" />\n              </svg>\n            </template>\n\n            <span\n              :class=\"suit('label')\"\n              aria-hidden=\"true\"\n            >\n              <slot name=\"andUp\">&amp; Up</slot>\n            </span>\n            <span :class=\"suit('count')\">{{ item.count }}</span>\n          </a>\n        </li>\n      </ul>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectRatingMenu } from 'instantsearch.js/es/connectors';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisRatingMenu',\n  mixins: [\n    createSuitMixin({ name: 'RatingMenu' }),\n    createWidgetMixin({ connector: connectRatingMenu }),\n    createPanelConsumerMixin({\n      mapStateToCanRefine: state => state.hasNoResults === false,\n    }),\n  ],\n  props: {\n    attribute: {\n      type: String,\n      required: true,\n    },\n    max: {\n      type: Number,\n      default: undefined,\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        attribute: this.attribute,\n        max: this.max,\n      };\n    },\n  },\n};\n</script>\n","<template>\n  <form\n    action=\"\"\n    role=\"search\"\n    novalidate\n    :class=\"suit('form')\"\n    @submit.prevent=\"onFormSubmit\"\n    @reset.prevent=\"onFormReset\"\n  >\n    <!-- :value/@input allows us to pass v-model to the component in v2 -->\n    <!-- :modelValue/@update:modelValue allows us to pass v-model to the component in v3 -->\n    <input\n      type=\"search\"\n      autocorrect=\"off\"\n      autocapitalize=\"off\"\n      autocomplete=\"off\"\n      spellcheck=\"false\"\n      required\n      maxlength=\"512\"\n      aria-label=\"Search\"\n      :placeholder=\"placeholder\"\n      :autofocus=\"autofocus\"\n      :class=\"suit('input')\"\n      :value=\"value || modelValue\"\n      @focus=\"$emit('focus', $event)\"\n      @blur=\"$emit('blur', $event)\"\n      @input=\"$emit('input', $event.target.value); $emit('update:modelValue', $event.target.value)\"\n      ref=\"input\"\n    >\n    <button\n      type=\"submit\"\n      :title=\"submitTitle\"\n      :class=\"suit('submit')\"\n      :hidden=\"showLoadingIndicator && shouldShowLoadingIndicator\"\n    >\n      <slot name=\"submit-icon\">\n        <svg\n          role=\"img\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"10\"\n          height=\"10\"\n          viewBox=\"0 0 40 40\"\n          :class=\"suit('submitIcon')\"\n        >\n          <path\n            d=\"M26.804 29.01c-2.832 2.34-6.465 3.746-10.426 3.746C7.333 32.756 0 25.424 0 16.378 0 7.333 7.333 0 16.378 0c9.046 0 16.378 7.333 16.378 16.378 0 3.96-1.406 7.594-3.746 10.426l10.534 10.534c.607.607.61 1.59-.004 2.202-.61.61-1.597.61-2.202.004L26.804 29.01zm-10.426.627c7.323 0 13.26-5.936 13.26-13.26 0-7.32-5.937-13.257-13.26-13.257C9.056 3.12 3.12 9.056 3.12 16.378c0 7.323 5.936 13.26 13.258 13.26z\"\n            fillRule=\"evenodd\"\n          />\n        </svg>\n      </slot>\n    </button>\n\n    <button\n      type=\"reset\"\n      :title=\"resetTitle\"\n      :class=\"suit('reset')\"\n      :hidden=\"(!value && !modelValue) || (showLoadingIndicator && shouldShowLoadingIndicator)\"\n    >\n      <slot name=\"reset-icon\">\n        <svg\n          role=\"img\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"1em\"\n          height=\"1em\"\n          viewBox=\"0 0 20 20\"\n          :class=\"suit('resetIcon')\"\n        >\n          <path\n            d=\"M8.114 10L.944 2.83 0 1.885 1.886 0l.943.943L10 8.113l7.17-7.17.944-.943L20 1.886l-.943.943-7.17 7.17 7.17 7.17.943.944L18.114 20l-.943-.943-7.17-7.17-7.17 7.17-.944.943L0 18.114l.943-.943L8.113 10z\"\n            fillRule=\"evenodd\"\n          />\n        </svg>\n      </slot>\n    </button>\n\n    <span\n      v-if=\"showLoadingIndicator\"\n      :hidden=\"!shouldShowLoadingIndicator\"\n      :class=\"suit('loadingIndicator')\"\n    >\n      <slot name=\"loading-indicator\">\n        <svg\n          role=\"img\"\n          aria-label=\"Results are loading\"\n          width=\"16\"\n          height=\"16\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          stroke=\"#444\"\n          viewBox=\"0 0 38 38\"\n          :class=\"suit('loadingIcon')\"\n        >\n          <g\n            fill=\"none\"\n            fill-rule=\"evenodd\"\n          >\n            <g\n              transform=\"translate(1 1)\"\n              stroke-width=\"2\"\n            >\n              <circle\n                stroke-opacity=\".5\"\n                cx=\"18\"\n                cy=\"18\"\n                r=\"18\"\n              />\n              <path d=\"M36 18c0-9.94-8.06-18-18-18\">\n                <animateTransform\n                  attributeName=\"transform\"\n                  type=\"rotate\"\n                  from=\"0 18 18\"\n                  to=\"360 18 18\"\n                  dur=\"1s\"\n                  repeatCount=\"indefinite\"\n                />\n              </path>\n            </g>\n          </g>\n        </svg>\n      </slot>\n    </span>\n  </form>\n</template>\n\n<script>\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'SearchInput',\n  mixins: [createSuitMixin({ name: 'SearchBox' })],\n  props: {\n    placeholder: {\n      type: String,\n      default: 'Search here…',\n    },\n    autofocus: {\n      type: Boolean,\n      default: false,\n    },\n    showLoadingIndicator: {\n      type: Boolean,\n      default: false,\n    },\n    shouldShowLoadingIndicator: {\n      type: Boolean,\n      default: false,\n    },\n    submitTitle: {\n      type: String,\n      default: 'Search',\n    },\n    resetTitle: {\n      type: String,\n      default: 'Clear',\n    },\n    value: {\n      type: String,\n      required: false,\n      default: undefined,\n    },\n    modelValue: {\n      type: String,\n      required: false,\n      default: undefined,\n    },\n  },\n  emits: ['input', 'update:modelValue', 'blur', 'focus', 'reset'],\n  data() {\n    return {\n      query: '',\n    };\n  },\n  methods: {\n    onFormSubmit() {\n      const input = this.$refs.input;\n      input.blur();\n    },\n    onFormReset() {\n      this.$emit('input', '');\n      this.$emit('update:modelValue', '');\n      this.$emit('reset');\n    },\n  },\n};\n</script>\n","<template>\n  <form\n    action=\"\"\n    role=\"search\"\n    novalidate\n    :class=\"suit('form')\"\n    @submit.prevent=\"onFormSubmit\"\n    @reset.prevent=\"onFormReset\"\n  >\n    <!-- :value/@input allows us to pass v-model to the component in v2 -->\n    <!-- :modelValue/@update:modelValue allows us to pass v-model to the component in v3 -->\n    <input\n      type=\"search\"\n      autocorrect=\"off\"\n      autocapitalize=\"off\"\n      autocomplete=\"off\"\n      spellcheck=\"false\"\n      required\n      maxlength=\"512\"\n      aria-label=\"Search\"\n      :placeholder=\"placeholder\"\n      :autofocus=\"autofocus\"\n      :class=\"suit('input')\"\n      :value=\"value || modelValue\"\n      @focus=\"$emit('focus', $event)\"\n      @blur=\"$emit('blur', $event)\"\n      @input=\"$emit('input', $event.target.value); $emit('update:modelValue', $event.target.value)\"\n      ref=\"input\"\n    >\n    <button\n      type=\"submit\"\n      :title=\"submitTitle\"\n      :class=\"suit('submit')\"\n      :hidden=\"showLoadingIndicator && shouldShowLoadingIndicator\"\n    >\n      <slot name=\"submit-icon\">\n        <svg\n          role=\"img\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"10\"\n          height=\"10\"\n          viewBox=\"0 0 40 40\"\n          :class=\"suit('submitIcon')\"\n        >\n          <path\n            d=\"M26.804 29.01c-2.832 2.34-6.465 3.746-10.426 3.746C7.333 32.756 0 25.424 0 16.378 0 7.333 7.333 0 16.378 0c9.046 0 16.378 7.333 16.378 16.378 0 3.96-1.406 7.594-3.746 10.426l10.534 10.534c.607.607.61 1.59-.004 2.202-.61.61-1.597.61-2.202.004L26.804 29.01zm-10.426.627c7.323 0 13.26-5.936 13.26-13.26 0-7.32-5.937-13.257-13.26-13.257C9.056 3.12 3.12 9.056 3.12 16.378c0 7.323 5.936 13.26 13.258 13.26z\"\n            fillRule=\"evenodd\"\n          />\n        </svg>\n      </slot>\n    </button>\n\n    <button\n      type=\"reset\"\n      :title=\"resetTitle\"\n      :class=\"suit('reset')\"\n      :hidden=\"(!value && !modelValue) || (showLoadingIndicator && shouldShowLoadingIndicator)\"\n    >\n      <slot name=\"reset-icon\">\n        <svg\n          role=\"img\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"1em\"\n          height=\"1em\"\n          viewBox=\"0 0 20 20\"\n          :class=\"suit('resetIcon')\"\n        >\n          <path\n            d=\"M8.114 10L.944 2.83 0 1.885 1.886 0l.943.943L10 8.113l7.17-7.17.944-.943L20 1.886l-.943.943-7.17 7.17 7.17 7.17.943.944L18.114 20l-.943-.943-7.17-7.17-7.17 7.17-.944.943L0 18.114l.943-.943L8.113 10z\"\n            fillRule=\"evenodd\"\n          />\n        </svg>\n      </slot>\n    </button>\n\n    <span\n      v-if=\"showLoadingIndicator\"\n      :hidden=\"!shouldShowLoadingIndicator\"\n      :class=\"suit('loadingIndicator')\"\n    >\n      <slot name=\"loading-indicator\">\n        <svg\n          role=\"img\"\n          aria-label=\"Results are loading\"\n          width=\"16\"\n          height=\"16\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          stroke=\"#444\"\n          viewBox=\"0 0 38 38\"\n          :class=\"suit('loadingIcon')\"\n        >\n          <g\n            fill=\"none\"\n            fill-rule=\"evenodd\"\n          >\n            <g\n              transform=\"translate(1 1)\"\n              stroke-width=\"2\"\n            >\n              <circle\n                stroke-opacity=\".5\"\n                cx=\"18\"\n                cy=\"18\"\n                r=\"18\"\n              />\n              <path d=\"M36 18c0-9.94-8.06-18-18-18\">\n                <animateTransform\n                  attributeName=\"transform\"\n                  type=\"rotate\"\n                  from=\"0 18 18\"\n                  to=\"360 18 18\"\n                  dur=\"1s\"\n                  repeatCount=\"indefinite\"\n                />\n              </path>\n            </g>\n          </g>\n        </svg>\n      </slot>\n    </span>\n  </form>\n</template>\n\n<script>\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'SearchInput',\n  mixins: [createSuitMixin({ name: 'SearchBox' })],\n  props: {\n    placeholder: {\n      type: String,\n      default: 'Search here…',\n    },\n    autofocus: {\n      type: Boolean,\n      default: false,\n    },\n    showLoadingIndicator: {\n      type: Boolean,\n      default: false,\n    },\n    shouldShowLoadingIndicator: {\n      type: Boolean,\n      default: false,\n    },\n    submitTitle: {\n      type: String,\n      default: 'Search',\n    },\n    resetTitle: {\n      type: String,\n      default: 'Clear',\n    },\n    value: {\n      type: String,\n      required: false,\n      default: undefined,\n    },\n    modelValue: {\n      type: String,\n      required: false,\n      default: undefined,\n    },\n  },\n  emits: ['input', 'update:modelValue', 'blur', 'focus', 'reset'],\n  data() {\n    return {\n      query: '',\n    };\n  },\n  methods: {\n    onFormSubmit() {\n      const input = this.$refs.input;\n      input.blur();\n    },\n    onFormReset() {\n      this.$emit('input', '');\n      this.$emit('update:modelValue', '');\n      this.$emit('reset');\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    :class=\"[\n      suit(),\n      !state.canRefine && suit('','noRefinement')\n    ]\"\n    v-if=\"state\"\n  >\n    <slot\n      :items=\"items\"\n      :refine=\"refine\"\n      :search-for-items=\"state.searchForItems\"\n      :search-for-items-query=\"searchForFacetValuesQuery\"\n      :toggle-show-more=\"toggleShowMore\"\n      :can-toggle-show-more=\"state.canToggleShowMore\"\n      :is-showing-more=\"state.isShowingMore\"\n      :createURL=\"state.createURL\"\n      :is-from-search=\"state.isFromSearch\"\n      :can-refine=\"state.canRefine\"\n      :send-event=\"state.sendEvent\"\n    >\n      <div\n        :class=\"suit('searchBox')\"\n        v-if=\"searchable\"\n      >\n        <search-input\n          v-model=\"searchForFacetValues\"\n          :placeholder=\"searchablePlaceholder\"\n          :class-names=\"classNames\"\n        />\n      </div>\n      <slot\n        name=\"noResults\"\n        :query=\"searchForFacetValues\"\n        v-if=\"state.isFromSearch && items.length === 0\"\n      >\n        <div :class=\"suit('noResults')\">No results.</div>\n      </slot>\n      <ul :class=\"suit('list')\">\n        <li\n          :class=\"[\n          suit('item'), item.isRefined && suit('item', 'selected')]\"\n          v-for=\"item in items\"\n          :key=\"item.value\"\n        >\n          <slot\n            name=\"item\"\n            :item=\"item\"\n            :refine=\"refine\"\n            :createURL=\"state.createURL\"\n          >\n            <label :class=\"suit('label')\">\n              <input\n                :class=\"suit('checkbox')\"\n                type=\"checkbox\"\n                :value=\"item.value\"\n                :checked=\"item.isRefined\"\n                @change=\"refine(item.value)\"\n              >\n              <span\n                v-if=\"searchable\"\n                :class=\"suit('labelText')\"\n              >\n                <ais-highlight\n                  attribute=\"item\"\n                  :hit=\"item\"\n                />\n              </span>\n              <span\n                v-else\n                :class=\"suit('labelText')\"\n              >{{ item.label }}</span>\n              <span :class=\"suit('count')\">{{ item.count }}</span>\n            </label>\n          </slot>\n        </li>\n      </ul>\n      <button\n        :class=\"[\n          suit('showMore'),\n          {\n            [suit('showMore', 'disabled')]: !state.canToggleShowMore,\n          }\n        ]\"\n        @click=\"toggleShowMore\"\n        v-if=\"showMore\"\n        :disabled=\"!state.canToggleShowMore\"\n      >\n        <slot\n          name=\"showMoreLabel\"\n          :is-showing-more=\"state.isShowingMore\"\n        >Show {{ state.isShowingMore ? 'less' : 'more' }}</slot>\n      </button>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { createWidgetMixin } from '../mixins/widget';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createSuitMixin } from '../mixins/suit';\nimport { connectRefinementList } from 'instantsearch.js/es/connectors';\nimport SearchInput from './SearchInput.vue';\nimport AisHighlight from './Highlight.vue';\n\nconst noop = () => {};\n\nexport default {\n  name: 'AisRefinementList',\n  components: { SearchInput, AisHighlight },\n  mixins: [\n    createSuitMixin({ name: 'RefinementList' }),\n    createWidgetMixin({ connector: connectRefinementList }),\n    createPanelConsumerMixin({\n      mapStateToCanRefine: state => Boolean(state.canRefine),\n    }),\n  ],\n  props: {\n    attribute: {\n      type: String,\n      required: true,\n    },\n    searchable: {\n      type: Boolean,\n      default: undefined,\n    },\n    searchablePlaceholder: {\n      type: String,\n      required: false,\n      default: 'Search here…',\n    },\n    operator: {\n      default: 'or',\n      validator(value) {\n        return value === 'and' || value === 'or';\n      },\n      required: false,\n    },\n    limit: {\n      type: Number,\n      required: false,\n      default: undefined,\n    },\n    showMoreLimit: {\n      type: Number,\n      required: false,\n      default: undefined,\n    },\n    showMore: {\n      type: Boolean,\n      required: false,\n      default: false,\n    },\n    sortBy: {\n      type: [Array, Function],\n      required: false,\n      default: undefined,\n    },\n    transformItems: {\n      type: Function,\n      required: false,\n      default: undefined,\n    },\n  },\n  data() {\n    return {\n      searchForFacetValuesQuery: '',\n    };\n  },\n  computed: {\n    searchForFacetValues: {\n      get() {\n        return this.searchForFacetValuesQuery;\n      },\n      set(value) {\n        this.state.searchForItems(value);\n        this.searchForFacetValuesQuery = value;\n      },\n    },\n    toggleShowMore() {\n      return this.state.toggleShowMore || noop;\n    },\n    items() {\n      return this.state.items.map(item =>\n        Object.assign({}, item, {\n          _highlightResult: {\n            item: {\n              value: item.highlighted,\n            },\n          },\n        })\n      );\n    },\n    widgetParams() {\n      return {\n        attribute: this.attribute,\n        operator: this.operator,\n        limit: this.limit,\n        showMore: this.showMore,\n        showMoreLimit: this.showMoreLimit,\n        sortBy: this.sortBy,\n        escapeFacetValues: true,\n        transformItems: this.transformItems,\n      };\n    },\n  },\n  methods: {\n    refine(value) {\n      this.state.refine(value);\n      this.searchForFacetValuesQuery = '';\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    :class=\"[\n      suit(),\n      !state.canRefine && suit('','noRefinement')\n    ]\"\n    v-if=\"state\"\n  >\n    <slot\n      :items=\"items\"\n      :refine=\"refine\"\n      :search-for-items=\"state.searchForItems\"\n      :search-for-items-query=\"searchForFacetValuesQuery\"\n      :toggle-show-more=\"toggleShowMore\"\n      :can-toggle-show-more=\"state.canToggleShowMore\"\n      :is-showing-more=\"state.isShowingMore\"\n      :createURL=\"state.createURL\"\n      :is-from-search=\"state.isFromSearch\"\n      :can-refine=\"state.canRefine\"\n      :send-event=\"state.sendEvent\"\n    >\n      <div\n        :class=\"suit('searchBox')\"\n        v-if=\"searchable\"\n      >\n        <search-input\n          v-model=\"searchForFacetValues\"\n          :placeholder=\"searchablePlaceholder\"\n          :class-names=\"classNames\"\n        />\n      </div>\n      <slot\n        name=\"noResults\"\n        :query=\"searchForFacetValues\"\n        v-if=\"state.isFromSearch && items.length === 0\"\n      >\n        <div :class=\"suit('noResults')\">No results.</div>\n      </slot>\n      <ul :class=\"suit('list')\">\n        <li\n          :class=\"[\n          suit('item'), item.isRefined && suit('item', 'selected')]\"\n          v-for=\"item in items\"\n          :key=\"item.value\"\n        >\n          <slot\n            name=\"item\"\n            :item=\"item\"\n            :refine=\"refine\"\n            :createURL=\"state.createURL\"\n          >\n            <label :class=\"suit('label')\">\n              <input\n                :class=\"suit('checkbox')\"\n                type=\"checkbox\"\n                :value=\"item.value\"\n                :checked=\"item.isRefined\"\n                @change=\"refine(item.value)\"\n              >\n              <span\n                v-if=\"searchable\"\n                :class=\"suit('labelText')\"\n              >\n                <ais-highlight\n                  attribute=\"item\"\n                  :hit=\"item\"\n                />\n              </span>\n              <span\n                v-else\n                :class=\"suit('labelText')\"\n              >{{ item.label }}</span>\n              <span :class=\"suit('count')\">{{ item.count }}</span>\n            </label>\n          </slot>\n        </li>\n      </ul>\n      <button\n        :class=\"[\n          suit('showMore'),\n          {\n            [suit('showMore', 'disabled')]: !state.canToggleShowMore,\n          }\n        ]\"\n        @click=\"toggleShowMore\"\n        v-if=\"showMore\"\n        :disabled=\"!state.canToggleShowMore\"\n      >\n        <slot\n          name=\"showMoreLabel\"\n          :is-showing-more=\"state.isShowingMore\"\n        >Show {{ state.isShowingMore ? 'less' : 'more' }}</slot>\n      </button>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { createWidgetMixin } from '../mixins/widget';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createSuitMixin } from '../mixins/suit';\nimport { connectRefinementList } from 'instantsearch.js/es/connectors';\nimport SearchInput from './SearchInput.vue';\nimport AisHighlight from './Highlight.vue';\n\nconst noop = () => {};\n\nexport default {\n  name: 'AisRefinementList',\n  components: { SearchInput, AisHighlight },\n  mixins: [\n    createSuitMixin({ name: 'RefinementList' }),\n    createWidgetMixin({ connector: connectRefinementList }),\n    createPanelConsumerMixin({\n      mapStateToCanRefine: state => Boolean(state.canRefine),\n    }),\n  ],\n  props: {\n    attribute: {\n      type: String,\n      required: true,\n    },\n    searchable: {\n      type: Boolean,\n      default: undefined,\n    },\n    searchablePlaceholder: {\n      type: String,\n      required: false,\n      default: 'Search here…',\n    },\n    operator: {\n      default: 'or',\n      validator(value) {\n        return value === 'and' || value === 'or';\n      },\n      required: false,\n    },\n    limit: {\n      type: Number,\n      required: false,\n      default: undefined,\n    },\n    showMoreLimit: {\n      type: Number,\n      required: false,\n      default: undefined,\n    },\n    showMore: {\n      type: Boolean,\n      required: false,\n      default: false,\n    },\n    sortBy: {\n      type: [Array, Function],\n      required: false,\n      default: undefined,\n    },\n    transformItems: {\n      type: Function,\n      required: false,\n      default: undefined,\n    },\n  },\n  data() {\n    return {\n      searchForFacetValuesQuery: '',\n    };\n  },\n  computed: {\n    searchForFacetValues: {\n      get() {\n        return this.searchForFacetValuesQuery;\n      },\n      set(value) {\n        this.state.searchForItems(value);\n        this.searchForFacetValuesQuery = value;\n      },\n    },\n    toggleShowMore() {\n      return this.state.toggleShowMore || noop;\n    },\n    items() {\n      return this.state.items.map(item =>\n        Object.assign({}, item, {\n          _highlightResult: {\n            item: {\n              value: item.highlighted,\n            },\n          },\n        })\n      );\n    },\n    widgetParams() {\n      return {\n        attribute: this.attribute,\n        operator: this.operator,\n        limit: this.limit,\n        showMore: this.showMore,\n        showMoreLimit: this.showMoreLimit,\n        sortBy: this.sortBy,\n        escapeFacetValues: true,\n        transformItems: this.transformItems,\n      };\n    },\n  },\n  methods: {\n    refine(value) {\n      this.state.refine(value);\n      this.searchForFacetValuesQuery = '';\n    },\n  },\n};\n</script>\n","import { _objectSpread } from '../util/polyfills';\n\nconst connectStateResults = (renderFn, unmountFn = () => {}) => (\n  widgetParams = {}\n) => ({\n  init({ instantSearchInstance }) {\n    renderFn(\n      {\n        state: undefined,\n        results: undefined,\n        instantSearchInstance,\n        widgetParams,\n      },\n      true\n    );\n  },\n\n  render({ results, instantSearchInstance, state }) {\n    const resultsCopy = _objectSpread({}, results);\n\n    const stateCopy = _objectSpread({}, state);\n\n    renderFn(\n      {\n        results: resultsCopy,\n        state: stateCopy,\n        instantSearchInstance,\n        widgetParams,\n      },\n      false\n    );\n  },\n\n  dispose() {\n    unmountFn();\n  },\n});\n\nexport default connectStateResults;\n","<template>\n  <div\n    :class=\"suit()\"\n    v-if=\"state && state.state && state.results\"\n  >\n    <slot v-bind=\"stateResults\">\n      <p>\n        Use this component to have a different layout based on a certain state.\n      </p>\n      <p>\n        Fill in the slot, and get access to the following things:\n      </p>\n      <pre>results: {{ Object.keys(state.results) }}</pre>\n      <pre>state: {{ Object.keys(state.state) }}</pre>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { createSuitMixin } from '../mixins/suit';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { _objectSpread } from '../util/polyfills';\nimport connectStateResults from '../connectors/connectStateResults';\n\nexport default {\n  name: 'AisStateResults',\n  mixins: [\n    createWidgetMixin({ connector: connectStateResults }),\n    createSuitMixin({ name: 'StateResults' }),\n  ],\n  computed: {\n    stateResults() {\n      // @MAJOR: replace v-bind=\"stateResults\" with :state=\"state.state\" :results=\"state.results\"\n      const { state, results } = this.state;\n      return _objectSpread({}, results, { results, state });\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    :class=\"suit()\"\n    v-if=\"state && state.state && state.results\"\n  >\n    <slot v-bind=\"stateResults\">\n      <p>\n        Use this component to have a different layout based on a certain state.\n      </p>\n      <p>\n        Fill in the slot, and get access to the following things:\n      </p>\n      <pre>results: {{ Object.keys(state.results) }}</pre>\n      <pre>state: {{ Object.keys(state.state) }}</pre>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { createSuitMixin } from '../mixins/suit';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { _objectSpread } from '../util/polyfills';\nimport connectStateResults from '../connectors/connectStateResults';\n\nexport default {\n  name: 'AisStateResults',\n  mixins: [\n    createWidgetMixin({ connector: connectStateResults }),\n    createSuitMixin({ name: 'StateResults' }),\n  ],\n  computed: {\n    stateResults() {\n      // @MAJOR: replace v-bind=\"stateResults\" with :state=\"state.state\" :results=\"state.results\"\n      const { state, results } = this.state;\n      return _objectSpread({}, results, { results, state });\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    v-if=\"state\"\n    :class=\"suit()\"\n  >\n    <slot\n      :current-refinement=\"currentRefinement\"\n      :is-search-stalled=\"state.isSearchStalled\"\n      :refine=\"state.refine\"\n    >\n      <search-input\n        @focus=\"$emit('focus', $event)\"\n        @blur=\"$emit('blur', $event)\"\n        @reset=\"$emit('reset')\"\n        :placeholder=\"placeholder\"\n        :autofocus=\"autofocus\"\n        :show-loading-indicator=\"showLoadingIndicator\"\n        :should-show-loading-indicator=\"state.isSearchStalled\"\n        :submit-title=\"submitTitle\"\n        :reset-title=\"resetTitle\"\n        :class-names=\"classNames\"\n        v-model=\"currentRefinement\"\n      >\n        <template\n          v-slot:loading-indicator\n          v-if=\"isVue3\"\n        >\n          <slot\n            name=\"loading-indicator\"\n          />\n        </template>\n        <slot\n          v-if=\"isVue2\"\n          name=\"loading-indicator\"\n          slot=\"loading-indicator\"\n        />\n\n        <template\n          v-slot:submit-icon\n          v-if=\"isVue3\"\n        >\n          <slot\n            name=\"submit-icon\"\n          />\n        </template>\n        <slot\n          v-if=\"isVue2\"\n          name=\"submit-icon\"\n          slot=\"submit-icon\"\n        />\n\n        <template\n          v-slot:reset-icon\n          v-if=\"isVue3\"\n        >\n          <slot\n            name=\"reset-icon\"\n          />\n        </template>\n        <slot\n          v-if=\"isVue2\"\n          name=\"reset-icon\"\n          slot=\"reset-icon\"\n        />\n      </search-input>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectSearchBox } from 'instantsearch.js/es/connectors';\nimport { createSuitMixin } from '../mixins/suit';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { isVue3, isVue2 } from '../util/vue-compat';\nimport SearchInput from './SearchInput.vue';\n\nexport default {\n  name: 'AisSearchBox',\n  mixins: [\n    createWidgetMixin({ connector: connectSearchBox }),\n    createSuitMixin({ name: 'SearchBox' }),\n  ],\n  components: {\n    SearchInput,\n  },\n  props: {\n    placeholder: {\n      type: String,\n      default: 'Search here…',\n    },\n    autofocus: {\n      type: Boolean,\n      default: false,\n    },\n    showLoadingIndicator: {\n      type: Boolean,\n      default: false,\n    },\n    submitTitle: {\n      type: String,\n      default: 'Search',\n    },\n    resetTitle: {\n      type: String,\n      default: 'Clear',\n    },\n    value: {\n      type: String,\n      default: undefined,\n    },\n    modelValue: {\n      type: String,\n      default: undefined,\n    },\n  },\n  data() {\n    return {\n      localValue: '',\n      isVue2,\n      isVue3,\n    };\n  },\n  computed: {\n    isControlled() {\n      return (\n        typeof this.value !== 'undefined' ||\n        typeof this.modelValue !== 'undefined'\n      );\n    },\n    model() {\n      return this.value || this.modelValue;\n    },\n    currentRefinement: {\n      get() {\n        // if the input is controlled, but not up to date\n        // this means it didn't search, and we should pretend it was `set`\n        if (this.isControlled && this.model !== this.localValue) {\n          // eslint-disable-next-line vue/no-side-effects-in-computed-properties\n          this.localValue = this.model;\n          this.$emit('input', this.model);\n          this.$emit('update:modelValue', this.model);\n          this.state.refine(this.model);\n        }\n        return this.model || this.state.query || '';\n      },\n      set(val) {\n        this.localValue = val;\n        this.state.refine(val);\n        if (this.isControlled) {\n          this.$emit('input', val);\n          this.$emit('update:modelValue', val);\n        }\n      },\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    v-if=\"state\"\n    :class=\"suit()\"\n  >\n    <slot\n      :current-refinement=\"currentRefinement\"\n      :is-search-stalled=\"state.isSearchStalled\"\n      :refine=\"state.refine\"\n    >\n      <search-input\n        @focus=\"$emit('focus', $event)\"\n        @blur=\"$emit('blur', $event)\"\n        @reset=\"$emit('reset')\"\n        :placeholder=\"placeholder\"\n        :autofocus=\"autofocus\"\n        :show-loading-indicator=\"showLoadingIndicator\"\n        :should-show-loading-indicator=\"state.isSearchStalled\"\n        :submit-title=\"submitTitle\"\n        :reset-title=\"resetTitle\"\n        :class-names=\"classNames\"\n        v-model=\"currentRefinement\"\n      >\n        <template\n          v-slot:loading-indicator\n          v-if=\"isVue3\"\n        >\n          <slot\n            name=\"loading-indicator\"\n          />\n        </template>\n        <slot\n          v-if=\"isVue2\"\n          name=\"loading-indicator\"\n          slot=\"loading-indicator\"\n        />\n\n        <template\n          v-slot:submit-icon\n          v-if=\"isVue3\"\n        >\n          <slot\n            name=\"submit-icon\"\n          />\n        </template>\n        <slot\n          v-if=\"isVue2\"\n          name=\"submit-icon\"\n          slot=\"submit-icon\"\n        />\n\n        <template\n          v-slot:reset-icon\n          v-if=\"isVue3\"\n        >\n          <slot\n            name=\"reset-icon\"\n          />\n        </template>\n        <slot\n          v-if=\"isVue2\"\n          name=\"reset-icon\"\n          slot=\"reset-icon\"\n        />\n      </search-input>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectSearchBox } from 'instantsearch.js/es/connectors';\nimport { createSuitMixin } from '../mixins/suit';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { isVue3, isVue2 } from '../util/vue-compat';\nimport SearchInput from './SearchInput.vue';\n\nexport default {\n  name: 'AisSearchBox',\n  mixins: [\n    createWidgetMixin({ connector: connectSearchBox }),\n    createSuitMixin({ name: 'SearchBox' }),\n  ],\n  components: {\n    SearchInput,\n  },\n  props: {\n    placeholder: {\n      type: String,\n      default: 'Search here…',\n    },\n    autofocus: {\n      type: Boolean,\n      default: false,\n    },\n    showLoadingIndicator: {\n      type: Boolean,\n      default: false,\n    },\n    submitTitle: {\n      type: String,\n      default: 'Search',\n    },\n    resetTitle: {\n      type: String,\n      default: 'Clear',\n    },\n    value: {\n      type: String,\n      default: undefined,\n    },\n    modelValue: {\n      type: String,\n      default: undefined,\n    },\n  },\n  data() {\n    return {\n      localValue: '',\n      isVue2,\n      isVue3,\n    };\n  },\n  computed: {\n    isControlled() {\n      return (\n        typeof this.value !== 'undefined' ||\n        typeof this.modelValue !== 'undefined'\n      );\n    },\n    model() {\n      return this.value || this.modelValue;\n    },\n    currentRefinement: {\n      get() {\n        // if the input is controlled, but not up to date\n        // this means it didn't search, and we should pretend it was `set`\n        if (this.isControlled && this.model !== this.localValue) {\n          // eslint-disable-next-line vue/no-side-effects-in-computed-properties\n          this.localValue = this.model;\n          this.$emit('input', this.model);\n          this.$emit('update:modelValue', this.model);\n          this.state.refine(this.model);\n        }\n        return this.model || this.state.query || '';\n      },\n      set(val) {\n        this.localValue = val;\n        this.state.refine(val);\n        if (this.isControlled) {\n          this.$emit('input', val);\n          this.$emit('update:modelValue', val);\n        }\n      },\n    },\n  },\n};\n</script>\n","<template>\n  <ais-highlighter\n    :hit=\"hit\"\n    :attribute=\"attribute\"\n    :highlighted-tag-name=\"highlightedTagName\"\n    :suit=\"suit\"\n    highlight-property=\"_snippetResult\"\n    pre-tag=\"<mark>\"\n    post-tag=\"</mark>\"\n  />\n</template>\n\n<script>\nimport { createSuitMixin } from '../mixins/suit';\nimport AisHighlighter from './Highlighter.vue';\n\nexport default {\n  name: 'AisSnippet',\n  mixins: [createSuitMixin({ name: 'Snippet' })],\n  components: { AisHighlighter },\n  props: {\n    hit: {\n      type: Object,\n      required: true,\n    },\n    attribute: {\n      type: String,\n      required: true,\n    },\n    highlightedTagName: {\n      type: String,\n      default: 'mark',\n    },\n  },\n};\n</script>\n","<template>\n  <ais-highlighter\n    :hit=\"hit\"\n    :attribute=\"attribute\"\n    :highlighted-tag-name=\"highlightedTagName\"\n    :suit=\"suit\"\n    highlight-property=\"_snippetResult\"\n    pre-tag=\"<mark>\"\n    post-tag=\"</mark>\"\n  />\n</template>\n\n<script>\nimport { createSuitMixin } from '../mixins/suit';\nimport AisHighlighter from './Highlighter.vue';\n\nexport default {\n  name: 'AisSnippet',\n  mixins: [createSuitMixin({ name: 'Snippet' })],\n  components: { AisHighlighter },\n  props: {\n    hit: {\n      type: Object,\n      required: true,\n    },\n    attribute: {\n      type: String,\n      required: true,\n    },\n    highlightedTagName: {\n      type: String,\n      default: 'mark',\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    :class=\"suit()\"\n    v-if=\"state\"\n  >\n    <slot\n      :items=\"state.options\"\n      :has-no-results=\"state.hasNoResults\"\n      :refine=\"state.refine\"\n      :current-refinement=\"state.currentRefinement\"\n    >\n      <select\n        :class=\"suit('select')\"\n        @change=\"state.refine($event.currentTarget.value)\"\n      >\n        <option\n          v-for=\"item in state.options\"\n          :key=\"item.value\"\n          :class=\"suit('option')\"\n          :value=\"item.value\"\n          :selected=\"item.value === state.currentRefinement\"\n        >{{ item.label }}</option>\n      </select>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectSortBy } from 'instantsearch.js/es/connectors';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createSuitMixin } from '../mixins/suit';\nimport { createWidgetMixin } from '../mixins/widget';\n\nexport default {\n  name: 'AisSortBy',\n  mixins: [\n    createSuitMixin({ name: 'SortBy' }),\n    createWidgetMixin({ connector: connectSortBy }),\n\n    createPanelConsumerMixin({\n      mapStateToCanRefine: state => state.hasNoResults === false,\n    }),\n  ],\n  props: {\n    items: {\n      type: Array,\n      required: true,\n    },\n    transformItems: {\n      type: Function,\n      default: undefined,\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        items: this.items,\n        transformItems: this.transformItems,\n      };\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    :class=\"suit()\"\n    v-if=\"state\"\n  >\n    <slot\n      :items=\"state.options\"\n      :has-no-results=\"state.hasNoResults\"\n      :refine=\"state.refine\"\n      :current-refinement=\"state.currentRefinement\"\n    >\n      <select\n        :class=\"suit('select')\"\n        @change=\"state.refine($event.currentTarget.value)\"\n      >\n        <option\n          v-for=\"item in state.options\"\n          :key=\"item.value\"\n          :class=\"suit('option')\"\n          :value=\"item.value\"\n          :selected=\"item.value === state.currentRefinement\"\n        >{{ item.label }}</option>\n      </select>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectSortBy } from 'instantsearch.js/es/connectors';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createSuitMixin } from '../mixins/suit';\nimport { createWidgetMixin } from '../mixins/widget';\n\nexport default {\n  name: 'AisSortBy',\n  mixins: [\n    createSuitMixin({ name: 'SortBy' }),\n    createWidgetMixin({ connector: connectSortBy }),\n\n    createPanelConsumerMixin({\n      mapStateToCanRefine: state => state.hasNoResults === false,\n    }),\n  ],\n  props: {\n    items: {\n      type: Array,\n      required: true,\n    },\n    transformItems: {\n      type: Function,\n      default: undefined,\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        items: this.items,\n        transformItems: this.transformItems,\n      };\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    v-if=\"state\"\n    :class=\"suit()\"\n  >\n    <slot\n      v-bind=\"state\"\n      :results=\"state.instantSearchInstance.helper.lastResults\"\n    >\n      <span :class=\"suit('text')\"><template v-if=\"state.areHitsSorted\">{{ state.nbSortedHits.toLocaleString() }} relevant results sorted out of {{ state.nbHits.toLocaleString() }}</template><template v-else>{{ state.nbHits.toLocaleString() }} results</template> found in {{ state.processingTimeMS.toLocaleString() }}ms</span>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { createWidgetMixin } from '../mixins/widget';\nimport { connectStats } from 'instantsearch.js/es/connectors';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisStats',\n  mixins: [\n    createWidgetMixin({ connector: connectStats }),\n    createSuitMixin({ name: 'Stats' }),\n  ],\n  computed: {\n    widgetParams() {\n      return {};\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    v-if=\"state\"\n    :class=\"suit()\"\n  >\n    <slot\n      v-bind=\"state\"\n      :results=\"state.instantSearchInstance.helper.lastResults\"\n    >\n      <span :class=\"suit('text')\"><template v-if=\"state.areHitsSorted\">{{ state.nbSortedHits.toLocaleString() }} relevant results sorted out of {{ state.nbHits.toLocaleString() }}</template><template v-else>{{ state.nbHits.toLocaleString() }} results</template> found in {{ state.processingTimeMS.toLocaleString() }}ms</span>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { createWidgetMixin } from '../mixins/widget';\nimport { connectStats } from 'instantsearch.js/es/connectors';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisStats',\n  mixins: [\n    createWidgetMixin({ connector: connectStats }),\n    createSuitMixin({ name: 'Stats' }),\n  ],\n  computed: {\n    widgetParams() {\n      return {};\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    v-if=\"state\"\n    :class=\"[suit(), !canRefine && suit('', 'noRefinement')]\"\n  >\n    <slot\n      :value=\"state.value\"\n      :can-refine=\"canRefine\"\n      :refine=\"state.refine\"\n      :createURL=\"state.createURL\"\n      :send-event=\"state.sendEvent\"\n    >\n      <label :class=\"suit('label')\">\n        <input\n          :class=\"suit('checkbox')\"\n          type=\"checkbox\"\n          :name=\"state.value.name\"\n          :value=\"on\"\n          :checked=\"state.value.isRefined\"\n          @change=\"state.refine(state.value)\"\n        >\n        <span :class=\"suit('labelText')\">{{ label }}</span>\n        <span\n          v-if=\"state.value.count !== null\"\n          :class=\"suit('count')\"\n        >{{ state.value.count.toLocaleString() }}</span>\n      </label>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectToggleRefinement } from 'instantsearch.js/es/connectors';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createSuitMixin } from '../mixins/suit';\n\nconst mapStateToCanRefine = state => Boolean(state.value && state.value.count);\n\nexport default {\n  name: 'AisToggleRefinement',\n  mixins: [\n    createSuitMixin({ name: 'ToggleRefinement' }),\n    createWidgetMixin({ connector: connectToggleRefinement }),\n    createPanelConsumerMixin({\n      mapStateToCanRefine,\n    }),\n  ],\n  props: {\n    attribute: {\n      type: String,\n      required: true,\n    },\n    label: {\n      type: String,\n      required: true,\n    },\n    on: {\n      type: [String, Number, Boolean, Array],\n      required: false,\n      default: true,\n    },\n    off: {\n      type: [String, Number, Boolean, Array],\n      required: false,\n      default: undefined,\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        attribute: this.attribute,\n        label: this.label,\n        on: this.on,\n        off: this.off,\n      };\n    },\n    canRefine() {\n      return mapStateToCanRefine(this.state);\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    v-if=\"state\"\n    :class=\"[suit(), !canRefine && suit('', 'noRefinement')]\"\n  >\n    <slot\n      :value=\"state.value\"\n      :can-refine=\"canRefine\"\n      :refine=\"state.refine\"\n      :createURL=\"state.createURL\"\n      :send-event=\"state.sendEvent\"\n    >\n      <label :class=\"suit('label')\">\n        <input\n          :class=\"suit('checkbox')\"\n          type=\"checkbox\"\n          :name=\"state.value.name\"\n          :value=\"on\"\n          :checked=\"state.value.isRefined\"\n          @change=\"state.refine(state.value)\"\n        >\n        <span :class=\"suit('labelText')\">{{ label }}</span>\n        <span\n          v-if=\"state.value.count !== null\"\n          :class=\"suit('count')\"\n        >{{ state.value.count.toLocaleString() }}</span>\n      </label>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectToggleRefinement } from 'instantsearch.js/es/connectors';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createSuitMixin } from '../mixins/suit';\n\nconst mapStateToCanRefine = state => Boolean(state.value && state.value.count);\n\nexport default {\n  name: 'AisToggleRefinement',\n  mixins: [\n    createSuitMixin({ name: 'ToggleRefinement' }),\n    createWidgetMixin({ connector: connectToggleRefinement }),\n    createPanelConsumerMixin({\n      mapStateToCanRefine,\n    }),\n  ],\n  props: {\n    attribute: {\n      type: String,\n      required: true,\n    },\n    label: {\n      type: String,\n      required: true,\n    },\n    on: {\n      type: [String, Number, Boolean, Array],\n      required: false,\n      default: true,\n    },\n    off: {\n      type: [String, Number, Boolean, Array],\n      required: false,\n      default: undefined,\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        attribute: this.attribute,\n        label: this.label,\n        on: this.on,\n        off: this.off,\n      };\n    },\n    canRefine() {\n      return mapStateToCanRefine(this.state);\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    v-if=\"state\"\n    :class=\"suit()\"\n  >\n    <slot v-bind=\"rootSlotProps\">\n      <button\n        type=\"button\"\n        :class=\"suit('button')\"\n        :title=\"state.isBrowserSupported ? buttonTitle : disabledButtonTitle\"\n        :disabled=\"!state.isBrowserSupported\"\n        @click=\"handleClick\"\n      >\n        <slot\n          name=\"buttonText\"\n          v-bind=\"innerSlotProps\"\n        >\n          <svg\n            v-bind=\"buttonSvgAttrs\"\n            v-if=\"errorNotAllowed\"\n          >\n            <line\n              x1=\"1\"\n              y1=\"1\"\n              x2=\"23\"\n              y2=\"23\"\n            />\n            <path d=\"M9 9v3a3 3 0 0 0 5.12 2.12M15 9.34V4a3 3 0 0 0-5.94-.6\" />\n            <path d=\"M17 16.95A7 7 0 0 1 5 12v-2m14 0v2a7 7 0 0 1-.11 1.23\" />\n            <line\n              x1=\"12\"\n              y1=\"19\"\n              x2=\"12\"\n              y2=\"23\"\n            />\n            <line\n              x1=\"8\"\n              y1=\"23\"\n              x2=\"16\"\n              y2=\"23\"\n            />\n          </svg>\n          <svg\n            v-bind=\"buttonSvgAttrs\"\n            v-else\n          >\n            <path\n              d=\"M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z\"\n              :fill=\"state.isListening ? 'currentColor' : 'none'\"\n            />\n            <path d=\"M19 10v2a7 7 0 0 1-14 0v-2\" />\n            <line\n              x1=\"12\"\n              y1=\"19\"\n              x2=\"12\"\n              y2=\"23\"\n            />\n            <line\n              x1=\"8\"\n              y1=\"23\"\n              x2=\"16\"\n              y2=\"23\"\n            />\n          </svg>\n        </slot>\n      </button>\n      <div :class=\"suit('status')\">\n        <slot\n          name=\"status\"\n          v-bind=\"innerSlotProps\"\n        >\n          <p>{{ state.voiceListeningState.transcript }}</p>\n        </slot>\n      </div>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectVoiceSearch } from 'instantsearch.js/es/connectors';\nimport { createSuitMixin } from '../mixins/suit';\nimport { createWidgetMixin } from '../mixins/widget';\n\nexport default {\n  name: 'AisVoiceSearch',\n  mixins: [\n    createWidgetMixin({ connector: connectVoiceSearch }),\n    createSuitMixin({ name: 'VoiceSearch' }),\n  ],\n  props: {\n    searchAsYouSpeak: {\n      type: Boolean,\n      required: false,\n      default: undefined,\n    },\n    buttonTitle: {\n      type: String,\n      required: false,\n      default: 'Search by voice',\n    },\n    disabledButtonTitle: {\n      type: String,\n      required: false,\n      default: 'Search by voice (not supported on this browser)',\n    },\n  },\n  data() {\n    return {\n      buttonSvgAttrs: {\n        xmlns: 'http://www.w3.org/2000/svg',\n        width: '16',\n        height: '16',\n        viewBox: '0 0 24 24',\n        fill: 'none',\n        stroke: 'currentColor',\n        strokeWidth: '2',\n        strokeLinecap: 'round',\n        strokeLinejoin: 'round',\n      },\n    };\n  },\n  computed: {\n    widgetParams() {\n      return {\n        searchAsYouSpeak: this.searchAsYouSpeak,\n      };\n    },\n    errorNotAllowed() {\n      return (\n        this.state.voiceListeningState.status === 'error' &&\n        this.state.voiceListeningState.errorCode === 'not-allowed'\n      );\n    },\n    rootSlotProps() {\n      return {\n        isBrowserSupported: this.state.isBrowserSupported,\n        isListening: this.state.isListening,\n        toggleListening: this.state.toggleListening,\n        voiceListeningState: this.state.voiceListeningState,\n      };\n    },\n    innerSlotProps() {\n      return {\n        status: this.state.voiceListeningState.status,\n        errorCode: this.state.voiceListeningState.errorCode,\n        isListening: this.state.isListening,\n        transcript: this.state.voiceListeningState.transcript,\n        isSpeechFinal: this.state.voiceListeningState.isSpeechFinal,\n        isBrowserSupported: this.state.isBrowserSupported,\n      };\n    },\n  },\n  methods: {\n    handleClick(event) {\n      event.currentTarget.blur();\n      this.state.toggleListening();\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    v-if=\"state\"\n    :class=\"suit()\"\n  >\n    <slot v-bind=\"rootSlotProps\">\n      <button\n        type=\"button\"\n        :class=\"suit('button')\"\n        :title=\"state.isBrowserSupported ? buttonTitle : disabledButtonTitle\"\n        :disabled=\"!state.isBrowserSupported\"\n        @click=\"handleClick\"\n      >\n        <slot\n          name=\"buttonText\"\n          v-bind=\"innerSlotProps\"\n        >\n          <svg\n            v-bind=\"buttonSvgAttrs\"\n            v-if=\"errorNotAllowed\"\n          >\n            <line\n              x1=\"1\"\n              y1=\"1\"\n              x2=\"23\"\n              y2=\"23\"\n            />\n            <path d=\"M9 9v3a3 3 0 0 0 5.12 2.12M15 9.34V4a3 3 0 0 0-5.94-.6\" />\n            <path d=\"M17 16.95A7 7 0 0 1 5 12v-2m14 0v2a7 7 0 0 1-.11 1.23\" />\n            <line\n              x1=\"12\"\n              y1=\"19\"\n              x2=\"12\"\n              y2=\"23\"\n            />\n            <line\n              x1=\"8\"\n              y1=\"23\"\n              x2=\"16\"\n              y2=\"23\"\n            />\n          </svg>\n          <svg\n            v-bind=\"buttonSvgAttrs\"\n            v-else\n          >\n            <path\n              d=\"M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z\"\n              :fill=\"state.isListening ? 'currentColor' : 'none'\"\n            />\n            <path d=\"M19 10v2a7 7 0 0 1-14 0v-2\" />\n            <line\n              x1=\"12\"\n              y1=\"19\"\n              x2=\"12\"\n              y2=\"23\"\n            />\n            <line\n              x1=\"8\"\n              y1=\"23\"\n              x2=\"16\"\n              y2=\"23\"\n            />\n          </svg>\n        </slot>\n      </button>\n      <div :class=\"suit('status')\">\n        <slot\n          name=\"status\"\n          v-bind=\"innerSlotProps\"\n        >\n          <p>{{ state.voiceListeningState.transcript }}</p>\n        </slot>\n      </div>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectVoiceSearch } from 'instantsearch.js/es/connectors';\nimport { createSuitMixin } from '../mixins/suit';\nimport { createWidgetMixin } from '../mixins/widget';\n\nexport default {\n  name: 'AisVoiceSearch',\n  mixins: [\n    createWidgetMixin({ connector: connectVoiceSearch }),\n    createSuitMixin({ name: 'VoiceSearch' }),\n  ],\n  props: {\n    searchAsYouSpeak: {\n      type: Boolean,\n      required: false,\n      default: undefined,\n    },\n    buttonTitle: {\n      type: String,\n      required: false,\n      default: 'Search by voice',\n    },\n    disabledButtonTitle: {\n      type: String,\n      required: false,\n      default: 'Search by voice (not supported on this browser)',\n    },\n  },\n  data() {\n    return {\n      buttonSvgAttrs: {\n        xmlns: 'http://www.w3.org/2000/svg',\n        width: '16',\n        height: '16',\n        viewBox: '0 0 24 24',\n        fill: 'none',\n        stroke: 'currentColor',\n        strokeWidth: '2',\n        strokeLinecap: 'round',\n        strokeLinejoin: 'round',\n      },\n    };\n  },\n  computed: {\n    widgetParams() {\n      return {\n        searchAsYouSpeak: this.searchAsYouSpeak,\n      };\n    },\n    errorNotAllowed() {\n      return (\n        this.state.voiceListeningState.status === 'error' &&\n        this.state.voiceListeningState.errorCode === 'not-allowed'\n      );\n    },\n    rootSlotProps() {\n      return {\n        isBrowserSupported: this.state.isBrowserSupported,\n        isListening: this.state.isListening,\n        toggleListening: this.state.toggleListening,\n        voiceListeningState: this.state.voiceListeningState,\n      };\n    },\n    innerSlotProps() {\n      return {\n        status: this.state.voiceListeningState.status,\n        errorCode: this.state.voiceListeningState.errorCode,\n        isListening: this.state.isListening,\n        transcript: this.state.voiceListeningState.transcript,\n        isSpeechFinal: this.state.voiceListeningState.isSpeechFinal,\n        isBrowserSupported: this.state.isBrowserSupported,\n      };\n    },\n  },\n  methods: {\n    handleClick(event) {\n      event.currentTarget.blur();\n      this.state.toggleListening();\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    v-if=\"state && state.isVirtualReplica\"\n    :class=\"suit()\"\n  >\n    <slot\n      :is-relevant-sorted=\"state.isRelevantSorted\"\n      :refine=\"state.refine\"\n    >\n      <div :class=\"suit('text')\">\n        <slot\n          name=\"text\"\n          :is-relevant-sorted=\"state.isRelevantSorted\"\n        />\n      </div>\n      <button\n        type=\"button\"\n        :class=\"suit('button')\"\n        @click=\"refine()\"\n      >\n        <slot\n          name=\"button\"\n          :is-relevant-sorted=\"state.isRelevantSorted\"\n        >{{ state.isRelevantSorted ? 'See all results' : 'See relevant results' }}</slot>\n      </button>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectRelevantSort } from 'instantsearch.js/es/connectors';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisRelevantSort',\n  mixins: [\n    createSuitMixin({ name: 'RelevantSort' }),\n    createWidgetMixin({ connector: connectRelevantSort }),\n  ],\n  methods: {\n    refine() {\n      if (this.state.isRelevantSorted) {\n        this.state.refine(0);\n      } else {\n        this.state.refine(undefined);\n      }\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    v-if=\"state && state.isVirtualReplica\"\n    :class=\"suit()\"\n  >\n    <slot\n      :is-relevant-sorted=\"state.isRelevantSorted\"\n      :refine=\"state.refine\"\n    >\n      <div :class=\"suit('text')\">\n        <slot\n          name=\"text\"\n          :is-relevant-sorted=\"state.isRelevantSorted\"\n        />\n      </div>\n      <button\n        type=\"button\"\n        :class=\"suit('button')\"\n        @click=\"refine()\"\n      >\n        <slot\n          name=\"button\"\n          :is-relevant-sorted=\"state.isRelevantSorted\"\n        >{{ state.isRelevantSorted ? 'See all results' : 'See relevant results' }}</slot>\n      </button>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectRelevantSort } from 'instantsearch.js/es/connectors';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisRelevantSort',\n  mixins: [\n    createSuitMixin({ name: 'RelevantSort' }),\n    createWidgetMixin({ connector: connectRelevantSort }),\n  ],\n  methods: {\n    refine() {\n      if (this.state.isRelevantSorted) {\n        this.state.refine(0);\n      } else {\n        this.state.refine(undefined);\n      }\n    },\n  },\n};\n</script>\n","import { createWidgetMixin } from '../mixins/widget';\nimport { connectDynamicWidgets } from 'instantsearch.js/es/connectors';\nimport { createSuitMixin } from '../mixins/suit';\nimport { _objectSpread } from '../util/polyfills';\nimport { isVue3, renderCompat, getDefaultSlot } from '../util/vue-compat';\n\nfunction getWidgetAttribute(vnode) {\n  const props = isVue3\n    ? vnode.props\n    : vnode.componentOptions && vnode.componentOptions.propsData;\n  if (props) {\n    if (props.attribute) {\n      return props.attribute;\n    }\n    if (Array.isArray(props.attributes)) {\n      return props.attributes[0];\n    }\n  }\n\n  let children;\n  if (isVue3) {\n    children =\n      vnode.children && vnode.children.default && vnode.children.default();\n  } else {\n    children =\n      vnode.componentOptions && vnode.componentOptions.children\n        ? vnode.componentOptions.children\n        : vnode.children;\n  }\n\n  if (Array.isArray(children)) {\n    // return first child with a truthy attribute\n    return children.reduce(\n      (acc, curr) => acc || getWidgetAttribute(curr),\n      undefined\n    );\n  }\n\n  return undefined;\n}\n\nexport default {\n  name: 'AisExperimentalDynamicWidgets',\n  mixins: [\n    createWidgetMixin({ connector: connectDynamicWidgets }),\n    createSuitMixin({ name: 'DynamicWidgets' }),\n  ],\n  props: {\n    transformItems: {\n      type: Function,\n      default: undefined,\n    },\n  },\n  render: renderCompat(function(h) {\n    const components = new Map();\n\n    (getDefaultSlot(this) || []).forEach(vnode => {\n      const attribute = getWidgetAttribute(vnode);\n      if (attribute) {\n        components.set(\n          attribute,\n          h('div', { key: attribute, class: [this.suit('widget')] }, [vnode])\n        );\n      }\n    });\n\n    // by default, render everything, but hidden so that the routing doesn't disappear\n    if (!this.state) {\n      const allComponents = [];\n      components.forEach(component => allComponents.push(component));\n\n      return h(\n        'div',\n        _objectSpread(\n          {\n            class: [this.suit()],\n          },\n          { attrs: { hidden: true } }\n        ),\n        allComponents\n      );\n    }\n\n    return h(\n      'div',\n      { class: [this.suit()] },\n      this.state.attributesToRender.map(attribute => components.get(attribute))\n    );\n  }),\n  computed: {\n    widgetParams() {\n      return {\n        transformItems: this.transformItems,\n        // we do not pass \"widgets\" to the connector, since Vue is in charge of rendering\n        widgets: [],\n      };\n    },\n  },\n};\n","/* eslint import/namespace: ['error', { allowComputed: true }]*/\n\nimport * as widgets from './widgets';\n\nexport const plugin = {\n  install(localVue) {\n    Object.keys(widgets).forEach(widgetName => {\n      localVue.component(widgets[widgetName].name, widgets[widgetName]);\n    });\n  },\n};\n","import instantsearch from 'instantsearch.js/es';\nimport algoliaHelper from 'algoliasearch-helper';\nimport { isVue3, isVue2, Vue2, createSSRApp } from '../util/vue-compat';\nconst { SearchResults, SearchParameters } = algoliaHelper;\nimport { warn } from './warn';\n\nfunction walkIndex(indexWidget, visit) {\n  visit(indexWidget);\n\n  return indexWidget.getWidgets().forEach(widget => {\n    if (widget.$$type !== 'ais.index') return;\n    visit(widget);\n    walkIndex(widget, visit);\n  });\n}\n\nfunction searchOnlyWithDerivedHelpers(helper) {\n  return new Promise((resolve, reject) => {\n    helper.searchOnlyWithDerivedHelpers();\n\n    // we assume all derived helpers resolve at least in the same tick\n    helper.derivedHelpers[0].on('result', () => {\n      resolve();\n    });\n\n    helper.derivedHelpers.forEach(derivedHelper =>\n      derivedHelper.on('error', e => {\n        reject(e);\n      })\n    );\n  });\n}\n\nfunction defaultCloneComponent(componentInstance, { mixins = [] } = {}) {\n  const options = {\n    serverPrefetch: undefined,\n    fetch: undefined,\n    _base: undefined,\n    name: 'ais-ssr-root-component',\n  };\n\n  let app;\n\n  if (isVue3) {\n    const appOptions = Object.assign({}, componentInstance.$options, options);\n    appOptions.mixins = [...appOptions.mixins, ...mixins];\n    app = createSSRApp(appOptions);\n    if (componentInstance.$router) {\n      app.use(componentInstance.$router);\n    }\n    if (componentInstance.$store) {\n      app.use(componentInstance.$store);\n    }\n  } else {\n    // copy over global Vue APIs\n    options.router = componentInstance.$router;\n    options.store = componentInstance.$store;\n\n    const Extended = componentInstance.$vnode\n      ? componentInstance.$vnode.componentOptions.Ctor.extend(options)\n      : Vue2.component(Object.assign({}, componentInstance.$options, options));\n\n    app = new Extended({\n      propsData: componentInstance.$options.propsData,\n      mixins: [...mixins],\n    });\n  }\n\n  // https://stackoverflow.com/a/48195006/3185307\n  app.$slots = componentInstance.$slots;\n  app.$root = componentInstance.$root;\n  if (isVue2) {\n    app.$options.serverPrefetch = [];\n  }\n\n  return app;\n}\n\nfunction augmentInstantSearch(\n  instantSearchOptions,\n  searchClient,\n  indexName,\n  cloneComponent\n) {\n  /* eslint-disable no-param-reassign */\n\n  const helper = algoliaHelper(searchClient, indexName);\n  const search = instantsearch(instantSearchOptions);\n\n  let resultsState;\n\n  /**\n   * main API for SSR, called in serverPrefetch of a root component which contains instantsearch\n   * @param {Object} props the object including `component` and `renderToString`\n   * @param {Object} props.component the calling component's `this`\n   * @param {Function} props.renderToString the function to render componentInstance to string\n   * @returns {Promise} result of the search, to save for .hydrate\n   */\n  search.findResultsState = function({ component, renderToString }) {\n    if (!renderToString) {\n      throw new Error(\n        'findResultsState requires `renderToString: (component) => Promise<string>` in the first argument.'\n      );\n    }\n\n    let app;\n    let renderedComponent;\n\n    return Promise.resolve()\n      .then(() => {\n        app = cloneComponent(component, {\n          mixins: [\n            {\n              created() {\n                // eslint-disable-next-line consistent-this\n                renderedComponent = this;\n                this.instantsearch.helper = helper;\n                this.instantsearch.mainHelper = helper;\n\n                this.instantsearch.mainIndex.init({\n                  instantSearchInstance: this.instantsearch,\n                  parent: null,\n                  uiState: this.instantsearch._initialUiState,\n                });\n              },\n            },\n          ],\n        });\n      })\n      .then(() => renderToString(app))\n      .then(() => searchOnlyWithDerivedHelpers(helper))\n      .then(() => {\n        const results = {};\n        walkIndex(renderedComponent.instantsearch.mainIndex, widget => {\n          results[widget.getIndexId()] = widget.getResults();\n        });\n\n        search.hydrate(results);\n\n        resultsState = Object.keys(results)\n          .map(indexId => {\n            const { _state, _rawResults } = results[indexId];\n            return [\n              indexId,\n              {\n                // copy just the values of SearchParameters, not the functions\n                _state: Object.keys(_state).reduce((acc, key) => {\n                  acc[key] = _state[key];\n                  return acc;\n                }, {}),\n                _rawResults,\n              },\n            ];\n          })\n          .reduce(\n            (acc, [key, val]) => {\n              acc[key] = val;\n              return acc;\n            },\n            {\n              __identifier: 'stringified',\n            }\n          );\n        return search.getState();\n      });\n  };\n\n  /**\n   * @returns {Promise} result state to serialize and enter into .hydrate\n   */\n  search.getState = function() {\n    if (!resultsState) {\n      throw new Error('You need to wait for findResultsState to finish');\n    }\n    return resultsState;\n  };\n\n  /**\n   * make sure correct data is available in each widget's state.\n   * called in widget mixin with (this.widget, this)\n   *\n   * @param {object} widget The widget instance\n   * @param {object} parent The local parent index\n   * @returns {void}\n   */\n  search.__forceRender = function(widget, parent) {\n    const localHelper = parent.getHelper();\n\n    const results = search.__initialSearchResults[parent.getIndexId()];\n\n    // this happens when a different InstantSearch gets rendered initially,\n    // after the hydrate finished. There's thus no initial results available.\n    if (!results) {\n      return;\n    }\n\n    const state = results._state;\n\n    // helper gets created in init, but that means it doesn't get the injected\n    // parameters, because those are from the lastResults\n    localHelper.state = state;\n\n    widget.render({\n      helper: localHelper,\n      results,\n      scopedResults: parent.getScopedResults().map(result =>\n        Object.assign(result, {\n          results: search.__initialSearchResults[result.indexId],\n        })\n      ),\n      parent,\n      state,\n      templatesConfig: {},\n      createURL: parent.createURL,\n      instantSearchInstance: search,\n      searchMetadata: {\n        isSearchStalled: false,\n      },\n    });\n  };\n\n  /**\n   * Called both in server\n   * @param {object} results a map of indexId: SearchResults\n   * @returns {void}\n   */\n  search.hydrate = function(results) {\n    if (!results) {\n      warn(\n        'The result of `findResultsState()` needs to be passed to `hydrate()`.'\n      );\n      return;\n    }\n\n    const initialResults =\n      results.__identifier === 'stringified'\n        ? Object.keys(results).reduce((acc, indexId) => {\n            if (indexId === '__identifier') {\n              return acc;\n            }\n            acc[indexId] = new SearchResults(\n              new SearchParameters(results[indexId]._state),\n              results[indexId]._rawResults\n            );\n            return acc;\n          }, {})\n        : results;\n\n    search.__initialSearchResults = initialResults;\n\n    search.helper = helper;\n    search.mainHelper = helper;\n\n    search.mainIndex.init({\n      instantSearchInstance: search,\n      parent: null,\n      uiState: search._initialUiState,\n    });\n  };\n\n  /* eslint-enable no-param-reassign */\n  return search;\n}\n\nexport function createServerRootMixin(instantSearchOptions = {}) {\n  const {\n    searchClient,\n    indexName,\n    $cloneComponent = defaultCloneComponent,\n  } = instantSearchOptions;\n\n  if (!searchClient || !indexName) {\n    throw new Error(\n      'createServerRootMixin requires `searchClient` and `indexName` in the first argument'\n    );\n  }\n\n  const search = augmentInstantSearch(\n    instantSearchOptions,\n    searchClient,\n    indexName,\n    $cloneComponent\n  );\n\n  // put this in the user's root Vue instance\n  // we can then reuse that InstantSearch instance seamlessly from `ais-instant-search-ssr`\n  const rootMixin = {\n    provide() {\n      return {\n        $_ais_ssrInstantSearchInstance: this.instantsearch,\n      };\n    },\n    data() {\n      return {\n        // this is in data, so that the real & duplicated render do not share\n        // the same instantsearch instance.\n        instantsearch: search,\n      };\n    },\n  };\n\n  return rootMixin;\n}\n"],"names":["suit","widgetName","element","modifier","Error","const","elements","push","join","createSuitMixin","ref","props","classNames","type","Object","default","undefined","methods","className","name","userClassName","this","isVue2","isVue3","renderCompat","fn","h","tag","children","attrs","flatProps","assign","Vue.h","call","getDefaultSlot","component","$slots","cache","Set","warn","message","has","add","console","createWidgetMixin","inject","instantSearchInstance","from","$options","_componentTag","TypeError","getParentIndex","mainIndex","data","state","created","connector","factory","updateState","widget","widgetParams","addWidgets","__initialSearchResults","started","__forceRender","removeWidgets","watch","handler","nextWidgetParams","deep","isFirstRender","mixins","connectAutocomplete","escapeHTML","Boolean","required","computed","_createVNode","_ctx","_createBlock","class","_renderSlot","refine","currentRefinement","indices","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","PANEL_EMITTER_NAMESPACE","PANEL_CHANGE_EVENT","createPanelProviderMixin","emitter","mitt","provide","canRefine","on","value","updateCanRefine","all","clear","createPanelConsumerMixin","emit","hasAlreadyEmitted","immediate","nextState","previousState","previousCanRefine","mapStateToCanRefine","nextCanRefine","connectBreadcrumb","attributes","Array","separator","String","rootPath","transformItems","Function","isLastItem","index","items","length","createURL","href","onClick","item","key","label","aria-hidden","connectClearRefinements","hasRefinements","excludedAttributes","includedAttributes","disabled","inheritAttrs","connectConfigure","searchParameters","$attrs","render","slot","EXPERIMENTAL_connectConfigureRelatedItems","hit","matchingPatterns","transformSearchParameters","connectCurrentRefinements","noRefinement","createItemKey","attribute","capitalize","toString","charAt","toLocaleUpperCase","slice","refinements","refinement","level","Number","$props","count","connectHierarchicalMenu","components","HierarchicalMenuList","limit","showMoreLimit","showMore","sortBy","showParentLevel","canToggleShowMore","isShowingMore","toggleShowMore","sendEvent","htmlUnescapes","&amp;","&lt;","&gt;","&quot;","&#39;","reEscapedHtml","reHasEscapedHtml","RegExp","source","unescape","string","test","replace","character","TAG_PLACEHOLDER","highlightPreTag","highlightPostTag","parseHighlightedAttribute","splitByPreTag","highlightedValue","split","preTag","firstValue","shift","isHighlighted","postTag","let","forEach","splitByPostTag","parseAlgoliaHit","highlightObject","getPropertyByPath","highlightProperty","isArray","map","TextNode","context","slots","highlightedTagName","parsedHighlights","$data","AisHighlighter","highlighted-tag-name","highlight-property","pre-tag","post-tag","connectHitsWithInsights","hits","insights","itemIndex","objectID","connectHitsPerPage","hasNoResults","selected","find","handleChange","onChange","connectIndex","indexWidget","$_ais_getParentIndex","indexName","indexId","_objectSpread","target","i","arguments","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","_defineProperty","obj","defineProperty","configurable","writable","createInstantSearchComponent","$_ais_instantSearchInstance","searchClient","helper","setClient","search","setIndex","stalledSearchDelay","_stalledSearchDelay","routing","searchFunction","_searchFunction","middlewares","next","prev","middleware","indexOf","middlewareToRemove","unuse","middlewareToAdd","use","client","addAlgoliaAgent","vueVersion","version","mounted","$nextTick","start","dispose","oldApiWarning","insightsClient","validator","router","stateMapping","initialUiState","apiKey","appId","instantsearch","$_ais_ssrInstantSearchInstance","connectInfiniteHitsWithInsights","showPrevious","refinePrevious","refineNext","page","results","isFirstPage","isLastPage","connectMenu","showShowMoreButton","isRefined","$event","currentTarget","connectNumericMenu","checked","connectPagination","nbPages","padding","totalPages","showFirst","showLast","showNext","emits","p","Math","min","max","$emit","nbHits","pages","aria-label","getSlot","theme","algoliaUrl","location","hostname","fill","d","rel","style","viewBox","connectQueryRules","trackedFilters","transformRuleContexts","range","connectRange","precision","minInput","maxInput","updated","step","pow","values","minValue","Infinity","minRange","maxValue","maxRange","pick","first","second","onSubmit","placeholder","connectRatingMenu","xmlns","id","xlink:href","stars","full","n","width","height","autofocus","showLoadingIndicator","shouldShowLoadingIndicator","submitTitle","resetTitle","modelValue","query","onFormSubmit","$refs","input","blur","onFormReset","fillRule","fill-rule","transform","stroke-width","stroke-opacity","cx","cy","r","attributeName","to","dur","repeatCount","action","role","novalidate","onReset","_createCommentVNode","autocorrect","autocapitalize","autocomplete","spellcheck","maxlength","onFocus","onBlur","onInput","title","hidden","stroke","noop","SearchInput","AisHighlight","connectRefinementList","searchable","searchablePlaceholder","operator","searchForFacetValuesQuery","searchForFacetValues","get","set","searchForItems","_highlightResult","highlighted","escapeFacetValues","searchForItemsQuery","isFromSearch","class-names","connectStateResults","renderFn","unmountFn","init","resultsCopy","stateCopy","stateResults","connectSearchBox","localValue","isControlled","model","val","isSearchStalled","show-loading-indicator","should-show-loading-indicator","submit-title","reset-title","connectSortBy","options","connectStats","_mergeProps","lastResults","_Fragment","nbSortedHits","toLocaleString","processingTimeMS","connectToggleRefinement","off","connectVoiceSearch","searchAsYouSpeak","buttonTitle","disabledButtonTitle","buttonSvgAttrs","strokeWidth","strokeLinecap","strokeLinejoin","errorNotAllowed","voiceListeningState","status","errorCode","rootSlotProps","isBrowserSupported","isListening","toggleListening","innerSlotProps","transcript","isSpeechFinal","handleClick","event","x1","y1","x2","y2","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","connectRelevantSort","isRelevantSorted","isVirtualReplica","getWidgetAttribute","vnode","reduce","acc","curr","connectDynamicWidgets","Map","allComponents","attributesToRender","widgets","plugin","install","localVue","walkIndex","visit","getWidgets","$$type","searchOnlyWithDerivedHelpers","Promise","resolve","reject","derivedHelpers","derivedHelper","e","defaultCloneComponent","componentInstance","app","serverPrefetch","fetch","_base","appOptions","createSSRApp","$router","$store","$root","augmentInstantSearch","instantSearchOptions","cloneComponent","resultsState","algoliaHelper","findResultsState","renderedComponent","renderToString","then","mainHelper","parent","uiState","_initialUiState","getIndexId","getResults","hydrate","_state","_rawResults","__identifier","getState","localHelper","getHelper","scopedResults","getScopedResults","result","templatesConfig","searchMetadata","initialResults","SearchResults","SearchParameters","createServerRootMixin","$cloneComponent"],"mappings":"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"}